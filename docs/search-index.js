crystal_doc_search_index_callback({"repository_name":"lattice-core","body":"# lattice-core\n\nLattice is a family of scientific computing libraries written for Crystal. This repository\nimplements Lattice's core functionality - generic multidimensional arrays, tensors, and other\ngeneral-purpose utilities.\n\n## Core Principles\n\nOur primary motivation is to make scientific computing enjoyable, and we do that by putting **user experience above all else**. Lattice only requires that you add it to your `shard.yml` - there are no C libraries you have to install.\n\nWe also aim to keep our contribution useful by making Lattice as **modular and well-contained** as possible. Writing a serious scientific computing library is a large undertaking. Because Lattice Core is small and modular, it should still be useful and expansible even after core maintainers leave.\n\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     lattice-core:\n       github: your-github-user/lattice-core\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"lattice-core\"\n```\n\nTODO: Write usage instructions here\n\n## Development\n\nTODO: Write development instructions here\n\n## Contributing\n\n1. Fork it (<https://github.com/your-github-user/lattice-core/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [your-name-here](https://github.com/your-github-user) - creator and maintainer\n","program":{"html_id":"lattice-core/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"lattice-core","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"lattice-core/Complex","path":"Complex.html","kind":"struct","full_name":"Complex","name":"Complex","abstract":false,"superclass":{"html_id":"lattice-core/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"lattice-core/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"lattice-core/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"lattice-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/patches/complex.cr","line_number":8,"url":null}],"repository_name":"lattice-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"this patch makes it possible to operate elementwise on a Number and an NArray (in that order)\ne.g.\n``` 5 + NArray.new([1,2,3]) #=> [6,7,8] ```","summary":"<p>this patch makes it possible to operate elementwise on a Number and an NArray (in that order) e.g.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"%(other:MultiIndexable(U))forallU-instance-method","html_id":"%(other:MultiIndexable(U))forallU-instance-method","name":"%","doc":"Invokes `#%` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code>#%</code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":9,"url":null},"def":{"name":"%","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self % elem\nend"}},{"id":"&(other:MultiIndexable(U))forallU-instance-method","html_id":"&(other:MultiIndexable(U))forallU-instance-method","name":"&","doc":"Invokes `#&` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#&(other:MultiIndexable(U))forallU-instance-method\">#&</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":9,"url":null},"def":{"name":"&","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self & elem\nend"}},{"id":"&**(other:MultiIndexable(U))forallU-instance-method","html_id":"&**(other:MultiIndexable(U))forallU-instance-method","name":"&**","doc":"Invokes `#&**` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#&**(other:MultiIndexable(U))forallU-instance-method\">#&**</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":9,"url":null},"def":{"name":"&**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self &** elem\nend"}},{"id":"&+(other:MultiIndexable(U))forallU-instance-method","html_id":"&+(other:MultiIndexable(U))forallU-instance-method","name":"&+","doc":"Invokes `#&+` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#&+(other:MultiIndexable(U))forallU-instance-method\">#&+</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":9,"url":null},"def":{"name":"&+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self &+ elem\nend"}},{"id":"&-(other:MultiIndexable(U))forallU-instance-method","html_id":"&-(other:MultiIndexable(U))forallU-instance-method","name":"&-","doc":"Invokes `#&-` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#&-(other:MultiIndexable(U))forallU-instance-method\">#&-</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":9,"url":null},"def":{"name":"&-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self &- elem\nend"}},{"id":"*(other:MultiIndexable(U))forallU-instance-method","html_id":"*(other:MultiIndexable(U))forallU-instance-method","name":"*","doc":"Invokes `#*` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#*(other:MultiIndexable(U))forallU-instance-method\">#*</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":9,"url":null},"def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self * elem\nend"}},{"id":"**(other:MultiIndexable(U))forallU-instance-method","html_id":"**(other:MultiIndexable(U))forallU-instance-method","name":"**","doc":"Invokes `#**` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#**(other:MultiIndexable(U))forallU-instance-method\">#**</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":9,"url":null},"def":{"name":"**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self ** elem\nend"}},{"id":"+(other:MultiIndexable(U))forallU-instance-method","html_id":"+(other:MultiIndexable(U))forallU-instance-method","name":"+","doc":"Invokes `#+` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#+(other:MultiIndexable(U))forallU-instance-method\">#+</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":9,"url":null},"def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self + elem\nend"}},{"id":"-(other:MultiIndexable(U))forallU-instance-method","html_id":"-(other:MultiIndexable(U))forallU-instance-method","name":"-","doc":"Invokes `#-` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#-(other:MultiIndexable(U))forallU-instance-method\">#-</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":9,"url":null},"def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self - elem\nend"}},{"id":"/(other:MultiIndexable(U))forallU-instance-method","html_id":"/(other:MultiIndexable(U))forallU-instance-method","name":"/","doc":"Invokes `#/` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#/(other:MultiIndexable(U))forallU-instance-method\">#/</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":9,"url":null},"def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self / elem\nend"}},{"id":"//(other:MultiIndexable(U))forallU-instance-method","html_id":"//(other:MultiIndexable(U))forallU-instance-method","name":"//","doc":"Invokes `#//` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#//(other:MultiIndexable(U))forallU-instance-method\">#//</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":9,"url":null},"def":{"name":"//","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self // elem\nend"}},{"id":"<(other:MultiIndexable(U))forallU-instance-method","html_id":"<(other:MultiIndexable(U))forallU-instance-method","name":"<","doc":"Invokes `#<` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#%3C(other:MultiIndexable(U))forallU-instance-method\">#<</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":9,"url":null},"def":{"name":"<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self < elem\nend"}},{"id":"<=(other:MultiIndexable(U))forallU-instance-method","html_id":"<=(other:MultiIndexable(U))forallU-instance-method","name":"<=","doc":"Invokes `#<=` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#%3C=(other:MultiIndexable(U))forallU-instance-method\">#<=</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":9,"url":null},"def":{"name":"<=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self <= elem\nend"}},{"id":">(other:MultiIndexable(U))forallU-instance-method","html_id":">(other:MultiIndexable(U))forallU-instance-method","name":">","doc":"Invokes `#>` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#%3E(other:MultiIndexable(U))forallU-instance-method\">#></a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":9,"url":null},"def":{"name":">","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self > elem\nend"}},{"id":">=(other:MultiIndexable(U))forallU-instance-method","html_id":">=(other:MultiIndexable(U))forallU-instance-method","name":">=","doc":"Invokes `#>=` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#%3E=(other:MultiIndexable(U))forallU-instance-method\">#>=</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":9,"url":null},"def":{"name":">=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self >= elem\nend"}},{"id":"^(other:MultiIndexable(U))forallU-instance-method","html_id":"^(other:MultiIndexable(U))forallU-instance-method","name":"^","doc":"Invokes `#^` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#%5E(other:MultiIndexable(U))forallU-instance-method\">#^</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":9,"url":null},"def":{"name":"^","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self ^ elem\nend"}},{"id":"|(other:MultiIndexable(U))forallU-instance-method","html_id":"|(other:MultiIndexable(U))forallU-instance-method","name":"|","doc":"Invokes `#|` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Complex.html#%7C(other:MultiIndexable(U))forallU-instance-method\">#|</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/complex.cr","line_number":9,"url":null},"def":{"name":"|","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self | elem\nend"}}],"macros":[],"types":[]},{"html_id":"lattice-core/Lattice","path":"Lattice.html","kind":"module","full_name":"Lattice","name":"Lattice","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/exceptions/exceptions.cr","line_number":1,"url":null},{"filename":"src/lattice.cr","line_number":13,"url":null},{"filename":"src/n_array/n_array.cr","line_number":5,"url":null},{"filename":"src/n_dim/formatter.cr","line_number":7,"url":null},{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":52,"url":null},{"filename":"src/n_dim/multi_indexable.cr","line_number":5,"url":null},{"filename":"src/n_dim/multi_writable.cr","line_number":5,"url":null},{"filename":"src/n_dim/order.cr","line_number":1,"url":null},{"filename":"src/n_dim/region_helpers.cr","line_number":1,"url":null},{"filename":"src/views/processed_view.cr","line_number":3,"url":null},{"filename":"src/views/view.cr","line_number":3,"url":null},{"filename":"src/views/view_object.cr","line_number":3,"url":null}],"repository_name":"lattice-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"TODO: Write documentation for `Lattice::Core`","summary":"<p><span class=\"flag orange\">TODO</span>  Write documentation for <code>Lattice::Core</code></p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"lattice-core/Lattice/DimensionError","path":"Lattice/DimensionError.html","kind":"class","full_name":"Lattice::DimensionError","name":"DimensionError","abstract":false,"superclass":{"html_id":"lattice-core/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"lattice-core/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"lattice-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lattice-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/exceptions/exceptions.cr","line_number":2,"url":null}],"repository_name":"lattice-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"lattice-core/Lattice","kind":"module","full_name":"Lattice","name":"Lattice"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"lattice-core/Lattice/MultiEnumerable","path":"Lattice/MultiEnumerable.html","kind":"module","full_name":"Lattice::MultiEnumerable(T)","name":"MultiEnumerable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/exceptions/exceptions.cr","line_number":5,"url":null}],"repository_name":"lattice-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"lattice-core/Lattice","kind":"module","full_name":"Lattice","name":"Lattice"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"lattice-core/Lattice/MultiEnumerable/EmptyError","path":"Lattice/MultiEnumerable/EmptyError.html","kind":"class","full_name":"Lattice::MultiEnumerable::EmptyError","name":"EmptyError","abstract":false,"superclass":{"html_id":"lattice-core/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"lattice-core/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"lattice-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lattice-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/exceptions/exceptions.cr","line_number":6,"url":null}],"repository_name":"lattice-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"lattice-core/Lattice/MultiEnumerable","kind":"module","full_name":"Lattice::MultiEnumerable(T)","name":"MultiEnumerable"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"lattice-core/Lattice/MultiIndexable","path":"Lattice/MultiIndexable.html","kind":"module","full_name":"Lattice::MultiIndexable(T)","name":"MultiIndexable","abstract":false,"superclass":null,"ancestors":[{"html_id":"lattice-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"locations":[{"filename":"src/n_dim/formatter.cr","line_number":8,"url":null},{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":53,"url":null},{"filename":"src/n_dim/multi_indexable.cr","line_number":10,"url":null}],"repository_name":"lattice-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"lattice-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"lattice-core/Lattice/NArray","kind":"class","full_name":"Lattice::NArray(T)","name":"NArray"},{"html_id":"lattice-core/Lattice/ProcessedView","kind":"class","full_name":"Lattice::ProcessedView(B, T, R)","name":"ProcessedView"},{"html_id":"lattice-core/Lattice/ViewObject","kind":"module","full_name":"Lattice::ViewObject(B, T, R)","name":"ViewObject"}],"namespace":{"html_id":"lattice-core/Lattice","kind":"module","full_name":"Lattice","name":"Lattice"},"doc":"Assumptions:\n- length along every axis is finite and positive, and each element is positively indexed\n- size is stored as an Int32, i.e. there are no more than Int32::MAX elements.","summary":"<p>Assumptions: - length along every axis is finite and positive, and each element is positively indexed - size is stored as an Int32, i.e.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"%(other:MultiIndexable(U))forallU-instance-method","html_id":"%(other:MultiIndexable(U))forallU-instance-method","name":"%","doc":"Invokes `#%` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code>#%</code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"%","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  raise(DimensionError.new(\"Cannot perform elementwise operation %: shapes #{other.shape_internal} of other and #{shape_internal} of self do not match\"))\nend\nmap_with_coord do |elem, coord|\n  elem % ((other.unsafe_fetch_element(coord)).as(U))\nend\n"}},{"id":"%(other)-instance-method","html_id":"%(other)-instance-method","name":"%","doc":"Invokes `#%(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code>#%(other)</code> on each element in <code>self</code>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"%","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.%(other))"}},{"id":"&(other:MultiIndexable(U))forallU-instance-method","html_id":"&(other:MultiIndexable(U))forallU-instance-method","name":"&","doc":"Invokes `#&` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#&(other:MultiIndexable(U))forallU-instance-method\">#&</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"&","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  raise(DimensionError.new(\"Cannot perform elementwise operation &: shapes #{other.shape_internal} of other and #{shape_internal} of self do not match\"))\nend\nmap_with_coord do |elem, coord|\n  elem & ((other.unsafe_fetch_element(coord)).as(U))\nend\n"}},{"id":"&(other)-instance-method","html_id":"&(other)-instance-method","name":"&","doc":"Invokes `#&(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#&(other:MultiIndexable(U))forallU-instance-method\">#&(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"&","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.&(other))"}},{"id":"&**(other:MultiIndexable(U))forallU-instance-method","html_id":"&**(other:MultiIndexable(U))forallU-instance-method","name":"&**","doc":"Invokes `#&**` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#&**(other:MultiIndexable(U))forallU-instance-method\">#&**</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"&**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  raise(DimensionError.new(\"Cannot perform elementwise operation &**: shapes #{other.shape_internal} of other and #{shape_internal} of self do not match\"))\nend\nmap_with_coord do |elem, coord|\n  elem &** ((other.unsafe_fetch_element(coord)).as(U))\nend\n"}},{"id":"&**(other)-instance-method","html_id":"&**(other)-instance-method","name":"&**","doc":"Invokes `#&**(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#&**(other:MultiIndexable(U))forallU-instance-method\">#&**(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"&**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.&**(other))"}},{"id":"&+(other)-instance-method","html_id":"&+(other)-instance-method","name":"&+","doc":"Invokes `#&+(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#&+(other)-instance-method\">#&+(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"&+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.&+(other))"}},{"id":"&+(other:MultiIndexable(U))forallU-instance-method","html_id":"&+(other:MultiIndexable(U))forallU-instance-method","name":"&+","doc":"Invokes `#&+` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#&+(other)-instance-method\">#&+</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"&+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  raise(DimensionError.new(\"Cannot perform elementwise operation &+: shapes #{other.shape_internal} of other and #{shape_internal} of self do not match\"))\nend\nmap_with_coord do |elem, coord|\n  elem &+ ((other.unsafe_fetch_element(coord)).as(U))\nend\n"}},{"id":"&-(other)-instance-method","html_id":"&-(other)-instance-method","name":"&-","doc":"Invokes `#&-(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#&-(other)-instance-method\">#&-(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"&-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.&-(other))"}},{"id":"&-(other:MultiIndexable(U))forallU-instance-method","html_id":"&-(other:MultiIndexable(U))forallU-instance-method","name":"&-","doc":"Invokes `#&-` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#&-(other)-instance-method\">#&-</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"&-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  raise(DimensionError.new(\"Cannot perform elementwise operation &-: shapes #{other.shape_internal} of other and #{shape_internal} of self do not match\"))\nend\nmap_with_coord do |elem, coord|\n  elem &- ((other.unsafe_fetch_element(coord)).as(U))\nend\n"}},{"id":"*(other)-instance-method","html_id":"*(other)-instance-method","name":"*","doc":"Invokes `#*(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#*(other)-instance-method\">#*(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.*(other))"}},{"id":"*(other:MultiIndexable(U))forallU-instance-method","html_id":"*(other:MultiIndexable(U))forallU-instance-method","name":"*","doc":"Invokes `#*` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#*(other)-instance-method\">#*</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  raise(DimensionError.new(\"Cannot perform elementwise operation *: shapes #{other.shape_internal} of other and #{shape_internal} of self do not match\"))\nend\nmap_with_coord do |elem, coord|\n  elem * ((other.unsafe_fetch_element(coord)).as(U))\nend\n"}},{"id":"**(other:MultiIndexable(U))forallU-instance-method","html_id":"**(other:MultiIndexable(U))forallU-instance-method","name":"**","doc":"Invokes `#**` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#**(other:MultiIndexable(U))forallU-instance-method\">#**</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  raise(DimensionError.new(\"Cannot perform elementwise operation **: shapes #{other.shape_internal} of other and #{shape_internal} of self do not match\"))\nend\nmap_with_coord do |elem, coord|\n  elem ** ((other.unsafe_fetch_element(coord)).as(U))\nend\n"}},{"id":"**(other)-instance-method","html_id":"**(other)-instance-method","name":"**","doc":"Invokes `#**(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#**(other:MultiIndexable(U))forallU-instance-method\">#**(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.**(other))"}},{"id":"+(other)-instance-method","html_id":"+(other)-instance-method","name":"+","doc":"Invokes `#+(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#+(other)-instance-method\">#+(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.+(other))"}},{"id":"+(other:MultiIndexable(U))forallU-instance-method","html_id":"+(other:MultiIndexable(U))forallU-instance-method","name":"+","doc":"Invokes `#+` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#+-instance-method\">#+</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  raise(DimensionError.new(\"Cannot perform elementwise operation +: shapes #{other.shape_internal} of other and #{shape_internal} of self do not match\"))\nend\nmap_with_coord do |elem, coord|\n  elem + ((other.unsafe_fetch_element(coord)).as(U))\nend\n"}},{"id":"+-instance-method","html_id":"+-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"+","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.+)"}},{"id":"-(other)-instance-method","html_id":"-(other)-instance-method","name":"-","doc":"Invokes `#-(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#-(other)-instance-method\">#-(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.-(other))"}},{"id":"--instance-method","html_id":"--instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"-","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.-)"}},{"id":"-(other:MultiIndexable(U))forallU-instance-method","html_id":"-(other:MultiIndexable(U))forallU-instance-method","name":"-","doc":"Invokes `#-` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#--instance-method\">#-</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  raise(DimensionError.new(\"Cannot perform elementwise operation -: shapes #{other.shape_internal} of other and #{shape_internal} of self do not match\"))\nend\nmap_with_coord do |elem, coord|\n  elem - ((other.unsafe_fetch_element(coord)).as(U))\nend\n"}},{"id":"/(other)-instance-method","html_id":"/(other)-instance-method","name":"/","doc":"Invokes `#/(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#/(other)-instance-method\">#/(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&./(other))"}},{"id":"/(other:MultiIndexable(U))forallU-instance-method","html_id":"/(other:MultiIndexable(U))forallU-instance-method","name":"/","doc":"Invokes `#/` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#/(other)-instance-method\">#/</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  raise(DimensionError.new(\"Cannot perform elementwise operation /: shapes #{other.shape_internal} of other and #{shape_internal} of self do not match\"))\nend\nmap_with_coord do |elem, coord|\n  elem / ((other.unsafe_fetch_element(coord)).as(U))\nend\n"}},{"id":"//(other)-instance-method","html_id":"//(other)-instance-method","name":"//","doc":"Invokes `#//(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#//(other)-instance-method\">#//(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"//","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.//(other))"}},{"id":"//(other:MultiIndexable(U))forallU-instance-method","html_id":"//(other:MultiIndexable(U))forallU-instance-method","name":"//","doc":"Invokes `#//` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#//(other)-instance-method\">#//</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"//","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  raise(DimensionError.new(\"Cannot perform elementwise operation //: shapes #{other.shape_internal} of other and #{shape_internal} of self do not match\"))\nend\nmap_with_coord do |elem, coord|\n  elem // ((other.unsafe_fetch_element(coord)).as(U))\nend\n"}},{"id":"<(other:MultiIndexable(U))forallU-instance-method","html_id":"<(other:MultiIndexable(U))forallU-instance-method","name":"<","doc":"Invokes `#<` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#%3C(other:MultiIndexable(U))forallU-instance-method\">#<</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  raise(DimensionError.new(\"Cannot perform elementwise operation <: shapes #{other.shape_internal} of other and #{shape_internal} of self do not match\"))\nend\nmap_with_coord do |elem, coord|\n  elem < ((other.unsafe_fetch_element(coord)).as(U))\nend\n"}},{"id":"<(other)-instance-method","html_id":"<(other)-instance-method","name":"<","doc":"Invokes `#<(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#%3C(other:MultiIndexable(U))forallU-instance-method\">#<(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.<(other))"}},{"id":"<=(other)-instance-method","html_id":"<=(other)-instance-method","name":"<=","doc":"Invokes `#<=(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#%3C=(other)-instance-method\">#<=(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"<=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.<=(other))"}},{"id":"<=(other:MultiIndexable(U))forallU-instance-method","html_id":"<=(other:MultiIndexable(U))forallU-instance-method","name":"<=","doc":"Invokes `#<=` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#%3C=(other)-instance-method\">#<=</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"<=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  raise(DimensionError.new(\"Cannot perform elementwise operation <=: shapes #{other.shape_internal} of other and #{shape_internal} of self do not match\"))\nend\nmap_with_coord do |elem, coord|\n  elem <= ((other.unsafe_fetch_element(coord)).as(U))\nend\n"}},{"id":"(other)-instance-method","html_id":"(other)-instance-method","name":"<=>","doc":"Invokes `#<=>(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#(other)-instance-method\">#<=>(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"<=>","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.<=>(other))"}},{"id":"(other:MultiIndexable(U))forallU-instance-method","html_id":"(other:MultiIndexable(U))forallU-instance-method","name":"<=>","doc":"Invokes `#<=>` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#(other)-instance-method\">#<=></a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"<=>","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  raise(DimensionError.new(\"Cannot perform elementwise operation <=>: shapes #{other.shape_internal} of other and #{shape_internal} of self do not match\"))\nend\nmap_with_coord do |elem, coord|\n  elem <=> ((other.unsafe_fetch_element(coord)).as(U))\nend\n"}},{"id":">(other:MultiIndexable(U))forallU-instance-method","html_id":">(other:MultiIndexable(U))forallU-instance-method","name":">","doc":"Invokes `#>` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#%3E(other:MultiIndexable(U))forallU-instance-method\">#></a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":">","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  raise(DimensionError.new(\"Cannot perform elementwise operation >: shapes #{other.shape_internal} of other and #{shape_internal} of self do not match\"))\nend\nmap_with_coord do |elem, coord|\n  elem > ((other.unsafe_fetch_element(coord)).as(U))\nend\n"}},{"id":">(other)-instance-method","html_id":">(other)-instance-method","name":">","doc":"Invokes `#>(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#%3E(other:MultiIndexable(U))forallU-instance-method\">#>(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":">","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.>(other))"}},{"id":">=(other)-instance-method","html_id":">=(other)-instance-method","name":">=","doc":"Invokes `#>=(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#%3E=(other)-instance-method\">#>=(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":">=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.>=(other))"}},{"id":">=(other:MultiIndexable(U))forallU-instance-method","html_id":">=(other:MultiIndexable(U))forallU-instance-method","name":">=","doc":"Invokes `#>=` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#%3E=(other)-instance-method\">#>=</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":">=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  raise(DimensionError.new(\"Cannot perform elementwise operation >=: shapes #{other.shape_internal} of other and #{shape_internal} of self do not match\"))\nend\nmap_with_coord do |elem, coord|\n  elem >= ((other.unsafe_fetch_element(coord)).as(U))\nend\n"}},{"id":"[](region:Range)-instance-method","html_id":"[](region:Range)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Range"}],"args_string":"(region : Range)","args_html":"(region : Range)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":120,"url":null},"def":{"name":"[]","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Range"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"get_region([region])"}},{"id":"[](*region)-instance-method","html_id":"[](*region)-instance-method","name":"[]","doc":"Tuple-accepting overload of `#{{name}}`.\nNOTE: cannot be (easily) generated in the macro since it requires syntax `[tuple]` rather than `[](tuple)`","summary":"<p>Tuple-accepting overload of <code>#{{name}}</code>.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"args_string":"(*region)","args_html":"(*region)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":131,"url":null},"def":{"name":"[]","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"get_region(region)"}},{"id":"[](region:Enumerable)-instance-method","html_id":"[](region:Enumerable)-instance-method","name":"[]","doc":"Copies the elements in `region` to a new `{{type}}`, and throws an error if `region` is out-of-bounds for this `{{type}}`.","summary":"<p>Copies the elements in <code>region</code> to a new <code>{{type}}</code>, and throws an error if <code>region</code> is out-of-bounds for this <code>{{type}}</code>.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"}],"args_string":"(region : Enumerable)","args_html":"(region : Enumerable)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":125,"url":null},"def":{"name":"[]","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"get_region(region)"}},{"id":"^(other:MultiIndexable(U))forallU-instance-method","html_id":"^(other:MultiIndexable(U))forallU-instance-method","name":"^","doc":"Invokes `#^` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#%5E(other:MultiIndexable(U))forallU-instance-method\">#^</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"^","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  raise(DimensionError.new(\"Cannot perform elementwise operation ^: shapes #{other.shape_internal} of other and #{shape_internal} of self do not match\"))\nend\nmap_with_coord do |elem, coord|\n  elem ^ ((other.unsafe_fetch_element(coord)).as(U))\nend\n"}},{"id":"^(other)-instance-method","html_id":"^(other)-instance-method","name":"^","doc":"Invokes `#^(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#%5E(other:MultiIndexable(U))forallU-instance-method\">#^(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"^","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.^(other))"}},{"id":"dimensions:Int32-instance-method","html_id":"dimensions:Int32-instance-method","name":"dimensions","doc":"Returns the number of indices required to specify an element in `{{type}}`.","summary":"<p>Returns the number of indices required to specify an element in <code>{{type}}</code>.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":83,"url":null},"def":{"name":"dimensions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"shape_internal.size"}},{"id":"each(iter_type:RegionIterator.class,**args)-instance-method","html_id":"each(iter_type:RegionIterator.class,**args)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"iter_type","doc":null,"default_value":"","external_name":"iter_type","restriction":"RegionIterator.class"}],"args_string":"(iter_type : <span class=\"t\">RegionIterator</span>.<span class=\"k\">class</span>, **args)","args_html":"(iter_type : <span class=\"t\">RegionIterator</span>.<span class=\"k\">class</span>, **args)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":168,"url":null},"def":{"name":"each","args":[{"name":"iter_type","doc":null,"default_value":"","external_name":"iter_type","restriction":"RegionIterator.class"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"iter_type.new(self, **args)"}},{"id":"each(order:Order=Order::LEX,&)-instance-method","html_id":"each(order:Order=Order::LEX,&)-instance-method","name":"each","doc":"Must yield this collection's elements to the block.","summary":"<p>Must yield this collection's elements to the block.</p>","abstract":false,"args":[{"name":"order","doc":null,"default_value":"Order::LEX","external_name":"order","restriction":"Order"}],"args_string":"(order : Order = <span class=\"t\">Order</span><span class=\"t\">::</span><span class=\"t\">LEX</span>, &)","args_html":"(order : <a href=\"../Lattice/Order.html\">Order</a> = <span class=\"t\">Order</span><span class=\"t\">::</span><span class=\"t\">LEX</span>, &)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":149,"url":null},"def":{"name":"each","args":[{"name":"order","doc":null,"default_value":"Order::LEX","external_name":"order","restriction":"Order"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"(each(order)).each do |elem, coord|\n  yield elem\nend"}},{"id":"each(order:Order=Order::LEX)-instance-method","html_id":"each(order:Order=Order::LEX)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"order","doc":null,"default_value":"Order::LEX","external_name":"order","restriction":"Order"}],"args_string":"(order : Order = <span class=\"t\">Order</span><span class=\"t\">::</span><span class=\"t\">LEX</span>)","args_html":"(order : <a href=\"../Lattice/Order.html\">Order</a> = <span class=\"t\">Order</span><span class=\"t\">::</span><span class=\"t\">LEX</span>)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":145,"url":null},"def":{"name":"each","args":[{"name":"order","doc":null,"default_value":"Order::LEX","external_name":"order","restriction":"Order"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"each_in_canonical_region(nil, order)"}},{"id":"each_fastest-instance-method","html_id":"each_fastest-instance-method","name":"each_fastest","doc":"A method to get all elements in this `{{@type}}` when order is irrelevant.\nRecommended that implementers override this method to take advantage of\nthe storage scheme the implementation uses","summary":"<p>A method to get all elements in this <code>{{@type}}</code> when order is irrelevant.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":164,"url":null},"def":{"name":"each_fastest","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"each_in_canonical_region_fastest(nil)"}},{"id":"each_in_canonical_region_fastest(region)-instance-method","html_id":"each_in_canonical_region_fastest(region)-instance-method","name":"each_in_canonical_region_fastest","doc":null,"summary":null,"abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"args_string":"(region)","args_html":"(region)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":189,"url":null},"def":{"name":"each_in_canonical_region_fastest","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"each_in_canonical_region(region, Order::LEX)"}},{"id":"each_with_coord(order:Order=Order::LEX,&)-instance-method","html_id":"each_with_coord(order:Order=Order::LEX,&)-instance-method","name":"each_with_coord","doc":null,"summary":null,"abstract":false,"args":[{"name":"order","doc":null,"default_value":"Order::LEX","external_name":"order","restriction":"Order"}],"args_string":"(order : Order = <span class=\"t\">Order</span><span class=\"t\">::</span><span class=\"t\">LEX</span>, &)","args_html":"(order : <a href=\"../Lattice/Order.html\">Order</a> = <span class=\"t\">Order</span><span class=\"t\">::</span><span class=\"t\">LEX</span>, &)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":155,"url":null},"def":{"name":"each_with_coord","args":[{"name":"order","doc":null,"default_value":"Order::LEX","external_name":"order","restriction":"Order"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":null,"return_type":"","visibility":"Public","body":"(each(order)).each do |elem, coord|\n  yield elem, coord\nend"}},{"id":"empty?:Bool-instance-method","html_id":"empty?:Bool-instance-method","name":"empty?","doc":"Checks that the `{{type}}` contains no elements.","summary":"<p>Checks that the <code>{{type}}</code> contains no elements.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":41,"url":null},"def":{"name":"empty?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"size == 0"}},{"id":"eq_elem(other:MultiIndexable(U)):MultiIndexable(Bool)forallU-instance-method","html_id":"eq_elem(other:MultiIndexable(U)):MultiIndexable(Bool)forallU-instance-method","name":"eq_elem","doc":"TODO: rename!\nProduces an NArray(Bool) (by default) describing which elements of self and other are equal.","summary":"<p><span class=\"flag orange\">TODO</span>  rename! Produces an NArray(Bool) (by default) describing which elements of self and other are equal.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) : MultiIndexable(Bool) forall U","args_html":"(other : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(U)) : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(Bool) forall U","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":229,"url":null},"def":{"name":"eq_elem","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"MultiIndexable(Bool)","visibility":"Public","body":"if shape_internal != other.shape_internal\n  raise(DimensionError.new(\"Cannot perform elementwise operation {{name.id}}: shapes #{other.shape_internal} of other and #{shape_internal} of self do not match\"))\nend\nmap_with_coord do |elem, coord|\n  elem == (other.unsafe_fetch_element(coord))\nend\n"}},{"id":"equals?(other:MultiIndexable):Bool-instance-method","html_id":"equals?(other:MultiIndexable):Bool-instance-method","name":"equals?","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable"}],"args_string":"(other : MultiIndexable) : Bool","args_html":"(other : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>) : Bool","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":208,"url":null},"def":{"name":"equals?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"equals?(other) do |this_elem, other_elem|\n  this_elem == other_elem\nend"}},{"id":"equals?(other:MultiIndexable,&):Bool-instance-method","html_id":"equals?(other:MultiIndexable,&):Bool-instance-method","name":"equals?","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable"}],"args_string":"(other : MultiIndexable, &) : Bool","args_html":"(other : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>, &) : Bool","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":214,"url":null},"def":{"name":"equals?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if shape_internal != other.shape_internal\n  return false\nend\neach_with_coord do |elem, coord|\n  if yield elem, other.unsafe_fetch_element(coord)\n  else\n    return false\n  end\nend\nreturn true\n"}},{"id":"first:T-instance-method","html_id":"first:T-instance-method","name":"first","doc":"Returns the element at position `0` along every axis.","summary":"<p>Returns the element at position <code>0</code> along every axis.</p>","abstract":false,"args":[],"args_string":" : T","args_html":" : T","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":64,"url":null},"def":{"name":"first","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"return get_element([0] * shape_internal.size)"}},{"id":"get(coord):T-instance-method","html_id":"get(coord):T-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"args_string":"(coord) : T","args_html":"(coord) : T","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":108,"url":null},"def":{"name":"get","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"get_element(coord)"}},{"id":"get(*tuple)-instance-method","html_id":"get(*tuple)-instance-method","name":"get","doc":"Tuple-accepting overload of `#\"get\"`.","summary":"<p>Tuple-accepting overload of <code>#\"get\"</code>.</p>","abstract":false,"args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""}],"args_string":"(*tuple)","args_html":"(*tuple)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":135,"url":null},"def":{"name":"get","args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"get(tuple)"}},{"id":"get_available(region:Enumerable)-instance-method","html_id":"get_available(region:Enumerable)-instance-method","name":"get_available","doc":null,"summary":null,"abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"}],"args_string":"(region : Enumerable)","args_html":"(region : Enumerable)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":116,"url":null},"def":{"name":"get_available","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"get_region(RegionHelpers.trim_region(region, shape))"}},{"id":"get_element(coord:Enumerable):T-instance-method","html_id":"get_element(coord:Enumerable):T-instance-method","name":"get_element","doc":"Retrieves the element specified by `coord`, and throws an error if `coord` is out-of-bounds for this `{{type}}`.","summary":"<p>Retrieves the element specified by <code>coord</code>, and throws an error if <code>coord</code> is out-of-bounds for this <code>{{type}}</code>.</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Enumerable"}],"args_string":"(coord : Enumerable) : T","args_html":"(coord : Enumerable) : T","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":104,"url":null},"def":{"name":"get_element","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"unsafe_fetch_element(RegionHelpers.canonicalize_coord(coord, shape_internal))"}},{"id":"get_element(*tuple)-instance-method","html_id":"get_element(*tuple)-instance-method","name":"get_element","doc":"Tuple-accepting overload of `#\"get_element\"`.","summary":"<p>Tuple-accepting overload of <code>#\"get_element\"</code>.</p>","abstract":false,"args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""}],"args_string":"(*tuple)","args_html":"(*tuple)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":135,"url":null},"def":{"name":"get_element","args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"get_element(tuple)"}},{"id":"get_region(coord:Enumerable,region_shape:Enumerable)-instance-method","html_id":"get_region(coord:Enumerable,region_shape:Enumerable)-instance-method","name":"get_region","doc":null,"summary":null,"abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Enumerable"},{"name":"region_shape","doc":null,"default_value":"","external_name":"region_shape","restriction":"Enumerable"}],"args_string":"(coord : Enumerable, region_shape : Enumerable)","args_html":"(coord : Enumerable, region_shape : Enumerable)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":112,"url":null},"def":{"name":"get_region","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Enumerable"},{"name":"region_shape","doc":null,"default_value":"","external_name":"region_shape","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"get_region(RegionHelpers.translate_shape(region_shape, coord))"}},{"id":"get_region(region:Enumerable)-instance-method","html_id":"get_region(region:Enumerable)-instance-method","name":"get_region","doc":"Copies the elements in `region` to a new `{{type}}`, and throws an error if `region` is out-of-bounds for this `{{type}}`.","summary":"<p>Copies the elements in <code>region</code> to a new <code>{{type}}</code>, and throws an error if <code>region</code> is out-of-bounds for this <code>{{type}}</code>.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"}],"args_string":"(region : Enumerable)","args_html":"(region : Enumerable)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":99,"url":null},"def":{"name":"get_region","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"unsafe_fetch_region(RegionHelpers.canonicalize_region(region, shape_internal))"}},{"id":"get_region(*tuple)-instance-method","html_id":"get_region(*tuple)-instance-method","name":"get_region","doc":"Tuple-accepting overload of `#\"get_region\"`.","summary":"<p>Tuple-accepting overload of <code>#\"get_region\"</code>.</p>","abstract":false,"args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""}],"args_string":"(*tuple)","args_html":"(*tuple)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":135,"url":null},"def":{"name":"get_region","args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"get_region(tuple)"}},{"id":"has_coord?(coord:Enumerable):Bool-instance-method","html_id":"has_coord?(coord:Enumerable):Bool-instance-method","name":"has_coord?","doc":"Checks that `coord` is in-bounds for this `{{type}}`.","summary":"<p>Checks that <code>coord</code> is in-bounds for this <code>{{type}}</code>.</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Enumerable"}],"args_string":"(coord : Enumerable) : Bool","args_html":"(coord : Enumerable) : Bool","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":89,"url":null},"def":{"name":"has_coord?","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"RegionHelpers.has_coord?(coord, shape_internal)"}},{"id":"has_coord?(*tuple)-instance-method","html_id":"has_coord?(*tuple)-instance-method","name":"has_coord?","doc":"Tuple-accepting overload of `#\"has_coord?\"`.","summary":"<p>Tuple-accepting overload of <code>#\"has_coord?\"</code>.</p>","abstract":false,"args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""}],"args_string":"(*tuple)","args_html":"(*tuple)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":135,"url":null},"def":{"name":"has_coord?","args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"has_coord?(tuple)"}},{"id":"has_region?(*tuple)-instance-method","html_id":"has_region?(*tuple)-instance-method","name":"has_region?","doc":"Tuple-accepting overload of `#\"has_region?\"`.","summary":"<p>Tuple-accepting overload of <code>#\"has_region?\"</code>.</p>","abstract":false,"args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""}],"args_string":"(*tuple)","args_html":"(*tuple)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":135,"url":null},"def":{"name":"has_region?","args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"has_region?(tuple)"}},{"id":"has_region?(region:Enumerable):Bool-instance-method","html_id":"has_region?(region:Enumerable):Bool-instance-method","name":"has_region?","doc":"Checks that `region` is in-bounds for this `{{type}}`.","summary":"<p>Checks that <code>region</code> is in-bounds for this <code>{{type}}</code>.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"}],"args_string":"(region : Enumerable) : Bool","args_html":"(region : Enumerable) : Bool","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":94,"url":null},"def":{"name":"has_region?","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"RegionHelpers.has_region?(region, shape_internal)"}},{"id":"sample(random=Random::DEFAULT)-instance-method","html_id":"sample(random=Random::DEFAULT)-instance-method","name":"sample","doc":"Returns a random element from the `{{type}}`.","summary":"<p>Returns a random element from the <code>{{type}}</code>.</p>","abstract":false,"args":[{"name":"random","doc":null,"default_value":"Random::DEFAULT","external_name":"random","restriction":""}],"args_string":"(random = <span class=\"t\">Random</span><span class=\"t\">::</span><span class=\"t\">DEFAULT</span>)","args_html":"(random = <span class=\"t\">Random</span><span class=\"t\">::</span><span class=\"t\">DEFAULT</span>)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":77,"url":null},"def":{"name":"sample","args":[{"name":"random","doc":null,"default_value":"Random::DEFAULT","external_name":"random","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if empty?\n  raise(IndexError.new(\"Can't sample empty collection\"))\nend\nunsafe_fetch_element(shape_internal.map do |dim|\n  random.rand(dim)\nend)\n"}},{"id":"scalar?:Bool-instance-method","html_id":"scalar?:Bool-instance-method","name":"scalar?","doc":"Checks that this `{{type}}` is one-dimensional, and contains a single element.","summary":"<p>Checks that this <code>{{type}}</code> is one-dimensional, and contains a single element.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":46,"url":null},"def":{"name":"scalar?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(shape_internal.size == 1) && (size == 1)"}},{"id":"shape:Array(Int32)-instance-method","html_id":"shape:Array(Int32)-instance-method","name":"shape","doc":"Returns the length of the `{{type}}` in each dimension.\nFor a `coord` to specify an element of the `{{type}}` it must satisfy `coord[i] < shape[i]` for each `i`.","summary":"<p>Returns the length of the <code>{{type}}</code> in each dimension.</p>","abstract":true,"args":[],"args_string":" : Array(Int32)","args_html":" : Array(Int32)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":24,"url":null},"def":{"name":"shape","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":""}},{"id":"size-instance-method","html_id":"size-instance-method","name":"size","doc":"Returns the number of elements in the `{{type}}`; equal to `shape.product`.","summary":"<p>Returns the number of elements in the <code>{{type}}</code>; equal to <code>shape.product</code>.</p>","abstract":true,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":20,"url":null},"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"to_literal_s(io:IO):Nil-instance-method","html_id":"to_literal_s(io:IO):Nil-instance-method","name":"to_literal_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/n_dim/formatter.cr","line_number":350,"url":null},"def":{"name":"to_literal_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"Formatter.print_literal(self, io)"}},{"id":"to_narr:NArray(T)-instance-method","html_id":"to_narr:NArray(T)-instance-method","name":"to_narr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : NArray(T)","args_html":" : <a href=\"../Lattice/NArray.html\">NArray</a>(T)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":199,"url":null},"def":{"name":"to_narr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NArray(T)","visibility":"Public","body":""}},{"id":"to_nested_a:Array-instance-method","html_id":"to_nested_a:Array-instance-method","name":"to_nested_a","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array","args_html":" : Array","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":203,"url":null},"def":{"name":"to_nested_a","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array","visibility":"Public","body":""}},{"id":"to_s(io:IO,settings=Settings.new):Nil-instance-method","html_id":"to_s(io:IO,settings=Settings.new):Nil-instance-method","name":"to_s","doc":"FIXME: NArrayFormatter depends on buffer indices.","summary":"<p><span class=\"flag yellow\">FIXME</span>  NArrayFormatter depends on buffer indices.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"settings","doc":null,"default_value":"Settings.new","external_name":"settings","restriction":""}],"args_string":"(io : IO, settings = <span class=\"t\">Settings</span>.<span class=\"k\">new</span>) : Nil","args_html":"(io : IO, settings = <span class=\"t\">Settings</span>.<span class=\"k\">new</span>) : Nil","location":{"filename":"src/n_dim/formatter.cr","line_number":362,"url":null},"def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"settings","doc":null,"default_value":"Settings.new","external_name":"settings","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"Formatter.print(self, io, settings: settings)"}},{"id":"to_s(settings=Settings.new):String-instance-method","html_id":"to_s(settings=Settings.new):String-instance-method","name":"to_s","doc":"FIXME: NArrayFormatter depends on buffer indices.","summary":"<p><span class=\"flag yellow\">FIXME</span>  NArrayFormatter depends on buffer indices.</p>","abstract":false,"args":[{"name":"settings","doc":null,"default_value":"Settings.new","external_name":"settings","restriction":""}],"args_string":"(settings = <span class=\"t\">Settings</span>.<span class=\"k\">new</span>) : String","args_html":"(settings = <span class=\"t\">Settings</span>.<span class=\"k\">new</span>) : String","location":{"filename":"src/n_dim/formatter.cr","line_number":355,"url":null},"def":{"name":"to_s","args":[{"name":"settings","doc":null,"default_value":"Settings.new","external_name":"settings","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"String.build do |str|\n  Formatter.print(self, str, settings: settings)\nend"}},{"id":"to_scalar:T-instance-method","html_id":"to_scalar:T-instance-method","name":"to_scalar","doc":"Maps a single-element 1D `{{type}}` to the element it contains.","summary":"<p>Maps a single-element 1D <code>{{type}}</code> to the element it contains.</p>","abstract":false,"args":[],"args_string":" : T","args_html":" : T","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":51,"url":null},"def":{"name":"to_scalar","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"if scalar?\n  return first\nelse\n  if shape_internal.size != 1\n    raise(DimensionError.new(\"Cannot cast to scalar: {{type}} must have 1 dimension, but has #{dimensions}.\"))\n  else\n    raise(DimensionError.new(\"Cannot cast to scalar: {{type}} must have 1 element, but has #{size}.\"))\n  end\nend"}},{"id":"unsafe_fetch_element(coord):T-instance-method","html_id":"unsafe_fetch_element(coord):T-instance-method","name":"unsafe_fetch_element","doc":"Retrieves the element specified by `coord`, assuming that `coord` is in canonical form and in-bounds for this `{{type}}`.\nFor full specification of canonical form see `RegionHelpers` documentation. TODO: make this actually happen","summary":"<p>Retrieves the element specified by <code>coord</code>, assuming that <code>coord</code> is in canonical form and in-bounds for this <code>{{type}}</code>.</p>","abstract":true,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"args_string":"(coord) : T","args_html":"(coord) : T","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":32,"url":null},"def":{"name":"unsafe_fetch_element","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":""}},{"id":"unsafe_fetch_region(region)-instance-method","html_id":"unsafe_fetch_region(region)-instance-method","name":"unsafe_fetch_region","doc":"Copies the elements in `region` to a new `{{type}}`, assuming that `region` is in canonical form and in-bounds for this `{{type}}`.\nFor full specification of canonical form see `RegionHelpers` documentation. TODO: make this actually happen","summary":"<p>Copies the elements in <code>region</code> to a new <code>{{type}}</code>, assuming that <code>region</code> is in canonical form and in-bounds for this <code>{{type}}</code>.</p>","abstract":true,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"args_string":"(region)","args_html":"(region)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":28,"url":null},"def":{"name":"unsafe_fetch_region","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"view(*region,order:Order=Order::LEX):View(self,T)-instance-method","html_id":"view(*region,order:Order=Order::LEX):View(self,T)-instance-method","name":"view","doc":null,"summary":null,"abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""},{"name":"order","doc":null,"default_value":"Order::LEX","external_name":"order","restriction":"Order"}],"args_string":"(*region, order : Order = <span class=\"t\">Order</span><span class=\"t\">::</span><span class=\"t\">LEX</span>) : View(<span class=\"k\">self</span>, T)","args_html":"(*region, order : <a href=\"../Lattice/Order.html\">Order</a> = <span class=\"t\">Order</span><span class=\"t\">::</span><span class=\"t\">LEX</span>) : <a href=\"../Lattice/View.html\">View</a>(<span class=\"k\">self</span>, T)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":222,"url":null},"def":{"name":"view","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""},{"name":"order","doc":null,"default_value":"Order::LEX","external_name":"order","restriction":"Order"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"View(self, T)","visibility":"Public","body":"View(self, T).of(self, region, order)"}},{"id":"|(other:MultiIndexable(U))forallU-instance-method","html_id":"|(other:MultiIndexable(U))forallU-instance-method","name":"|","doc":"Invokes `#|` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#%7C(other:MultiIndexable(U))forallU-instance-method\">#|</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(U)) forall U","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"|","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape_internal != other.shape_internal\n  raise(DimensionError.new(\"Cannot perform elementwise operation |: shapes #{other.shape_internal} of other and #{shape_internal} of self do not match\"))\nend\nmap_with_coord do |elem, coord|\n  elem | ((other.unsafe_fetch_element(coord)).as(U))\nend\n"}},{"id":"|(other)-instance-method","html_id":"|(other)-instance-method","name":"|","doc":"Invokes `#|(other)` on each element in `self`, returning an\n`NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"../Lattice/MultiIndexable.html#%7C(other:MultiIndexable(U))forallU-instance-method\">#|(other)</a></code> on each element in <code>self</code>, returning an <code><a href=\"../Lattice/NArray.html\">NArray</a></code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"|","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.|(other))"}},{"id":"~-instance-method","html_id":"~-instance-method","name":"~","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/multi_indexable.cr","line_number":238,"url":null},"def":{"name":"~","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map(&.~)"}}],"macros":[],"types":[{"html_id":"lattice-core/Lattice/MultiIndexable/ChunkIterator","path":"Lattice/MultiIndexable/ChunkIterator.html","kind":"class","full_name":"Lattice::MultiIndexable::ChunkIterator(A, T)","name":"ChunkIterator","abstract":false,"superclass":{"html_id":"lattice-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lattice-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"lattice-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"lattice-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lattice-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":165,"url":null}],"repository_name":"lattice-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"lattice-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"lattice-core/Lattice/MultiIndexable","kind":"module","full_name":"Lattice::MultiIndexable(T)","name":"MultiIndexable"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(narr:A,chunk_shape,strides=nil,fringe_behaviour:FringeBehaviour=FringeBehaviour::DISCARD)-class-method","html_id":"new(narr:A,chunk_shape,strides=nil,fringe_behaviour:FringeBehaviour=FringeBehaviour::DISCARD)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"A"},{"name":"chunk_shape","doc":null,"default_value":"","external_name":"chunk_shape","restriction":""},{"name":"strides","doc":null,"default_value":"nil","external_name":"strides","restriction":""},{"name":"fringe_behaviour","doc":null,"default_value":"FringeBehaviour::DISCARD","external_name":"fringe_behaviour","restriction":"FringeBehaviour"}],"args_string":"(narr : A, chunk_shape, strides = <span class=\"n\">nil</span>, fringe_behaviour : FringeBehaviour = <span class=\"t\">FringeBehaviour</span><span class=\"t\">::</span><span class=\"t\">DISCARD</span>)","args_html":"(narr : A, chunk_shape, strides = <span class=\"n\">nil</span>, fringe_behaviour : <a href=\"../../Lattice/MultiIndexable/ChunkIterator/FringeBehaviour.html\">FringeBehaviour</a> = <span class=\"t\">FringeBehaviour</span><span class=\"t\">::</span><span class=\"t\">DISCARD</span>)","location":{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":174,"url":null},"def":{"name":"new","args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"A"},{"name":"chunk_shape","doc":null,"default_value":"","external_name":"chunk_shape","restriction":""},{"name":"strides","doc":null,"default_value":"nil","external_name":"strides","restriction":""},{"name":"fringe_behaviour","doc":null,"default_value":"FringeBehaviour::DISCARD","external_name":"fringe_behaviour","restriction":"FringeBehaviour"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ChunkIterator(A, T).allocate\n_.initialize(narr, chunk_shape, strides, fringe_behaviour)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"next-instance-method","html_id":"next-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":207,"url":null},"def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @empty\n  return stop\nend\nunsafe_next\n"}},{"id":"unsafe_next-instance-method","html_id":"unsafe_next-instance-method","name":"unsafe_next","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":212,"url":null},"def":{"name":"unsafe_next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@coord.size - 1).downto(0) do |i|\n  __temp_53 = i\n  @coord[__temp_53] = @coord[__temp_53] + @strides[i]\n  if @coord[i] <= @last[i]\n    break\n  end\n  @coord[i] = 0\n  if i == 0\n    return stop\n  end\nend\nregion = RegionHelpers.translate_shape(@chunk_shape, @coord, @narr.shape)\nif @fringe_behaviour == FringeBehaviour::DISCARD\nelse\n  region = RegionHelpers.trim_region(region, @narr.shape)\nend\nreturn {@narr.get_region(region), region}\n"}}],"macros":[],"types":[{"html_id":"lattice-core/Lattice/MultiIndexable/ChunkIterator/FringeBehaviour","path":"Lattice/MultiIndexable/ChunkIterator/FringeBehaviour.html","kind":"enum","full_name":"Lattice::MultiIndexable::ChunkIterator::FringeBehaviour","name":"FringeBehaviour","abstract":false,"superclass":null,"ancestors":[{"html_id":"lattice-core/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"lattice-core/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"lattice-core/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"lattice-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":232,"url":null}],"repository_name":"lattice-core","program":false,"enum":true,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"DISCARD","name":"DISCARD","value":"0","doc":null,"summary":null},{"id":"COVER","name":"COVER","value":"1","doc":null,"summary":null},{"id":"ALL_START_POINTS","name":"ALL_START_POINTS","value":"2","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"lattice-core/Lattice/MultiIndexable/ChunkIterator","kind":"class","full_name":"Lattice::MultiIndexable::ChunkIterator(A, T)","name":"ChunkIterator"},"doc":"TODO: This is a pretty general concept - it might be useful to define it at a broader\nscope with less specific naming","summary":"<p><span class=\"flag orange\">TODO</span>  This is a pretty general concept - it might be useful to define it at a broader scope with less specific naming</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"all_start_points?-instance-method","html_id":"all_start_points?-instance-method","name":"all_start_points?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":235,"url":null},"def":{"name":"all_start_points?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ALL_START_POINTS"}},{"id":"cover?-instance-method","html_id":"cover?-instance-method","name":"cover?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":234,"url":null},"def":{"name":"cover?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == COVER"}},{"id":"discard?-instance-method","html_id":"discard?-instance-method","name":"discard?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":233,"url":null},"def":{"name":"discard?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DISCARD"}}],"macros":[],"types":[]}]},{"html_id":"lattice-core/Lattice/MultiIndexable/ColexRegionIterator","path":"Lattice/MultiIndexable/ColexRegionIterator.html","kind":"class","full_name":"Lattice::MultiIndexable::ColexRegionIterator(A, T)","name":"ColexRegionIterator","abstract":false,"superclass":{"html_id":"lattice-core/Lattice/MultiIndexable/RegionIterator","kind":"class","full_name":"Lattice::MultiIndexable::RegionIterator","name":"RegionIterator"},"ancestors":[{"html_id":"lattice-core/Lattice/MultiIndexable/RegionIterator","kind":"class","full_name":"Lattice::MultiIndexable::RegionIterator","name":"RegionIterator"},{"html_id":"lattice-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"lattice-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"lattice-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lattice-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":146,"url":null}],"repository_name":"lattice-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"lattice-core/Lattice/MultiIndexable","kind":"module","full_name":"Lattice::MultiIndexable(T)","name":"MultiIndexable"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(narr:A,region=nil,reverse=false)-class-method","html_id":"new(narr:A,region=nil,reverse=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"A"},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""},{"name":"reverse","doc":null,"default_value":"false","external_name":"reverse","restriction":""}],"args_string":"(narr : A, region = <span class=\"n\">nil</span>, reverse = <span class=\"n\">false</span>)","args_html":"(narr : A, region = <span class=\"n\">nil</span>, reverse = <span class=\"n\">false</span>)","location":{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":65,"url":null},"def":{"name":"new","args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"A"},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""},{"name":"reverse","doc":null,"default_value":"false","external_name":"reverse","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ColexRegionIterator(A, T).allocate\n_.initialize(narr, region, reverse)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"setup_coord(coord,step)-instance-method","html_id":"setup_coord(coord,step)-instance-method","name":"setup_coord","doc":null,"summary":null,"abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"step","doc":null,"default_value":"","external_name":"step","restriction":""}],"args_string":"(coord, step)","args_html":"(coord, step)","location":{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":147,"url":null},"def":{"name":"setup_coord","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"step","doc":null,"default_value":"","external_name":"step","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"coord[0] = coord[0] - step[0]"}},{"id":"unsafe_next-instance-method","html_id":"unsafe_next-instance-method","name":"unsafe_next","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":151,"url":null},"def":{"name":"unsafe_next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@coord.each_index do |i|\n  if @coord[i] == @last[i]\n    @coord[i] = @first[i]\n    if i == (@coord.size - 1)\n      return stop\n    end\n  else\n    __temp_49 = i\n    @coord[__temp_49] = @coord[__temp_49] + @step[i]\n    break\n  end\nend\n{@narr.unsafe_fetch_element(@coord), @coord}\n"}}],"macros":[],"types":[]},{"html_id":"lattice-core/Lattice/MultiIndexable/Formatter","path":"Lattice/MultiIndexable/Formatter.html","kind":"class","full_name":"Lattice::MultiIndexable::Formatter(T)","name":"Formatter","abstract":false,"superclass":{"html_id":"lattice-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lattice-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lattice-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/n_dim/formatter.cr","line_number":129,"url":null}],"repository_name":"lattice-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"lattice-core/Lattice/MultiIndexable","kind":"module","full_name":"Lattice::MultiIndexable(T)","name":"MultiIndexable"},"doc":null,"summary":null,"class_methods":[{"id":"print(narr:MultiIndexable(T),io:IO=STDOUT,settings=nil)-class-method","html_id":"print(narr:MultiIndexable(T),io:IO=STDOUT,settings=nil)-class-method","name":"print","doc":null,"summary":null,"abstract":false,"args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"MultiIndexable(T)"},{"name":"io","doc":null,"default_value":"STDOUT","external_name":"io","restriction":"IO"},{"name":"settings","doc":null,"default_value":"nil","external_name":"settings","restriction":""}],"args_string":"(narr : MultiIndexable(T), io : IO = <span class=\"t\">STDOUT</span>, settings = <span class=\"n\">nil</span>)","args_html":"(narr : <a href=\"../../Lattice/MultiIndexable.html\">MultiIndexable</a>(T), io : IO = <span class=\"t\">STDOUT</span>, settings = <span class=\"n\">nil</span>)","location":{"filename":"src/n_dim/formatter.cr","line_number":145,"url":null},"def":{"name":"print","args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"MultiIndexable(T)"},{"name":"io","doc":null,"default_value":"STDOUT","external_name":"io","restriction":"IO"},{"name":"settings","doc":null,"default_value":"nil","external_name":"settings","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"settings || (settings = Settings.new)\ndisplay_shape = narr.shape.map_with_index do |dim, i|\n  color = settings.colors[((-i) - 1) % settings.colors.size]\n  dim.to_s.colorize(color)\nend\nio << \"#{display_shape.join('x')} #{if narr.shape.size == 1\n  \"element \"\nend} #{narr.class}\\n\"\n(Formatter.new(narr, io, settings)).print\n"}},{"id":"print_literal(narr:MultiIndexable(T),io=STDOUT)-class-method","html_id":"print_literal(narr:MultiIndexable(T),io=STDOUT)-class-method","name":"print_literal","doc":null,"summary":null,"abstract":false,"args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"MultiIndexable(T)"},{"name":"io","doc":null,"default_value":"STDOUT","external_name":"io","restriction":""}],"args_string":"(narr : MultiIndexable(T), io = <span class=\"t\">STDOUT</span>)","args_html":"(narr : <a href=\"../../Lattice/MultiIndexable.html\">MultiIndexable</a>(T), io = <span class=\"t\">STDOUT</span>)","location":{"filename":"src/n_dim/formatter.cr","line_number":157,"url":null},"def":{"name":"print_literal","args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"MultiIndexable(T)"},{"name":"io","doc":null,"default_value":"STDOUT","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"fmt = Formatter.new(narr, io, Settings.new)\nfmt.print_literal\n"}}],"constructors":[{"id":"new(narr:MultiIndexable(T),io,settings)-class-method","html_id":"new(narr:MultiIndexable(T),io,settings)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"MultiIndexable(T)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""},{"name":"settings","doc":null,"default_value":"","external_name":"settings","restriction":""}],"args_string":"(narr : MultiIndexable(T), io, settings)","args_html":"(narr : <a href=\"../../Lattice/MultiIndexable.html\">MultiIndexable</a>(T), io, settings)","location":{"filename":"src/n_dim/formatter.cr","line_number":162,"url":null},"def":{"name":"new","args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"MultiIndexable(T)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""},{"name":"settings","doc":null,"default_value":"","external_name":"settings","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Formatter(T).allocate\n_.initialize(narr, io, settings)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"close(height,idx)-instance-method","html_id":"close(height,idx)-instance-method","name":"close","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":""},{"name":"idx","doc":null,"default_value":"","external_name":"idx","restriction":""}],"args_string":"(height, idx)","args_html":"(height, idx)","location":{"filename":"src/n_dim/formatter.cr","line_number":314,"url":null},"def":{"name":"close","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":""},{"name":"idx","doc":null,"default_value":"","external_name":"idx","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"brackets = @settings.brackets[height % @settings.brackets.size]\nif compact?(height)\n  @current_indentation = @current_indentation - (brackets[0] % idx).size\nelse\n  if height != 0\n    newline(-1)\n  end\nend\ncolor_print(brackets[1] % idx, height)\n"}},{"id":"measure-instance-method","html_id":"measure-instance-method","name":"measure","doc":"get the length of the longest element to be displayed (for justification purposes)","summary":"<p>get the length of the longest element to be displayed (for justification purposes)</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/formatter.cr","line_number":192,"url":null},"def":{"name":"measure","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@justify_length = walk_n_measure\n@iter.reset\n"}},{"id":"newline(indent_change=0)-instance-method","html_id":"newline(indent_change=0)-instance-method","name":"newline","doc":null,"summary":null,"abstract":false,"args":[{"name":"indent_change","doc":null,"default_value":"0","external_name":"indent_change","restriction":""}],"args_string":"(indent_change = <span class=\"n\">0</span>)","args_html":"(indent_change = <span class=\"n\">0</span>)","location":{"filename":"src/n_dim/formatter.cr","line_number":298,"url":null},"def":{"name":"newline","args":[{"name":"indent_change","doc":null,"default_value":"0","external_name":"indent_change","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@io << \"\\n\"\n@current_indentation = @current_indentation + (indent_change * @settings.indent_width)\n@io << (\" \" * @current_indentation)\n"}},{"id":"open(height,idx)-instance-method","html_id":"open(height,idx)-instance-method","name":"open","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":""},{"name":"idx","doc":null,"default_value":"","external_name":"idx","restriction":""}],"args_string":"(height, idx)","args_html":"(height, idx)","location":{"filename":"src/n_dim/formatter.cr","line_number":304,"url":null},"def":{"name":"open","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":""},{"name":"idx","doc":null,"default_value":"","external_name":"idx","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"brackets = @settings.brackets[height % @settings.brackets.size]\ncolor_print(brackets[0] % idx, height)\nif compact?(height)\n  @current_indentation = @current_indentation + (brackets[0] % idx).size\nelse\n  if height != 0\n    newline(1)\n  end\nend\n"}},{"id":"print-instance-method","html_id":"print-instance-method","name":"print","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/formatter.cr","line_number":197,"url":null},"def":{"name":"print","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"measure\nwalk_n_print\n@io << \"\\n\"\n@iter.reset\n"}},{"id":"print_literal-instance-method","html_id":"print_literal-instance-method","name":"print_literal","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/formatter.cr","line_number":204,"url":null},"def":{"name":"print_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"walk_n_print_flat\n@io << \"\\n\"\n@iter.reset\n"}}],"macros":[],"types":[{"html_id":"lattice-core/Lattice/MultiIndexable/Formatter/FormatIterator","path":"Lattice/MultiIndexable/Formatter/FormatIterator.html","kind":"class","full_name":"Lattice::MultiIndexable::Formatter::FormatIterator(A, T)","name":"FormatIterator","abstract":false,"superclass":{"html_id":"lattice-core/Lattice/MultiIndexable/LexRegionIterator","kind":"class","full_name":"Lattice::MultiIndexable::LexRegionIterator","name":"LexRegionIterator"},"ancestors":[{"html_id":"lattice-core/Lattice/MultiIndexable/LexRegionIterator","kind":"class","full_name":"Lattice::MultiIndexable::LexRegionIterator","name":"LexRegionIterator"},{"html_id":"lattice-core/Lattice/MultiIndexable/RegionIterator","kind":"class","full_name":"Lattice::MultiIndexable::RegionIterator","name":"RegionIterator"},{"html_id":"lattice-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"lattice-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"lattice-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lattice-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/n_dim/formatter.cr","line_number":324,"url":null}],"repository_name":"lattice-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"lattice-core/Lattice/MultiIndexable/Formatter","kind":"class","full_name":"Lattice::MultiIndexable::Formatter(T)","name":"Formatter"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(narr:A,region=nil,reverse=false)-class-method","html_id":"new(narr:A,region=nil,reverse=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"A"},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""},{"name":"reverse","doc":null,"default_value":"false","external_name":"reverse","restriction":""}],"args_string":"(narr : A, region = <span class=\"n\">nil</span>, reverse = <span class=\"n\">false</span>)","args_html":"(narr : A, region = <span class=\"n\">nil</span>, reverse = <span class=\"n\">false</span>)","location":{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":65,"url":null},"def":{"name":"new","args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"A"},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""},{"name":"reverse","doc":null,"default_value":"false","external_name":"reverse","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = FormatIterator(A, T).allocate\n_.initialize(narr, region, reverse)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"skip(axis,amount):Nil-instance-method","html_id":"skip(axis,amount):Nil-instance-method","name":"skip","doc":null,"summary":null,"abstract":false,"args":[{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":""},{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":""}],"args_string":"(axis, amount) : Nil","args_html":"(axis, amount) : Nil","location":{"filename":"src/n_dim/formatter.cr","line_number":325,"url":null},"def":{"name":"skip","args":[{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":""},{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"__temp_39 = axis\n@coord[__temp_39] = @coord[__temp_39] + (amount + 1)\n"}},{"id":"unsafe_next-instance-method","html_id":"unsafe_next-instance-method","name":"unsafe_next","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/formatter.cr","line_number":329,"url":null},"def":{"name":"unsafe_next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@coord.size - 1).downto(0) do |i|\n  if @coord[i] == @last[i]\n    @coord[i] = @first[i]\n    if i == 0\n      return stop\n    end\n  else\n    __temp_41 = i\n    @coord[__temp_41] = @coord[__temp_41] + @step[i]\n    break\n  end\nend\n{@narr.unsafe_fetch_element(@coord), @coord}\n"}},{"id":"unsafe_next_value-instance-method","html_id":"unsafe_next_value-instance-method","name":"unsafe_next_value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/formatter.cr","line_number":344,"url":null},"def":{"name":"unsafe_next_value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.next.unsafe_as(Tuple(T, Array(Int32))))[0]"}}],"macros":[],"types":[]}]},{"html_id":"lattice-core/Lattice/MultiIndexable/LexRegionIterator","path":"Lattice/MultiIndexable/LexRegionIterator.html","kind":"class","full_name":"Lattice::MultiIndexable::LexRegionIterator(A, T)","name":"LexRegionIterator","abstract":false,"superclass":{"html_id":"lattice-core/Lattice/MultiIndexable/RegionIterator","kind":"class","full_name":"Lattice::MultiIndexable::RegionIterator","name":"RegionIterator"},"ancestors":[{"html_id":"lattice-core/Lattice/MultiIndexable/RegionIterator","kind":"class","full_name":"Lattice::MultiIndexable::RegionIterator","name":"RegionIterator"},{"html_id":"lattice-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"lattice-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"lattice-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lattice-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":127,"url":null}],"repository_name":"lattice-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"lattice-core/Lattice/MultiIndexable/Formatter/FormatIterator","kind":"class","full_name":"Lattice::MultiIndexable::Formatter::FormatIterator(A, T)","name":"FormatIterator"}],"including_types":[],"namespace":{"html_id":"lattice-core/Lattice/MultiIndexable","kind":"module","full_name":"Lattice::MultiIndexable(T)","name":"MultiIndexable"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(narr:A,region=nil,reverse=false)-class-method","html_id":"new(narr:A,region=nil,reverse=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"A"},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""},{"name":"reverse","doc":null,"default_value":"false","external_name":"reverse","restriction":""}],"args_string":"(narr : A, region = <span class=\"n\">nil</span>, reverse = <span class=\"n\">false</span>)","args_html":"(narr : A, region = <span class=\"n\">nil</span>, reverse = <span class=\"n\">false</span>)","location":{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":65,"url":null},"def":{"name":"new","args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"A"},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""},{"name":"reverse","doc":null,"default_value":"false","external_name":"reverse","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = LexRegionIterator(A, T).allocate\n_.initialize(narr, region, reverse)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"setup_coord(coord,step)-instance-method","html_id":"setup_coord(coord,step)-instance-method","name":"setup_coord","doc":null,"summary":null,"abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"step","doc":null,"default_value":"","external_name":"step","restriction":""}],"args_string":"(coord, step)","args_html":"(coord, step)","location":{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":128,"url":null},"def":{"name":"setup_coord","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"step","doc":null,"default_value":"","external_name":"step","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"coord[-1] = coord[-1] - step[-1]"}},{"id":"unsafe_next-instance-method","html_id":"unsafe_next-instance-method","name":"unsafe_next","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":132,"url":null},"def":{"name":"unsafe_next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@coord.size - 1).downto(0) do |i|\n  if @coord[i] == @last[i]\n    @coord[i] = @first[i]\n    if i == 0\n      return stop\n    end\n  else\n    __temp_45 = i\n    @coord[__temp_45] = @coord[__temp_45] + @step[i]\n    break\n  end\nend\n{@narr.unsafe_fetch_element(@coord), @coord}\n"}}],"macros":[],"types":[]},{"html_id":"lattice-core/Lattice/MultiIndexable/RegionIterator","path":"Lattice/MultiIndexable/RegionIterator.html","kind":"class","full_name":"Lattice::MultiIndexable::RegionIterator(A, T)","name":"RegionIterator","abstract":true,"superclass":{"html_id":"lattice-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lattice-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"lattice-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"lattice-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lattice-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":54,"url":null}],"repository_name":"lattice-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"lattice-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[{"html_id":"lattice-core/Lattice/MultiIndexable/ColexRegionIterator","kind":"class","full_name":"Lattice::MultiIndexable::ColexRegionIterator(A, T)","name":"ColexRegionIterator"},{"html_id":"lattice-core/Lattice/MultiIndexable/LexRegionIterator","kind":"class","full_name":"Lattice::MultiIndexable::LexRegionIterator(A, T)","name":"LexRegionIterator"},{"html_id":"lattice-core/Lattice/NArray/BufferedLexRegionIterator","kind":"class","full_name":"Lattice::NArray::BufferedLexRegionIterator(A, T)","name":"BufferedLexRegionIterator"}],"including_types":[],"namespace":{"html_id":"lattice-core/Lattice/MultiIndexable","kind":"module","full_name":"Lattice::MultiIndexable(T)","name":"MultiIndexable"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(narr:A,region=nil,reverse=false)-class-method","html_id":"new(narr:A,region=nil,reverse=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"A"},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""},{"name":"reverse","doc":null,"default_value":"false","external_name":"reverse","restriction":""}],"args_string":"(narr : A, region = <span class=\"n\">nil</span>, reverse = <span class=\"n\">false</span>)","args_html":"(narr : A, region = <span class=\"n\">nil</span>, reverse = <span class=\"n\">false</span>)","location":{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":65,"url":null},"def":{"name":"new","args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"A"},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""},{"name":"reverse","doc":null,"default_value":"false","external_name":"reverse","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = RegionIterator(A, T).allocate\n_.initialize(narr, region, reverse)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"next-instance-method","html_id":"next-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":118,"url":null},"def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @empty\n  return stop\nend\nunsafe_next\n"}},{"id":"reset-instance-method","html_id":"reset-instance-method","name":"reset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":100,"url":null},"def":{"name":"reset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@coord = @first.dup\nsetup_coord(@coord, @step)\n"}},{"id":"reverse-instance-method","html_id":"reverse-instance-method","name":"reverse","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":114,"url":null},"def":{"name":"reverse","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(typeof(self)).new(@narr, @last, @first, @step.map(&.-))"}},{"id":"reverse!-instance-method","html_id":"reverse!-instance-method","name":"reverse!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":105,"url":null},"def":{"name":"reverse!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@last, @first = @first, @last\n@step.map!(&.-)\n@coord = @first.dup\nsetup_coord(@coord, @step)\nself\n"}},{"id":"setup_coord(coord,step)-instance-method","html_id":"setup_coord(coord,step)-instance-method","name":"setup_coord","doc":null,"summary":null,"abstract":true,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"step","doc":null,"default_value":"","external_name":"step","restriction":""}],"args_string":"(coord, step)","args_html":"(coord, step)","location":{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":123,"url":null},"def":{"name":"setup_coord","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"step","doc":null,"default_value":"","external_name":"step","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"unsafe_next-instance-method","html_id":"unsafe_next-instance-method","name":"unsafe_next","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/iterators/region_iterators.cr","line_number":124,"url":null},"def":{"name":"unsafe_next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"lattice-core/Lattice/MultiIndexable/Settings","path":"Lattice/MultiIndexable/Settings.html","kind":"class","full_name":"Lattice::MultiIndexable::Settings","name":"Settings","abstract":false,"superclass":{"html_id":"lattice-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lattice-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lattice-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/n_dim/formatter.cr","line_number":9,"url":null}],"repository_name":"lattice-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"COLOR_MAP","name":"COLOR_MAP","value":"{\"default\" => :default, \"black\" => :black, \"red\" => :red, \"green\" => :green, \"yellow\" => :yellow, \"blue\" => :blue, \"magenta\" => :magenta, \"cyan\" => :cyan, \"light_gray\" => :light_gray, \"dark_gray\" => :dark_gray, \"light_red\" => :light_red, \"light_green\" => :light_green, \"light_yellow\" => :light_yellow, \"light_blue\" => :light_blue, \"light_magenta\" => :light_magenta, \"light_cyan\" => :light_cyan, \"white\" => :white}","doc":"NOTE: I tried generating this with macros, but nothing was\nas effective as just hardcoding it.","summary":"<p><span class=\"flag purple\">NOTE</span>  I tried generating this with macros, but nothing was as effective as just hardcoding it.</p>"},{"id":"USER_CONFIG_FILENAME","name":"USER_CONFIG_FILENAME","value":"\"formatter.yaml\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"lattice-core/Lattice/MultiIndexable","kind":"module","full_name":"Lattice::MultiIndexable(T)","name":"MultiIndexable"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"default:self-class-method","html_id":"default:self-class-method","name":"default","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/n_dim/formatter.cr","line_number":93,"url":null},"def":{"name":"default","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"new(indent_width: 4, max_element_width: 20, omit_after: [10, 5], brackets: [{\"[\", \"]\"}], colors: [:default], collapse_brackets_after: 5)"}},{"id":"new(indent_width,max_element_width,omit_afterdisplay_limit,brackets,colors:Indexable(Symbol),collapse_brackets_aftercollapse_height)-class-method","html_id":"new(indent_width,max_element_width,omit_afterdisplay_limit,brackets,colors:Indexable(Symbol),collapse_brackets_aftercollapse_height)-class-method","name":"new","doc":"TODO: Figure out how this can be a serializable when all the colorize types arent","summary":"<p><span class=\"flag orange\">TODO</span>  Figure out how this can be a serializable when all the colorize types arent</p>","abstract":false,"args":[{"name":"indent_width","doc":null,"default_value":"","external_name":"indent_width","restriction":""},{"name":"max_element_width","doc":null,"default_value":"","external_name":"max_element_width","restriction":""},{"name":"display_limit","doc":null,"default_value":"","external_name":"omit_after","restriction":""},{"name":"brackets","doc":null,"default_value":"","external_name":"brackets","restriction":""},{"name":"colors","doc":null,"default_value":"","external_name":"colors","restriction":"Indexable(Symbol)"},{"name":"collapse_height","doc":null,"default_value":"","external_name":"collapse_brackets_after","restriction":""}],"args_string":"(indent_width, max_element_width, omit_after display_limit, brackets, colors : Indexable(Symbol), collapse_brackets_after collapse_height)","args_html":"(indent_width, max_element_width, omit_after display_limit, brackets, colors : Indexable(Symbol), collapse_brackets_after collapse_height)","location":{"filename":"src/n_dim/formatter.cr","line_number":58,"url":null},"def":{"name":"new","args":[{"name":"indent_width","doc":null,"default_value":"","external_name":"indent_width","restriction":""},{"name":"max_element_width","doc":null,"default_value":"","external_name":"max_element_width","restriction":""},{"name":"display_limit","doc":null,"default_value":"","external_name":"omit_after","restriction":""},{"name":"brackets","doc":null,"default_value":"","external_name":"brackets","restriction":""},{"name":"colors","doc":null,"default_value":"","external_name":"colors","restriction":"Indexable(Symbol)"},{"name":"collapse_height","doc":null,"default_value":"","external_name":"collapse_brackets_after","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(indent_width, max_element_width, display_limit, brackets, colors, collapse_height)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/formatter.cr","line_number":53,"url":null},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@@project_settings || user_settings) || default"}},{"id":"project_settings:self?-class-method","html_id":"project_settings:self?-class-method","name":"project_settings","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>?","args_html":" : <span class=\"k\">self</span>?","location":{"filename":"src/n_dim/formatter.cr","line_number":37,"url":null},"def":{"name":"project_settings","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self | ::Nil","visibility":"Public","body":"@@project_settings"}},{"id":"user_settings:self?-class-method","html_id":"user_settings:self?-class-method","name":"user_settings","doc":"TODO: document properly once this is set in stone\ntries to read from LATTICE_CONFIG_DIR - if the file isn't there,\nreads from XDG_CONFIG_DIR/lattice. if still not there, tries ~/.config","summary":"<p><span class=\"flag orange\">TODO</span>  document properly once this is set in stone tries to read from LATTICE_CONFIG_DIR - if the file isn't there, reads from XDG_CONFIG_DIR/lattice.</p>","abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>?","args_html":" : <span class=\"k\">self</span>?","location":{"filename":"src/n_dim/formatter.cr","line_number":64,"url":null},"def":{"name":"user_settings","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self | ::Nil","visibility":"Public","body":"if @@disable_user_settings\n  return nil\nend\nif @@cached_user_settings\n  return @@cached_user_settings\nend\nif dir = ENV[\"LATTICE_CONFIG_DIR\"]?\n  path = Path[dir] / USER_CONFIG_FILENAME\n  if File.exists?(path)\n  end\nend\n{ENV[\"XDG_CONFIG_DIR\"]?, \"~/.config\"}.each do |dir|\n  if dir\n    path = (Path[dir] / \"lattice\") / USER_CONFIG_FILENAME\n    if File.exists?(path)\n    end\n  end\nend\n@@disable_user_settings = true\nreturn nil\n"}}],"instance_methods":[{"id":"brackets:Array(Tuple(String,String))-instance-method","html_id":"brackets:Array(Tuple(String,String))-instance-method","name":"brackets","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Tuple(String, String))","args_html":" : Array(Tuple(String, String))","location":{"filename":"src/n_dim/formatter.cr","line_number":45,"url":null},"def":{"name":"brackets","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Tuple(String, String))","visibility":"Public","body":"@brackets"}},{"id":"brackets=(brackets:Array(Tuple(String,String)))-instance-method","html_id":"brackets=(brackets:Array(Tuple(String,String)))-instance-method","name":"brackets=","doc":null,"summary":null,"abstract":false,"args":[{"name":"brackets","doc":null,"default_value":"","external_name":"brackets","restriction":"Array(Tuple(String, String))"}],"args_string":"(brackets : Array(Tuple(String, String)))","args_html":"(brackets : Array(Tuple(String, String)))","location":{"filename":"src/n_dim/formatter.cr","line_number":45,"url":null},"def":{"name":"brackets=","args":[{"name":"brackets","doc":null,"default_value":"","external_name":"brackets","restriction":"Array(Tuple(String, String))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@brackets = brackets"}},{"id":"collapse_height:Int32-instance-method","html_id":"collapse_height:Int32-instance-method","name":"collapse_height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/n_dim/formatter.cr","line_number":51,"url":null},"def":{"name":"collapse_height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@collapse_height"}},{"id":"collapse_height=(collapse_height:Int32)-instance-method","html_id":"collapse_height=(collapse_height:Int32)-instance-method","name":"collapse_height=","doc":null,"summary":null,"abstract":false,"args":[{"name":"collapse_height","doc":null,"default_value":"","external_name":"collapse_height","restriction":"Int32"}],"args_string":"(collapse_height : Int32)","args_html":"(collapse_height : Int32)","location":{"filename":"src/n_dim/formatter.cr","line_number":51,"url":null},"def":{"name":"collapse_height=","args":[{"name":"collapse_height","doc":null,"default_value":"","external_name":"collapse_height","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@collapse_height = collapse_height"}},{"id":"colors:Array(Colorize::Color|Symbol)|Array(Colorize::Color)|Array(Symbol)-instance-method","html_id":"colors:Array(Colorize::Color|Symbol)|Array(Colorize::Color)|Array(Symbol)-instance-method","name":"colors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Colorize::Color | Symbol) | Array(Colorize::Color) | Array(Symbol)","args_html":" : Array(Colorize::Color | Symbol) | Array(Colorize::Color) | Array(Symbol)","location":{"filename":"src/n_dim/formatter.cr","line_number":48,"url":null},"def":{"name":"colors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Colorize::Color | Symbol) | Array(Colorize::Color) | Array(Symbol)","visibility":"Public","body":"@colors"}},{"id":"colors=(colors:Array(Colorize::Color|Symbol)|Array(Colorize::Color)|Array(Symbol))-instance-method","html_id":"colors=(colors:Array(Colorize::Color|Symbol)|Array(Colorize::Color)|Array(Symbol))-instance-method","name":"colors=","doc":null,"summary":null,"abstract":false,"args":[{"name":"colors","doc":null,"default_value":"","external_name":"colors","restriction":"Array(Colorize::Color | Symbol) | Array(Colorize::Color) | Array(Symbol)"}],"args_string":"(colors : Array(Colorize::Color | Symbol) | Array(Colorize::Color) | Array(Symbol))","args_html":"(colors : Array(Colorize::Color | Symbol) | Array(Colorize::Color) | Array(Symbol))","location":{"filename":"src/n_dim/formatter.cr","line_number":48,"url":null},"def":{"name":"colors=","args":[{"name":"colors","doc":null,"default_value":"","external_name":"colors","restriction":"Array(Colorize::Color | Symbol) | Array(Colorize::Color) | Array(Symbol)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@colors = colors"}},{"id":"display_limit:Array(Int32)-instance-method","html_id":"display_limit:Array(Int32)-instance-method","name":"display_limit","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Int32)","args_html":" : Array(Int32)","location":{"filename":"src/n_dim/formatter.cr","line_number":43,"url":null},"def":{"name":"display_limit","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@display_limit"}},{"id":"display_limit=(display_limit:Array(Int32))-instance-method","html_id":"display_limit=(display_limit:Array(Int32))-instance-method","name":"display_limit=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display_limit","doc":null,"default_value":"","external_name":"display_limit","restriction":"Array(Int32)"}],"args_string":"(display_limit : Array(Int32))","args_html":"(display_limit : Array(Int32))","location":{"filename":"src/n_dim/formatter.cr","line_number":43,"url":null},"def":{"name":"display_limit=","args":[{"name":"display_limit","doc":null,"default_value":"","external_name":"display_limit","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@display_limit = display_limit"}},{"id":"indent_width:Int32-instance-method","html_id":"indent_width:Int32-instance-method","name":"indent_width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/n_dim/formatter.cr","line_number":39,"url":null},"def":{"name":"indent_width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@indent_width"}},{"id":"indent_width=(indent_width:Int32)-instance-method","html_id":"indent_width=(indent_width:Int32)-instance-method","name":"indent_width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"indent_width","doc":null,"default_value":"","external_name":"indent_width","restriction":"Int32"}],"args_string":"(indent_width : Int32)","args_html":"(indent_width : Int32)","location":{"filename":"src/n_dim/formatter.cr","line_number":39,"url":null},"def":{"name":"indent_width=","args":[{"name":"indent_width","doc":null,"default_value":"","external_name":"indent_width","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@indent_width = indent_width"}},{"id":"max_element_width:Int32-instance-method","html_id":"max_element_width:Int32-instance-method","name":"max_element_width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/n_dim/formatter.cr","line_number":40,"url":null},"def":{"name":"max_element_width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@max_element_width"}},{"id":"max_element_width=(max_element_width:Int32)-instance-method","html_id":"max_element_width=(max_element_width:Int32)-instance-method","name":"max_element_width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"max_element_width","doc":null,"default_value":"","external_name":"max_element_width","restriction":"Int32"}],"args_string":"(max_element_width : Int32)","args_html":"(max_element_width : Int32)","location":{"filename":"src/n_dim/formatter.cr","line_number":40,"url":null},"def":{"name":"max_element_width=","args":[{"name":"max_element_width","doc":null,"default_value":"","external_name":"max_element_width","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@max_element_width = max_element_width"}}],"macros":[],"types":[]}]},{"html_id":"lattice-core/Lattice/MultiWritable","path":"Lattice/MultiWritable.html","kind":"module","full_name":"Lattice::MultiWritable(T)","name":"MultiWritable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/n_dim/multi_writable.cr","line_number":6,"url":null}],"repository_name":"lattice-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"lattice-core/Lattice/NArray","kind":"class","full_name":"Lattice::NArray(T)","name":"NArray"},{"html_id":"lattice-core/Lattice/View","kind":"class","full_name":"Lattice::View(B, T)","name":"View"}],"namespace":{"html_id":"lattice-core/Lattice","kind":"module","full_name":"Lattice","name":"Lattice"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"[]=(bool_mask:MultiIndexable(Bool),value)-instance-method","html_id":"[]=(bool_mask:MultiIndexable(Bool),value)-instance-method","name":"[]=","doc":null,"summary":null,"abstract":false,"args":[{"name":"bool_mask","doc":null,"default_value":"","external_name":"bool_mask","restriction":"MultiIndexable(Bool)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(bool_mask : MultiIndexable(Bool), value)","args_html":"(bool_mask : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(Bool), value)","location":{"filename":"src/n_dim/multi_writable.cr","line_number":81,"url":null},"def":{"name":"[]=","args":[{"name":"bool_mask","doc":null,"default_value":"","external_name":"bool_mask","restriction":"MultiIndexable(Bool)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if bool_mask.shape != shape_internal\n  raise(DimensionError.new(\"Cannot perform masking: mask shape #{bool_mask.shape} does not match array shape #{shape_internal}.\"))\nend\nbool_mask.each_with_coord do |bool_val, coord|\n  if bool_val\n    unsafe_set_element(coord, value.as(T))\n  end\nend\n"}},{"id":"[]=(region:Enumerable,value)-instance-method","html_id":"[]=(region:Enumerable,value)-instance-method","name":"[]=","doc":"See `#set_region(region : Enumerable, value)`","summary":"<p>See <code><a href=\"../Lattice/MultiWritable.html#set_region(region:Enumerable,src:MultiIndexable)-instance-method\">#set_region(region : Enumerable, value)</a></code></p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(region : Enumerable, value)","args_html":"(region : Enumerable, value)","location":{"filename":"src/n_dim/multi_writable.cr","line_number":68,"url":null},"def":{"name":"[]=","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"set_region(region, value)"}},{"id":"[]=(*args:*U)forallU-instance-method","html_id":"[]=(*args:*U)forallU-instance-method","name":"[]=","doc":"These two should go last","summary":"<p>These two should go last</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"*U"}],"args_string":"(*args : <span class=\"o\">*</span><span class=\"t\">U</span>) forall U","args_html":"(*args : <span class=\"o\">*</span><span class=\"t\">U</span>) forall U","location":{"filename":"src/n_dim/multi_writable.cr","line_number":73,"url":null},"def":{"name":"[]=","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"*U"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if true %}\n          set_region([{% for i in 0...(U.size - 1) %}args[{{ i }}] {% if i < (U.size - 2) %}, {% end %}{% end %}], args.last)\n      {% end %}"}},{"id":"set_element(coord:Enumerable,value)-instance-method","html_id":"set_element(coord:Enumerable,value)-instance-method","name":"set_element","doc":"Sets the element specified by `coord` to `value`.\nRaises an error if `coord` is out-of-bounds for this `{{type}}`.","summary":"<p>Sets the element specified by <code>coord</code> to <code>value</code>.</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Enumerable"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(coord : Enumerable, value)","args_html":"(coord : Enumerable, value)","location":{"filename":"src/n_dim/multi_writable.cr","line_number":41,"url":null},"def":{"name":"set_element","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Enumerable"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"unsafe_set_element(RegionHelpers.canonicalize_coord(coord, shape_internal), value.as(T))"}},{"id":"set_region(region:Enumerable,src:MultiIndexable)-instance-method","html_id":"set_region(region:Enumerable,src:MultiIndexable)-instance-method","name":"set_region","doc":"NOTE: changed name from 'value' to 'src' - approve?\nCopies the elements from a MultiIndexable `src` into `region`.\nRaises an error if `region` is out-of-bounds for this `{{type}}` or if the shape of `region` does not match `src.shape`","summary":"<p><span class=\"flag purple\">NOTE</span>  changed name from 'value' to 'src' - approve? Copies the elements from a MultiIndexable <code>src</code> into <code>region</code>.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"},{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"MultiIndexable"}],"args_string":"(region : Enumerable, src : MultiIndexable)","args_html":"(region : Enumerable, src : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>)","location":{"filename":"src/n_dim/multi_writable.cr","line_number":48,"url":null},"def":{"name":"set_region","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"},{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"MultiIndexable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"canonical_region = RegionHelpers.canonicalize_region(region, shape_internal)\nif !(RegionHelpers.compatible_shapes(src.shape_internal, RegionHelpers.measure_canonical_region(canonical_region)))\n  raise(DimensionError.new(\"Cannot substitute #{typeof(src)}: the given #{typeof(src)} has shape #{src.shape_internal}, but region #{region} has shape #{RegionHelpers.measure_canonical_region(canonical_region)}.\"))\nend\nunsafe_set_region(canonical_region, src)\n"}},{"id":"set_region(region:Enumerable,value)-instance-method","html_id":"set_region(region:Enumerable,value)-instance-method","name":"set_region","doc":"Sets each element in `region` to `value`.\nRaises an error if `region` is out-of-bounds for this `{{type}}`.","summary":"<p>Sets each element in <code>region</code> to <code>value</code>.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(region : Enumerable, value)","args_html":"(region : Enumerable, value)","location":{"filename":"src/n_dim/multi_writable.cr","line_number":63,"url":null},"def":{"name":"set_region","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"unsafe_set_region(RegionHelpers.canonicalize_region(region, shape_internal), value.as(T))"}},{"id":"shape:Array(Int32)-instance-method","html_id":"shape:Array(Int32)-instance-method","name":"shape","doc":"Returns the length of the `{{type}}` in each dimension.\nFor a `coord` to specify an element of the `{{type}}` it must satisfy `coord[i] < shape[i]` for each `i`.","summary":"<p>Returns the length of the <code>{{type}}</code> in each dimension.</p>","abstract":true,"args":[],"args_string":" : Array(Int32)","args_html":" : Array(Int32)","location":{"filename":"src/n_dim/multi_writable.cr","line_number":17,"url":null},"def":{"name":"shape","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":""}},{"id":"size-instance-method","html_id":"size-instance-method","name":"size","doc":"Returns the number of elements in the `{{type}}`; equal to `shape.product`.","summary":"<p>Returns the number of elements in the <code>{{type}}</code>; equal to <code>shape.product</code>.</p>","abstract":true,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/multi_writable.cr","line_number":13,"url":null},"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"unsafe_set_element(coord:Enumerable,value:T)-instance-method","html_id":"unsafe_set_element(coord:Enumerable,value:T)-instance-method","name":"unsafe_set_element","doc":"Sets the element specified by `coord` to `value`, assuming that `coord` is in canonical form and in-bounds for this `{{type}}`","summary":"<p>Sets the element specified by <code>coord</code> to <code>value</code>, assuming that <code>coord</code> is in canonical form and in-bounds for this <code>{{type}}</code></p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Enumerable"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(coord : Enumerable, value : T)","args_html":"(coord : Enumerable, value : T)","location":{"filename":"src/n_dim/multi_writable.cr","line_number":35,"url":null},"def":{"name":"unsafe_set_element","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":"Enumerable"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"unsafe_set_region(coord, value)"}},{"id":"unsafe_set_region(region:Enumerable,src:MultiIndexable(T))-instance-method","html_id":"unsafe_set_region(region:Enumerable,src:MultiIndexable(T))-instance-method","name":"unsafe_set_region","doc":"Copies the elements from a MultiIndexable `src` into `region`, assuming that `region` is in canonical form and in-bounds for this `{{type}}`\nand the shape of `region` matches the shape of `src`.\nFor full specification of canonical form see `RegionHelpers` documentation. TODO: make this actually happen","summary":"<p>Copies the elements from a MultiIndexable <code>src</code> into <code>region</code>, assuming that <code>region</code> is in canonical form and in-bounds for this <code>{{type}}</code> and the shape of <code>region</code> matches the shape of <code>src</code>.</p>","abstract":true,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"},{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"MultiIndexable(T)"}],"args_string":"(region : Enumerable, src : MultiIndexable(T))","args_html":"(region : Enumerable, src : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(T))","location":{"filename":"src/n_dim/multi_writable.cr","line_number":22,"url":null},"def":{"name":"unsafe_set_region","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"},{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"MultiIndexable(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"unsafe_set_region(region:Enumerable,value:T)-instance-method","html_id":"unsafe_set_region(region:Enumerable,value:T)-instance-method","name":"unsafe_set_region","doc":"Sets each element in `region` to `value`, assuming that `region` is in canonical form and in-bounds for this `{{type}}`\nFor full specification of canonical form see `RegionHelpers` documentation. TODO: make this actually happen","summary":"<p>Sets each element in <code>region</code> to <code>value</code>, assuming that <code>region</code> is in canonical form and in-bounds for this <code>{{type}}</code> For full specification of canonical form see <code><a href=\"../Lattice/RegionHelpers.html\">RegionHelpers</a></code> documentation.</p>","abstract":true,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(region : Enumerable, value : T)","args_html":"(region : Enumerable, value : T)","location":{"filename":"src/n_dim/multi_writable.cr","line_number":26,"url":null},"def":{"name":"unsafe_set_region","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"lattice-core/Lattice/NArray","path":"Lattice/NArray.html","kind":"class","full_name":"Lattice::NArray(T)","name":"NArray","abstract":false,"superclass":{"html_id":"lattice-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lattice-core/Lattice/MultiWritable","kind":"module","full_name":"Lattice::MultiWritable","name":"MultiWritable"},{"html_id":"lattice-core/Lattice/MultiIndexable","kind":"module","full_name":"Lattice::MultiIndexable","name":"MultiIndexable"},{"html_id":"lattice-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"lattice-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lattice-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/n_array/n_array.cr","line_number":11,"url":null}],"repository_name":"lattice-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"lattice-core/Lattice/MultiIndexable","kind":"module","full_name":"Lattice::MultiIndexable","name":"MultiIndexable"},{"html_id":"lattice-core/Lattice/MultiWritable","kind":"module","full_name":"Lattice::MultiWritable","name":"MultiWritable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"lattice-core/Lattice","kind":"module","full_name":"Lattice","name":"Lattice"},"doc":"An `{{@type}}` is a multidimensional array for any arbitrary type.\nIt is the most general implementation of Abstract{{@type}}, and as a result\nonly implements primitive data operations (construction, data reading,\ndata writing, and region sampling / slicing).\n","summary":"<p>An <code>{{@type}}</code> is a multidimensional array for any arbitrary type.</p>","class_methods":[{"id":"axis_strides(shape)-class-method","html_id":"axis_strides(shape)-class-method","name":"axis_strides","doc":"Given an array of step sizes in each coordinate axis, returns the offset in the buffer\nthat a step of that size represents.\nThe buffer index of a multidimensional coordinate, x, is equal to x dotted with axis_strides","summary":"<p>Given an array of step sizes in each coordinate axis, returns the offset in the buffer that a step of that size represents.</p>","abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"args_string":"(shape)","args_html":"(shape)","location":{"filename":"src/n_array/n_array.cr","line_number":492,"url":null},"def":{"name":"axis_strides","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ret = shape.clone\nret[-1] = 1\n((ret.size - 2)..0).step(-1) do |idx|\n  ret[idx] = ret[idx + 1] * shape[idx + 1]\nend\nret\n"}},{"id":"build(shape,&block:Array(Int32),Int32->T)-class-method","html_id":"build(shape,&block:Array(Int32),Int32->T)-class-method","name":"build","doc":"Constructs an `{{@type}}` using a user-provided *shape* (see `shape`) and a callback.\nThe provided callback should map a multidimensional index, *coord*, (and an optional packed\nindex) to the value you wish to store at that position.\nFor example, to create the 2x2 identity matrix:\n```\nLattice::{{@type}}.build([2, 2]) do |coord|\n  if coord[0] == coord[1]\n    1\n  else\n    0\n  end\nend\n```\nWhich will create:\n```text\n[[1, 0, 0],\n  0, 1, 0],\n  0, 0, 1]]\n```\nThe buffer index allows you to easily index elements in lexicographic order.\nFor example:\n```\n{{@type}}.build([5, 1]) { |coord, index| index }\n```\nWill create:\n```text\n[[0],\n [1],\n [2],\n [3],\n [4]]\n```","summary":"<p>Constructs an <code>{{@type}}</code> using a user-provided <em>shape</em> (see <code><a href=\"../Lattice/NArray.html#shape:Array(Int32)-instance-method\">#shape</a></code>) and a callback.</p>","abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"args_string":"(shape, &block : Array(Int32), Int32 -> T)","args_html":"(shape, &block : Array(Int32), Int32 -> T)","location":{"filename":"src/n_array/n_array.cr","line_number":93,"url":null},"def":{"name":"build","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Array(Int32), Int32 -> T)"},"return_type":"","visibility":"Public","body":"({{ @type }}).new(shape) do |idx|\n  yield index_to_coord(idx, shape), idx\nend"}},{"id":"common_container(*objects)-class-method","html_id":"common_container(*objects)-class-method","name":"common_container","doc":"Given a list of `{{@type}}`s, returns the smallest shape array in which any one of those `{{@type}}s` can be contained.\nTODO: Example","summary":"<p>Given a list of <code>{{@type}}</code>s, returns the smallest shape array in which any one of those <code>{{@type}}s</code> can be contained.</p>","abstract":false,"args":[{"name":"objects","doc":null,"default_value":"","external_name":"objects","restriction":""}],"args_string":"(*objects)","args_html":"(*objects)","location":{"filename":"src/n_array/n_array.cr","line_number":505,"url":null},"def":{"name":"common_container","args":[{"name":"objects","doc":null,"default_value":"","external_name":"objects","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"shapes = objects.to_a.map do |x|\n  x.shape\nend\nmax_dimension = (shapes.map(&.size)).max\ncontainer = (0...max_dimension).map do |dim_idx|\n  sizes_in_dim = shapes.map do |shape|\n    shape[dim_idx]?\n  end\n  sizes_in_dim.compact.max\nend\ncontainer\n"}},{"id":"compatible?(*narrs:MultiIndexable,axis=-1):Bool-class-method","html_id":"compatible?(*narrs:MultiIndexable,axis=-1):Bool-class-method","name":"compatible?","doc":"Checks that the shape of this and other match in every dimension\n(except `axis`, if it is specified)","summary":"<p>Checks that the shape of this and other match in every dimension (except <code>axis</code>, if it is specified)</p>","abstract":false,"args":[{"name":"narrs","doc":null,"default_value":"","external_name":"narrs","restriction":"MultiIndexable"},{"name":"axis","doc":null,"default_value":"-1","external_name":"axis","restriction":""}],"args_string":"(*narrs : MultiIndexable, axis = <span class=\"n\">-1</span>) : Bool","args_html":"(*narrs : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>, axis = <span class=\"n\">-1</span>) : Bool","location":{"filename":"src/n_array/n_array.cr","line_number":528,"url":null},"def":{"name":"compatible?","args":[{"name":"narrs","doc":null,"default_value":"","external_name":"narrs","restriction":"MultiIndexable"},{"name":"axis","doc":null,"default_value":"-1","external_name":"axis","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"first = narrs.to_a.pop\nfirst.compatible?(narrs, axis: axis)\n"}},{"id":"concatenate(*narrs:MultiIndexable(T),axis=0):NArray(T)-class-method","html_id":"concatenate(*narrs:MultiIndexable(T),axis=0):NArray(T)-class-method","name":"concatenate","doc":null,"summary":null,"abstract":false,"args":[{"name":"narrs","doc":null,"default_value":"","external_name":"narrs","restriction":"MultiIndexable(T)"},{"name":"axis","doc":null,"default_value":"0","external_name":"axis","restriction":""}],"args_string":"(*narrs : MultiIndexable(T), axis = <span class=\"n\">0</span>) : NArray(T)","args_html":"(*narrs : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(T), axis = <span class=\"n\">0</span>) : <a href=\"../Lattice/NArray.html\">NArray</a>(T)","location":{"filename":"src/n_array/n_array.cr","line_number":573,"url":null},"def":{"name":"concatenate","args":[{"name":"narrs","doc":null,"default_value":"","external_name":"narrs","restriction":"MultiIndexable(T)"},{"name":"axis","doc":null,"default_value":"0","external_name":"axis","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"NArray(T)","visibility":"Public","body":"self.new(*(narrs[0].concatenate_to_slice(*narrs, axis: axis)))"}},{"id":"coord_to_index(coord,shape):Int32-class-method","html_id":"coord_to_index(coord,shape):Int32-class-method","name":"coord_to_index","doc":"TODO: Talk about what this should be named","summary":"<p><span class=\"flag orange\">TODO</span>  Talk about what this should be named</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"args_string":"(coord, shape) : Int32","args_html":"(coord, shape) : Int32","location":{"filename":"src/n_array/n_array.cr","line_number":288,"url":null},"def":{"name":"coord_to_index","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"coord = RegionHelpers.canonicalize_coord(coord, shape)\nsteps = axis_strides(shape)\n({{ @type }}).coord_to_index_fast(coord, shape, steps)\n"}},{"id":"coord_to_index_fast(coord,shape,axis_strides):Int32-class-method","html_id":"coord_to_index_fast(coord,shape,axis_strides):Int32-class-method","name":"coord_to_index_fast","doc":"Assumes coord is canonical","summary":"<p>Assumes coord is canonical</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"axis_strides","doc":null,"default_value":"","external_name":"axis_strides","restriction":""}],"args_string":"(coord, shape, axis_strides) : Int32","args_html":"(coord, shape, axis_strides) : Int32","location":{"filename":"src/n_array/n_array.cr","line_number":295,"url":null},"def":{"name":"coord_to_index_fast","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"axis_strides","doc":null,"default_value":"","external_name":"axis_strides","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"begin\n  index = 0\n  coord.each_with_index do |elem, idx|\n    index = index + (elem * axis_strides[idx])\n  end\n  index\nrescue exception\n  raise(IndexError.new(\"Cannot convert coordinate to index: the given index is out of bounds for this {{@type}} along at least one dimension.\"))\nend"}},{"id":"fill(shape,value:T)-class-method","html_id":"fill(shape,value:T)-class-method","name":"fill","doc":"Fills an `{{@type}}` of given shape with a specified value.\nFor example, to create a zero vector:\n```\n{{@type}}.fill([3, 1], 0)\n```\nWill produce\n```text\n[[0],\n [0],\n [0]]\n```\nNote that this method makes no effort to duplicate *value*, so this should only be used\nfor `Struct`s. If you want to populate an {{@type}} with `Object`s, see `new(shape, &block)`.","summary":"<p>Fills an <code>{{@type}}</code> of given shape with a specified value.</p>","abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(shape, value : T)","args_html":"(shape, value : T)","location":{"filename":"src/n_array/n_array.cr","line_number":152,"url":null},"def":{"name":"fill","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"({{ @type }}).new(shape) do\n  value\nend"}},{"id":"index_to_coord(index,shape):Array(Int32)-class-method","html_id":"index_to_coord(index,shape):Array(Int32)-class-method","name":"index_to_coord","doc":"OPTIMIZE: This could (maybe) be improved with use of `axis_strides`","summary":"<p><span class=\"flag green\">OPTIMIZE</span>  This could (maybe) be improved with use of <code><a href=\"../Lattice/NArray.html#axis_strides(shape)-class-method\">.axis_strides</a></code></p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"args_string":"(index, shape) : Array(Int32)","args_html":"(index, shape) : Array(Int32)","location":{"filename":"src/n_array/n_array.cr","line_number":313,"url":null},"def":{"name":"index_to_coord","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"if index > shape.product\n  raise(IndexError.new(\"Cannot convert index to coordinate: the given index is out of bounds for this {{@type}} along at least one dimension.\"))\nend\ncoord = Array(Int32).new(shape.size, 0)\nshape.reverse.each_with_index do |length, dim|\n  coord[dim] = index % length\n  index = index // length\nend\ncoord.reverse\n"}},{"id":"wrap(*objects)-class-method","html_id":"wrap(*objects)-class-method","name":"wrap","doc":"creates an {{@type}}-type vector from a tuple of scalars.","summary":"<p>creates an {{@type}}-type vector from a tuple of scalars.</p>","abstract":false,"args":[{"name":"objects","doc":null,"default_value":"","external_name":"objects","restriction":""}],"args_string":"(*objects)","args_html":"(*objects)","location":{"filename":"src/n_array/n_array.cr","line_number":207,"url":null},"def":{"name":"wrap","args":[{"name":"objects","doc":null,"default_value":"","external_name":"objects","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"NArray.new(objects.to_a)"}}],"constructors":[{"id":"new(shape,buffer:Slice(T))-class-method","html_id":"new(shape,buffer:Slice(T))-class-method","name":"new","doc":"Creates an `{{@type}}` out of a shape and a pre-populated buffer.\nFrequently used internally (for example, this is used in\n`reshape` as of Feb 5th 2021).\nTODO: Should be protected, had to remove for testing","summary":"<p>Creates an <code>{{@type}}</code> out of a shape and a pre-populated buffer.</p>","abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"buffer","doc":null,"default_value":"","external_name":"buffer","restriction":"Slice(T)"}],"args_string":"(shape, buffer : Slice(T))","args_html":"(shape, buffer : Slice(T))","location":{"filename":"src/n_array/n_array.cr","line_number":52,"url":null},"def":{"name":"new","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"buffer","doc":null,"default_value":"","external_name":"buffer","restriction":"Slice(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = NArray(T).allocate\n_.initialize(shape, buffer)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/n_array/n_array.cr","line_number":722,"url":null},"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if node.is_a?(YAML::Nodes::Mapping)\n  ctx.read_alias(node, self) do |obj|\n    return obj\n  end\n  shape = nil\n  elements = nil\n  (node.nodes.each_with_index.step(2)).each do |child, idx|\n    if child.is_a?(YAML::Nodes::Scalar)\n      case child.value\n      when \"shape\"\n        shape = Array(Int32).new(ctx, node.nodes[idx + 1])\n      when \"elements\"\n        elements_node = node.nodes[idx + 1]\n        if elements_node.is_a?(YAML::Nodes::Sequence)\n          {% if true %}\n                elements = Array({{ @type.type_vars[0] }}).new(ctx, elements_node)\n                {% end %}\n        else\n          raise(YAML::Error.new(\"Could not read NArray from YAML: Expected sequence, found #{elements_node.class}\"))\n        end\n      end\n    else\n      raise(YAML::Error.new(\"Could not read NArray from YAML: Did not expect nested elements\"))\n    end\n  end\n  if shape.nil? || elements.nil?\n  else\n    if elements.size == shape.product\n      elements = Slice.new(elements.to_unsafe, elements.size)\n      ret = new(shape, elements)\n      ctx.record_anchor(node, ret)\n      return ret\n    else\n      raise(YAML::Error.new(\"Could not read NArray from YAML: wrong number of elements for shape #{shape}\"))\n    end\n  end\n  raise(YAML::Error.new(\"Could not read NArray from YAML: 'shape' and/or 'elements' were missing.\"))\nelse\n  raise(YAML::Error.new(\"Could not read NArray from YAML: Expected mapping, found #{node.class}\"))\nend"}},{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/n_array/n_array.cr","line_number":671,"url":null},"def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if true %}\n        shape = [] of Int32\n        elements = [] of {{ @type.type_vars[0] }}\n\n        found_shape = false\n        found_elements = false\n\n        pull.read_object do |key, key_loc|\n          case key\n          when \"shape\"\n            found_shape = true\n            pull.read_array do\n              shape << pull.read?(Int32).not_nil!\n            end\n          when \"elements\"\n            pull.read_array do\n              found_elements = true\n              elements << {{ @type.type_vars[0] }}.new(pull)\n            end\n          end\n        end\n\n        if found_shape && found_elements\n          if shape.product == elements.size\n            buffer = Slice.new(elements.to_unsafe, elements.size)\n            return new(shape, buffer)\n          else\n            raise JSON::Error.new(\"Could not read NArray from YAML: wrong number of elements for shape #{shape}\")\n          end\n        else\n          raise JSON::Error.new(\"Could not read NArray from YAML: 'shape' and/or 'elements' were missing.\")\n        end\n        {% end %}"}},{"id":"new(nested_array)-class-method","html_id":"new(nested_array)-class-method","name":"new","doc":"Creates an `{{@type}}` from a nested array with uniform dimensions.\nFor example:\n```\n{{@type}}.new([[1, 0, 0], [0, 1, 0], [0, 0, 1]])\n```\nWould create the 3x3 identity matrix of type `{{@type}}(Int32)`.\n\nThis constructor will figure out the types of the scalars at the\nbottom of the nested array at compile time, which allows mixing\ndatatypes effortlessly.\nFor example, to create a matrix with 0.5 on the diagonals:\n```\n{{@type}}.new([[0.5, 0, 0], [0, 0.5, 0], [0, 0, 0.5]])\n```\nThis may seem trivial, but note that the `0.5`s are implicit\n`Float32` literals, whereas the `0`s are implicit `Int32` literals.\nSo, the type returned by that example will actually be an `{{@type}}(Float32 | Int32)`.\nThis also works for more disorganized examples:\n```\n{{@type}}.new([[\"We can mix types\", 2, :do], [\"C\", 0.0, \"l stuff.\"]])\n```\nThe above line will create an `{{@type}}(String | Int32 | Symbol | Float32)`.\n\nWhen a nested array with non-uniform dimensions is passed, this method will\nraise a `DimensionError`.\nFor example:\n```\n{{@type}}.new([[1], [1, 2]]) # => DimensionError\n```","summary":"<p>Creates an <code>{{@type}}</code> from a nested array with uniform dimensions.</p>","abstract":false,"args":[{"name":"nested_array","doc":null,"default_value":"","external_name":"nested_array","restriction":""}],"args_string":"(nested_array)","args_html":"(nested_array)","location":{"filename":"src/n_array/n_array.cr","line_number":128,"url":null},"def":{"name":"new","args":[{"name":"nested_array","doc":null,"default_value":"","external_name":"nested_array","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"shape = measure_nested_array(nested_array)\nflattened = nested_array.flatten\nbuffer = Slice.new(flattened.to_unsafe, flattened.size)\nself.new(shape, buffer)\n"}},{"id":"wrap(*objects:AbstractNArray(T),pad=false):NArray-class-method","html_id":"wrap(*objects:AbstractNArray(T),pad=false):NArray-class-method","name":"wrap","doc":"Adds a dimension at highest level, where each \"row\" is an input {{@type}}.\nIf pad is false, then throw error if shapes of objects do not match;\notherwise, pad subarrays along each axis to match whichever is largest in that axis","summary":"<p>Adds a dimension at highest level, where each \"row\" is an input {{@type}}.</p>","abstract":false,"args":[{"name":"objects","doc":null,"default_value":"","external_name":"objects","restriction":"AbstractNArray(T)"},{"name":"pad","doc":null,"default_value":"false","external_name":"pad","restriction":""}],"args_string":"(*objects : AbstractNArray(T), pad = <span class=\"n\">false</span>) : NArray","args_html":"(*objects : AbstractNArray(T), pad = <span class=\"n\">false</span>) : <a href=\"../Lattice/NArray.html\">NArray</a>","location":{"filename":"src/n_array/n_array.cr","line_number":185,"url":null},"def":{"name":"wrap","args":[{"name":"objects","doc":null,"default_value":"","external_name":"objects","restriction":"AbstractNArray(T)"},{"name":"pad","doc":null,"default_value":"false","external_name":"pad","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"NArray","visibility":"Public","body":"shapes = objects.to_a.map do |x|\n  x.shape\nend\nif pad\n  container = common_container(*objects)\n  raise(NotImplementedError.new(\"As of this time, {{@type}}.wrap() cannot pad arrays for you. Come back after reshaping has been implemented, or get off the couch and go do it yourself.\"))\nelse\n  container = shapes[0]\n  if shapes.any? do |shape|\n    shape != container\n  end\n    raise(DimensionError.new(\"Cannot wrap these arrays: shapes do not match. Pass argument pad:true if you want to reshape arrays as necessary.\"))\n  end\nend\ncontainer.insert(0, objects.size)\ncombined_buffer = objects.reduce([] of T) do |memo, i|\n  memo.concat(i.buffer.to_a)\nend\nNArray(T).new(container) do |i|\n  combined_buffer[i]\nend\n"}}],"instance_methods":[{"id":"self):self-instance-method","html_id":"self):self-instance-method","name":"<<","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>) : <span class=\"k\">self</span>","args_html":"(other : <span class=\"k\">self</span>) : <span class=\"k\">self</span>","location":{"filename":"src/n_array/n_array.cr","line_number":534,"url":null},"def":{"name":"<<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"push(other)"}},{"id":"==(other:MultiIndexable):Bool-instance-method","html_id":"==(other:MultiIndexable):Bool-instance-method","name":"==","doc":"Checks for elementwise equality between `self` and *other*.","summary":"<p>Checks for elementwise equality between <code>self</code> and <em>other</em>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable"}],"args_string":"(other : MultiIndexable) : Bool","args_html":"(other : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>) : Bool","location":{"filename":"src/n_array/n_array.cr","line_number":277,"url":null},"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"equals?(other) do |x, y|\n  x == y\nend"}},{"id":"[](index:Int32):self-instance-method","html_id":"[](index:Int32):self-instance-method","name":"[]","doc":"Takes a single index into the {{@type}}, returning a slice of the largest dimension possible.\nFor example, if `a` is a matrix, `a[0]` will be a vector. There is a special case when\nindexing into a 1D `{{@type}}` - the scalar at the index provided will be wrapped in an\n`{{@type}}`. This is to preserve type-safety - if you want to extract the scalar as type `T`,\ninvoke `#to_scalar`.\nTODO: Either make the type restriction here go away (it was getting called when indexing\nwith a single range), or remove this method entirely in favor of read only views","summary":"<p>Takes a single index into the {{@type}}, returning a slice of the largest dimension possible.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"}],"args_string":"(index : Int32) : <span class=\"k\">self</span>","args_html":"(index : Int32) : <span class=\"k\">self</span>","location":{"filename":"src/n_array/n_array.cr","line_number":352,"url":null},"def":{"name":"[]","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"index = RegionHelpers.canonicalize_index(index, @shape, axis = 0)\nif dimensions == 1\n  new_shape = [1]\nelse\n  new_shape = @shape[1..]\nend\nstep = new_shape.product\nnew_buffer = @buffer[index * step, step]\n({{ @type }}).new(new_shape, new_buffer.clone)\n"}},{"id":"[]=(bool_mask:NArray(Bool),value:T)-instance-method","html_id":"[]=(bool_mask:NArray(Bool),value:T)-instance-method","name":"[]=","doc":"replaces all values in a boolean mask with a given value","summary":"<p>replaces all values in a boolean mask with a given value</p>","abstract":false,"args":[{"name":"bool_mask","doc":null,"default_value":"","external_name":"bool_mask","restriction":"NArray(Bool)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(bool_mask : NArray(Bool), value : T)","args_html":"(bool_mask : <a href=\"../Lattice/NArray.html\">NArray</a>(Bool), value : T)","location":{"filename":"src/n_array/n_array.cr","line_number":385,"url":null},"def":{"name":"[]=","args":[{"name":"bool_mask","doc":null,"default_value":"","external_name":"bool_mask","restriction":"NArray(Bool)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if bool_mask.shape != @shape\n  raise(DimensionError.new(\"Cannot perform masking: mask shape does not match array shape.\"))\nend\nbool_mask.buffer.each_with_index do |bool_val, idx|\n  if bool_val\n    @buffer[idx] = value\n  end\nend\n"}},{"id":"buffer:Slice(T)-instance-method","html_id":"buffer:Slice(T)-instance-method","name":"buffer","doc":"Stores the elements of an `{{@type}}` in lexicographic (row-major) order.","summary":"<p>Stores the elements of an <code>{{@type}}</code> in lexicographic (row-major) order.</p>","abstract":false,"args":[],"args_string":" : Slice(T)","args_html":" : Slice(T)","location":{"filename":"src/n_array/n_array.cr","line_number":16,"url":null},"def":{"name":"buffer","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Slice(T)","visibility":"Public","body":"@buffer"}},{"id":"clone:self-instance-method","html_id":"clone:self-instance-method","name":"clone","doc":"Creates a deep copy of this {{@type}};\nAllocates a new buffer of the same shape, and calls #clone on every item in the buffer.","summary":"<p>Creates a deep copy of this {{@type}}; Allocates a new buffer of the same shape, and calls #clone on every item in the buffer.</p>","abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/n_array/n_array.cr","line_number":227,"url":null},"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"({{ @type }}).new(@shape, @buffer.clone)"}},{"id":"compatible?(*others:MultiIndexable,axis=-1):Bool-instance-method","html_id":"compatible?(*others:MultiIndexable,axis=-1):Bool-instance-method","name":"compatible?","doc":"Checks that the shape of this and other match in every dimension\n(except `axis`, if it is specified)","summary":"<p>Checks that the shape of this and other match in every dimension (except <code>axis</code>, if it is specified)</p>","abstract":false,"args":[{"name":"others","doc":null,"default_value":"","external_name":"others","restriction":"MultiIndexable"},{"name":"axis","doc":null,"default_value":"-1","external_name":"axis","restriction":""}],"args_string":"(*others : MultiIndexable, axis = <span class=\"n\">-1</span>) : Bool","args_html":"(*others : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>, axis = <span class=\"n\">-1</span>) : Bool","location":{"filename":"src/n_array/n_array.cr","line_number":517,"url":null},"def":{"name":"compatible?","args":[{"name":"others","doc":null,"default_value":"","external_name":"others","restriction":"MultiIndexable"},{"name":"axis","doc":null,"default_value":"-1","external_name":"axis","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"shape.each_with_index do |dim, idx|\n  others.each do |narr|\n    if (dim != narr.shape[idx]) && (idx != axis)\n      return false\n    end\n  end\nend\nreturn true\n"}},{"id":"concatenate(*others,axis=0):self-instance-method","html_id":"concatenate(*others,axis=0):self-instance-method","name":"concatenate","doc":null,"summary":null,"abstract":false,"args":[{"name":"others","doc":null,"default_value":"","external_name":"others","restriction":""},{"name":"axis","doc":null,"default_value":"0","external_name":"axis","restriction":""}],"args_string":"(*others, axis = <span class=\"n\">0</span>) : <span class=\"k\">self</span>","args_html":"(*others, axis = <span class=\"n\">0</span>) : <span class=\"k\">self</span>","location":{"filename":"src/n_array/n_array.cr","line_number":564,"url":null},"def":{"name":"concatenate","args":[{"name":"others","doc":null,"default_value":"","external_name":"others","restriction":""},{"name":"axis","doc":null,"default_value":"0","external_name":"axis","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"self.new(*(narrs[0].concatenate_to_slice(*narrs, axis: axis)))"}},{"id":"concatenate!(*others,axis=0):self-instance-method","html_id":"concatenate!(*others,axis=0):self-instance-method","name":"concatenate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"others","doc":null,"default_value":"","external_name":"others","restriction":""},{"name":"axis","doc":null,"default_value":"0","external_name":"axis","restriction":""}],"args_string":"(*others, axis = <span class=\"n\">0</span>) : <span class=\"k\">self</span>","args_html":"(*others, axis = <span class=\"n\">0</span>) : <span class=\"k\">self</span>","location":{"filename":"src/n_array/n_array.cr","line_number":568,"url":null},"def":{"name":"concatenate!","args":[{"name":"others","doc":null,"default_value":"","external_name":"others","restriction":""},{"name":"axis","doc":null,"default_value":"0","external_name":"axis","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"@shape, @buffer = concatenate_to_slice(self, *others, axis: axis)\nself\n"}},{"id":"coord_to_index(coord):Int32-instance-method","html_id":"coord_to_index(coord):Int32-instance-method","name":"coord_to_index","doc":"Convert from n-dimensional indexing to a buffer location.","summary":"<p>Convert from n-dimensional indexing to a buffer location.</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"args_string":"(coord) : Int32","args_html":"(coord) : Int32","location":{"filename":"src/n_array/n_array.cr","line_number":282,"url":null},"def":{"name":"coord_to_index","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"coord = RegionHelpers.canonicalize_coord(coord, @shape)\n({{ @type }}).coord_to_index_fast(coord, @shape, @axis_strides)\n"}},{"id":"dup:self-instance-method","html_id":"dup:self-instance-method","name":"dup","doc":"Creates a shallow copy of this {{@type}};\nAllocates a new buffer of the same shape, and duplicates every item in the buffer.","summary":"<p>Creates a shallow copy of this {{@type}}; Allocates a new buffer of the same shape, and duplicates every item in the buffer.</p>","abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/n_array/n_array.cr","line_number":233,"url":null},"def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"({{ @type }}).new(@shape, @buffer.dup)"}},{"id":"each_in_region(region,&block:T,Int32,Int32->)-instance-method","html_id":"each_in_region(region,&block:T,Int32,Int32->)-instance-method","name":"each_in_region","doc":null,"summary":null,"abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"args_string":"(region, &block : T, Int32, Int32 -> )","args_html":"(region, &block : T, Int32, Int32 -> )","location":{"filename":"src/n_array/n_array.cr","line_number":454,"url":null},"def":{"name":"each_in_region","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"double_splat":null,"splat_index":null,"yields":3,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T, Int32, Int32 -> )"},"return_type":"","visibility":"Public","body":"region = RegionHelpers.canonicalize_region(region, @shape)\nnarray_each_in_canonical_region(region, &block)\n"}},{"id":"each_with_index(&block:T,Int32->)-instance-method","html_id":"each_with_index(&block:T,Int32->)-instance-method","name":"each_with_index","doc":"Iterates over the collection, yielding both the elements and their index.\n\n```\n[\"Alice\", \"Bob\"].each_with_index do |user, i|\n  puts \"User ##{i}: #{user}\"\nend\n```\n\nPrints:\n\n```text\nUser # 0: Alice\nUser # 1: Bob\n```\n\nAccepts an optional *offset* parameter, which tells it to start counting\nfrom there. So, a more human friendly version of the previous snippet would be:\n\n```\n[\"Alice\", \"Bob\"].each_with_index(1) do |user, i|\n  puts \"User ##{i}: #{user}\"\nend\n```\n\nWhich would print:\n\n```text\nUser # 1: Alice\nUser # 2: Bob\n```","summary":"<p>Iterates over the collection, yielding both the elements and their index.</p>","abstract":false,"args":[],"args_string":"(&block : T, Int32 -> )","args_html":"(&block : T, Int32 -> )","location":{"filename":"src/n_array/n_array.cr","line_number":403,"url":null},"def":{"name":"each_with_index","args":[],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T, Int32 -> )"},"return_type":"","visibility":"Public","body":"@buffer.each_with_index do |elem, idx|\n  yield elem, idx\nend"}},{"id":"fit(shape,pad_withvalue,align:Hash(Int32,NArray::Alignment|Int32))-instance-method","html_id":"fit(shape,pad_withvalue,align:Hash(Int32,NArray::Alignment|Int32))-instance-method","name":"fit","doc":null,"summary":null,"abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"pad_with","restriction":""},{"name":"align","doc":null,"default_value":"","external_name":"align","restriction":"Hash(Int32, NArray::Alignment | Int32)"}],"args_string":"(shape, pad_with value, align : Hash(Int32, NArray::Alignment | Int32))","args_html":"(shape, pad_with value, align : Hash(Int32, NArray::Alignment | Int32))","location":{"filename":"src/n_array/n_array.cr","line_number":166,"url":null},"def":{"name":"fit","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"pad_with","restriction":""},{"name":"align","doc":null,"default_value":"","external_name":"align","restriction":"Hash(Int32, NArray::Alignment | Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"fit!-instance-method","html_id":"fit!-instance-method","name":"fit!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_array/n_array.cr","line_number":172,"url":null},"def":{"name":"fit!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"flatten:self-instance-method","html_id":"flatten:self-instance-method","name":"flatten","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","args_html":" : <span class=\"k\">self</span>","location":{"filename":"src/n_array/n_array.cr","line_number":259,"url":null},"def":{"name":"flatten","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"reshape(@buffer.size)"}},{"id":"index_to_coord(index):Array(Int32)-instance-method","html_id":"index_to_coord(index):Array(Int32)-instance-method","name":"index_to_coord","doc":"Convert from a buffer location to an n-dimensional coord","summary":"<p>Convert from a buffer location to an n-dimensional coord</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""}],"args_string":"(index) : Array(Int32)","args_html":"(index) : Array(Int32)","location":{"filename":"src/n_array/n_array.cr","line_number":308,"url":null},"def":{"name":"index_to_coord","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"({{ @type }}).index_to_coord(index, @shape)"}},{"id":"narray_each_in_canonical_region(region,axis=0,read_index=0,write_index=[0],&block:T,Int32,Int32->)-instance-method","html_id":"narray_each_in_canonical_region(region,axis=0,read_index=0,write_index=[0],&block:T,Int32,Int32->)-instance-method","name":"narray_each_in_canonical_region","doc":"TODO: Document","summary":"<p><span class=\"flag orange\">TODO</span>  Document</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""},{"name":"axis","doc":null,"default_value":"0","external_name":"axis","restriction":""},{"name":"read_index","doc":null,"default_value":"0","external_name":"read_index","restriction":""},{"name":"write_index","doc":null,"default_value":"[0]","external_name":"write_index","restriction":""}],"args_string":"(region, axis = <span class=\"n\">0</span>, read_index = <span class=\"n\">0</span>, write_index = [<span class=\"n\">0</span>], &block : T, Int32, Int32 -> )","args_html":"(region, axis = <span class=\"n\">0</span>, read_index = <span class=\"n\">0</span>, write_index = [<span class=\"n\">0</span>], &block : T, Int32, Int32 -> )","location":{"filename":"src/n_array/n_array.cr","line_number":461,"url":null},"def":{"name":"narray_each_in_canonical_region","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""},{"name":"axis","doc":null,"default_value":"0","external_name":"axis","restriction":""},{"name":"read_index","doc":null,"default_value":"0","external_name":"read_index","restriction":""},{"name":"write_index","doc":null,"default_value":"[0]","external_name":"write_index","restriction":""}],"double_splat":null,"splat_index":null,"yields":3,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T, Int32, Int32 -> )"},"return_type":"","visibility":"Public","body":"current_range = region[axis]\nif axis == (@shape.size - 1)\n  current_range.each do |idx|\n    yield @buffer.unsafe_fetch(read_index + idx), write_index.unsafe_fetch(0), read_index + idx\n    write_index[0] = write_index[0] + 1\n  end\n  return\nend\nbuffer_step_size = @axis_strides[axis]\ninitial_read_index = read_index\ncurrent_range.each do |idx|\n  read_index = initial_read_index + (idx * buffer_step_size)\n  narray_each_in_canonical_region(region, axis + 1, read_index, write_index) do |a, b, c|\n    block.call(a, b, c)\n  end\nend\n"}},{"id":"pad(value,amounts:Hash(Int32,Tuple(Int32,Int32)))-instance-method","html_id":"pad(value,amounts:Hash(Int32,Tuple(Int32,Int32)))-instance-method","name":"pad","doc":"core\npad(0, {0 => {2, 2}, 1 => {3, 4}, -1 => {0, 5}})","summary":"<p>core pad(0, {0 => {2, 2}, 1 => {3, 4}, -1 => {0, 5}})</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"amounts","doc":null,"default_value":"","external_name":"amounts","restriction":"Hash(Int32, Tuple(Int32, Int32))"}],"args_string":"(value, amounts : Hash(Int32, Tuple(Int32, Int32)))","args_html":"(value, amounts : Hash(Int32, Tuple(Int32, Int32)))","location":{"filename":"src/n_array/n_array.cr","line_number":163,"url":null},"def":{"name":"pad","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"amounts","doc":null,"default_value":"","external_name":"amounts","restriction":"Hash(Int32, Tuple(Int32, Int32))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"pad!-instance-method","html_id":"pad!-instance-method","name":"pad!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_array/n_array.cr","line_number":169,"url":null},"def":{"name":"pad!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"push(*others:self):self-instance-method","html_id":"push(*others:self):self-instance-method","name":"push","doc":"optimization for pushing other NArrays on axis 0, in-place","summary":"<p>optimization for pushing other NArrays on axis 0, in-place</p>","abstract":false,"args":[{"name":"others","doc":null,"default_value":"","external_name":"others","restriction":"self"}],"args_string":"(*others : <span class=\"k\">self</span>) : <span class=\"k\">self</span>","args_html":"(*others : <span class=\"k\">self</span>) : <span class=\"k\">self</span>","location":{"filename":"src/n_array/n_array.cr","line_number":539,"url":null},"def":{"name":"push","args":[{"name":"others","doc":null,"default_value":"","external_name":"others","restriction":"self"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"if !(compatible?(*others, axis: axis))\n  raise(DimensionError.new(\"Cannot concatenate these arrays along axis #{axis}: shapes do not match\"))\nend\nconcat_size = size + others.sum do |narr|\n  narr.size\nend\nfull_ptr = Pointer(T).malloc(concat_size)\nfull_ptr.move_from(@buffer.to_unsafe, size)\nptr = full_ptr + size\nothers.each do |narr|\n  ptr.move_from(narr.buffer.to_unsafe, narr.size)\n  ptr = ptr + narr.size\nend\n@shape[0] = @shape[0] + others.sum do |narr|\n  narr.shape[0]\nend\n@buffer = Slice.new(full_ptr, concat_size)\nself\n"}},{"id":"reshape(*splat)-instance-method","html_id":"reshape(*splat)-instance-method","name":"reshape","doc":null,"summary":null,"abstract":false,"args":[{"name":"splat","doc":null,"default_value":"","external_name":"splat","restriction":""}],"args_string":"(*splat)","args_html":"(*splat)","location":{"filename":"src/n_array/n_array.cr","line_number":267,"url":null},"def":{"name":"reshape","args":[{"name":"splat","doc":null,"default_value":"","external_name":"splat","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"reshape(splat)"}},{"id":"reshape(new_shape:Enumerable)-instance-method","html_id":"reshape(new_shape:Enumerable)-instance-method","name":"reshape","doc":null,"summary":null,"abstract":false,"args":[{"name":"new_shape","doc":null,"default_value":"","external_name":"new_shape","restriction":"Enumerable"}],"args_string":"(new_shape : Enumerable)","args_html":"(new_shape : Enumerable)","location":{"filename":"src/n_array/n_array.cr","line_number":263,"url":null},"def":{"name":"reshape","args":[{"name":"new_shape","doc":null,"default_value":"","external_name":"new_shape","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"({{ @type }}).new(new_shape.to_a, @buffer)"}},{"id":"scalar?:Bool-instance-method","html_id":"scalar?:Bool-instance-method","name":"scalar?","doc":"Checks that the array is a 1-vector (a \"zero-dimensional\" {{@type}})","summary":"<p>Checks that the array is a 1-vector (a \"zero-dimensional\" {{@type}})</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/n_array/n_array.cr","line_number":272,"url":null},"def":{"name":"scalar?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(@shape.size == 1) && (@shape[0] == 1)"}},{"id":"shape:Array(Int32)-instance-method","html_id":"shape:Array(Int32)-instance-method","name":"shape","doc":"Returns the number of elements in each axis of the `{{@type}}`.\nMore explicitly, axis *k* contains `shape[k]` elements.","summary":"<p>Returns the number of elements in each axis of the <code>{{@type}}</code>.</p>","abstract":false,"args":[],"args_string":" : Array(Int32)","args_html":" : Array(Int32)","location":{"filename":"src/n_array/n_array.cr","line_number":217,"url":null},"def":{"name":"shape","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@shape.clone"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":"Returns the number of elements in the `{{type}}`; equal to `shape.product`.","summary":"<p>Returns the number of elements in the <code>{{type}}</code>; equal to <code>shape.product</code>.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/n_array/n_array.cr","line_number":221,"url":null},"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"return @shape.product"}},{"id":"slices(axis=0):Array(self)-instance-method","html_id":"slices(axis=0):Array(self)-instance-method","name":"slices","doc":"TODO any way to avoid copying these out yet, too? Iterator magic?","summary":"<p><span class=\"flag orange\">TODO</span>  any way to avoid copying these out yet, too? Iterator magic?</p>","abstract":false,"args":[{"name":"axis","doc":null,"default_value":"0","external_name":"axis","restriction":""}],"args_string":"(axis = <span class=\"n\">0</span>) : Array(<span class=\"k\">self</span>)","args_html":"(axis = <span class=\"n\">0</span>) : Array(<span class=\"k\">self</span>)","location":{"filename":"src/n_array/n_array.cr","line_number":238,"url":null},"def":{"name":"slices","args":[{"name":"axis","doc":null,"default_value":"0","external_name":"axis","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(self)","visibility":"Public","body":"region = [] of Int32 | Range(Int32, Int32)\n(0...axis).each do |dim|\n  region << (Range.new(0, @shape[dim] - 1))\nend\nregion << 0\nmapping = [] of Int32\neach_in_region(region) do |elem, idx, buffer_idx|\n  mapping << buffer_idx\nend\nshape = RegionHelpers.measure_region(region, @shape)\nstep = @axis_strides[axis]\nslices = (0...@shape[axis]).map do |slice_number|\n  offset = step * slice_number\n  ({{ @type }}).new(shape) do |i|\n    mapping[i] + offset\n  end\nend\n"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","location":{"filename":"src/n_array/n_array.cr","line_number":659,"url":null},"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  json.scalar(\"shape\")\n  @shape.to_json(json)\n  json.scalar(\"elements\")\n  json.array do\n    @buffer.each(&.to_json(json))\n  end\nend"}},{"id":"to_yaml(yaml:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(yaml:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"YAML::Nodes::Builder"}],"args_string":"(yaml : YAML::Nodes::Builder)","args_html":"(yaml : YAML::Nodes::Builder)","location":{"filename":"src/n_array/n_array.cr","line_number":707,"url":null},"def":{"name":"to_yaml","args":[{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"yaml.mapping do\n  yaml.scalar(\"shape\")\n  yaml.sequence(style: YAML::SequenceStyle::FLOW) do\n    @shape.each(&.to_yaml(yaml))\n  end\n  yaml.scalar(\"elements\")\n  style = T < Number::Primitive ? YAML::SequenceStyle::FLOW : YAML::SequenceStyle::BLOCK\n  yaml.sequence(style: style) do\n    @buffer.each(&.to_yaml(yaml))\n  end\nend"}},{"id":"unsafe_fetch_element(coord):T-instance-method","html_id":"unsafe_fetch_element(coord):T-instance-method","name":"unsafe_fetch_element","doc":"Retrieves the element specified by `coord`, assuming that `coord` is in canonical form and in-bounds for this `{{type}}`.\nFor full specification of canonical form see `RegionHelpers` documentation. TODO: make this actually happen","summary":"<p>Retrieves the element specified by <code>coord</code>, assuming that <code>coord</code> is in canonical form and in-bounds for this <code>{{type}}</code>.</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"args_string":"(coord) : T","args_html":"(coord) : T","location":{"filename":"src/n_array/n_array.cr","line_number":341,"url":null},"def":{"name":"unsafe_fetch_element","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"@buffer.unsafe_fetch(NArray.coord_to_index_fast(coord, @shape, @axis_strides))"}},{"id":"unsafe_fetch_region(region)-instance-method","html_id":"unsafe_fetch_region(region)-instance-method","name":"unsafe_fetch_region","doc":"Copies the elements in `region` to a new `{{type}}`, assuming that `region` is in canonical form and in-bounds for this `{{type}}`.\nFor full specification of canonical form see `RegionHelpers` documentation. TODO: make this actually happen","summary":"<p>Copies the elements in <code>region</code> to a new <code>{{type}}</code>, assuming that <code>region</code> is in canonical form and in-bounds for this <code>{{type}}</code>.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"args_string":"(region)","args_html":"(region)","location":{"filename":"src/n_array/n_array.cr","line_number":327,"url":null},"def":{"name":"unsafe_fetch_region","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"shape = RegionHelpers.measure_canonical_region(region)\nbuffer_arr = [] of T\nnarray_each_in_canonical_region(region) do |elem, idx, src_idx|\n  buffer_arr << elem\nend\n({{ @type }}).new(shape) do |i|\n  buffer_arr[i]\nend\n"}},{"id":"unsafe_set_region(region:Enumerable,value:T)-instance-method","html_id":"unsafe_set_region(region:Enumerable,value:T)-instance-method","name":"unsafe_set_region","doc":"Sets each element in `region` to `value`, assuming that `region` is in canonical form and in-bounds for this `{{type}}`","summary":"<p>Sets each element in <code>region</code> to <code>value</code>, assuming that <code>region</code> is in canonical form and in-bounds for this <code>{{type}}</code></p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(region : Enumerable, value : T)","args_html":"(region : Enumerable, value : T)","location":{"filename":"src/n_array/n_array.cr","line_number":378,"url":null},"def":{"name":"unsafe_set_region","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"narray_each_in_canonical_region(region) do |elem, idx, buffer_idx|\n  @buffer[buffer_idx] = value\nend"}},{"id":"unsafe_set_region(region:Enumerable,src:MultiIndexable(T))-instance-method","html_id":"unsafe_set_region(region:Enumerable,src:MultiIndexable(T))-instance-method","name":"unsafe_set_region","doc":"Copies the elements from a MultiIndexable `src` into `region`, assuming that `region` is in canonical form and in-bounds for this `{{type}}`\nand the shape of `region` matches the shape of `src`.","summary":"<p>Copies the elements from a MultiIndexable <code>src</code> into <code>region</code>, assuming that <code>region</code> is in canonical form and in-bounds for this <code>{{type}}</code> and the shape of <code>region</code> matches the shape of <code>src</code>.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"},{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"MultiIndexable(T)"}],"args_string":"(region : Enumerable, src : MultiIndexable(T))","args_html":"(region : Enumerable, src : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(T))","location":{"filename":"src/n_array/n_array.cr","line_number":369,"url":null},"def":{"name":"unsafe_set_region","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"},{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"MultiIndexable(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"narray_each_in_canonical_region(region) do |elem, other_idx, this_idx|\n  @buffer[this_idx] = src.unsafe_fetch_element(src.index_to_coord(other_idx))\nend"}}],"macros":[],"types":[{"html_id":"lattice-core/Lattice/NArray/BufferedColexRegionIterator","path":"Lattice/NArray/BufferedColexRegionIterator.html","kind":"class","full_name":"Lattice::NArray::BufferedColexRegionIterator(A, T)","name":"BufferedColexRegionIterator","abstract":false,"superclass":{"html_id":"lattice-core/Lattice/NArray/BufferedLexRegionIterator","kind":"class","full_name":"Lattice::NArray::BufferedLexRegionIterator","name":"BufferedLexRegionIterator"},"ancestors":[{"html_id":"lattice-core/Lattice/NArray/BufferedLexRegionIterator","kind":"class","full_name":"Lattice::NArray::BufferedLexRegionIterator","name":"BufferedLexRegionIterator"},{"html_id":"lattice-core/Lattice/MultiIndexable/RegionIterator","kind":"class","full_name":"Lattice::MultiIndexable::RegionIterator","name":"RegionIterator"},{"html_id":"lattice-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"lattice-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"lattice-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lattice-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/n_array/n_array.cr","line_number":807,"url":null}],"repository_name":"lattice-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"lattice-core/Lattice/NArray","kind":"class","full_name":"Lattice::NArray(T)","name":"NArray"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(narr:A,region=nil,reverse=false)-class-method","html_id":"new(narr:A,region=nil,reverse=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"A"},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""},{"name":"reverse","doc":null,"default_value":"false","external_name":"reverse","restriction":""}],"args_string":"(narr : A, region = <span class=\"n\">nil</span>, reverse = <span class=\"n\">false</span>)","args_html":"(narr : A, region = <span class=\"n\">nil</span>, reverse = <span class=\"n\">false</span>)","location":{"filename":"src/n_array/n_array.cr","line_number":774,"url":null},"def":{"name":"new","args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"A"},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""},{"name":"reverse","doc":null,"default_value":"false","external_name":"reverse","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = BufferedColexRegionIterator(A, T).allocate\n_.initialize(narr, region, reverse)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"setup_buffer_index(buffer_index,buffer_step,step)-instance-method","html_id":"setup_buffer_index(buffer_index,buffer_step,step)-instance-method","name":"setup_buffer_index","doc":null,"summary":null,"abstract":false,"args":[{"name":"buffer_index","doc":null,"default_value":"","external_name":"buffer_index","restriction":""},{"name":"buffer_step","doc":null,"default_value":"","external_name":"buffer_step","restriction":""},{"name":"step","doc":null,"default_value":"","external_name":"step","restriction":""}],"args_string":"(buffer_index, buffer_step, step)","args_html":"(buffer_index, buffer_step, step)","location":{"filename":"src/n_array/n_array.cr","line_number":813,"url":null},"def":{"name":"setup_buffer_index","args":[{"name":"buffer_index","doc":null,"default_value":"","external_name":"buffer_index","restriction":""},{"name":"buffer_step","doc":null,"default_value":"","external_name":"buffer_step","restriction":""},{"name":"step","doc":null,"default_value":"","external_name":"step","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"buffer_index = buffer_index - (buffer_step[0] * step[0])\nbuffer_index\n"}},{"id":"setup_coord(coord,step)-instance-method","html_id":"setup_coord(coord,step)-instance-method","name":"setup_coord","doc":null,"summary":null,"abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"step","doc":null,"default_value":"","external_name":"step","restriction":""}],"args_string":"(coord, step)","args_html":"(coord, step)","location":{"filename":"src/n_array/n_array.cr","line_number":809,"url":null},"def":{"name":"setup_coord","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"step","doc":null,"default_value":"","external_name":"step","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"coord[0] = coord[0] - step[0]"}},{"id":"unsafe_next-instance-method","html_id":"unsafe_next-instance-method","name":"unsafe_next","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_array/n_array.cr","line_number":818,"url":null},"def":{"name":"unsafe_next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"0.upto(@coord.size - 1) do |i|\n  if @coord[i] == @last[i]\n    @buffer_index = @buffer_index - ((@coord[i] - @first[i]) * @buffer_step[i])\n    @coord[i] = @first[i]\n    if i == (@coord.size - 1)\n      return stop\n    end\n  else\n    __temp_34 = i\n    @coord[__temp_34] = @coord[__temp_34] + @step[i]\n    @buffer_index = @buffer_index + (@buffer_step[i] * @step[i])\n    break\n  end\nend\n{@narr.buffer.unsafe_fetch(@buffer_index), @coord}\n"}}],"macros":[],"types":[]},{"html_id":"lattice-core/Lattice/NArray/BufferedLexRegionIterator","path":"Lattice/NArray/BufferedLexRegionIterator.html","kind":"class","full_name":"Lattice::NArray::BufferedLexRegionIterator(A, T)","name":"BufferedLexRegionIterator","abstract":false,"superclass":{"html_id":"lattice-core/Lattice/MultiIndexable/RegionIterator","kind":"class","full_name":"Lattice::MultiIndexable::RegionIterator","name":"RegionIterator"},"ancestors":[{"html_id":"lattice-core/Lattice/MultiIndexable/RegionIterator","kind":"class","full_name":"Lattice::MultiIndexable::RegionIterator","name":"RegionIterator"},{"html_id":"lattice-core/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"lattice-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"lattice-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lattice-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/n_array/n_array.cr","line_number":769,"url":null}],"repository_name":"lattice-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"lattice-core/Lattice/NArray/BufferedColexRegionIterator","kind":"class","full_name":"Lattice::NArray::BufferedColexRegionIterator(A, T)","name":"BufferedColexRegionIterator"}],"including_types":[],"namespace":{"html_id":"lattice-core/Lattice/NArray","kind":"class","full_name":"Lattice::NArray(T)","name":"NArray"},"doc":"TODO: compare this iterator, generic MultiIndexable iterator, and old direct each","summary":"<p><span class=\"flag orange\">TODO</span>  compare this iterator, generic MultiIndexable iterator, and old direct each</p>","class_methods":[],"constructors":[{"id":"new(narr:A,region=nil,reverse=false)-class-method","html_id":"new(narr:A,region=nil,reverse=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"A"},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""},{"name":"reverse","doc":null,"default_value":"false","external_name":"reverse","restriction":""}],"args_string":"(narr : A, region = <span class=\"n\">nil</span>, reverse = <span class=\"n\">false</span>)","args_html":"(narr : A, region = <span class=\"n\">nil</span>, reverse = <span class=\"n\">false</span>)","location":{"filename":"src/n_array/n_array.cr","line_number":774,"url":null},"def":{"name":"new","args":[{"name":"narr","doc":null,"default_value":"","external_name":"narr","restriction":"A"},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""},{"name":"reverse","doc":null,"default_value":"false","external_name":"reverse","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = BufferedLexRegionIterator(A, T).allocate\n_.initialize(narr, region, reverse)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"setup_buffer_index(buffer_index,buffer_step,step)-instance-method","html_id":"setup_buffer_index(buffer_index,buffer_step,step)-instance-method","name":"setup_buffer_index","doc":null,"summary":null,"abstract":false,"args":[{"name":"buffer_index","doc":null,"default_value":"","external_name":"buffer_index","restriction":""},{"name":"buffer_step","doc":null,"default_value":"","external_name":"buffer_step","restriction":""},{"name":"step","doc":null,"default_value":"","external_name":"step","restriction":""}],"args_string":"(buffer_index, buffer_step, step)","args_html":"(buffer_index, buffer_step, step)","location":{"filename":"src/n_array/n_array.cr","line_number":785,"url":null},"def":{"name":"setup_buffer_index","args":[{"name":"buffer_index","doc":null,"default_value":"","external_name":"buffer_index","restriction":""},{"name":"buffer_step","doc":null,"default_value":"","external_name":"buffer_step","restriction":""},{"name":"step","doc":null,"default_value":"","external_name":"step","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"buffer_index = buffer_index - (buffer_step[-1] * step[-1])\nbuffer_index\n"}},{"id":"setup_coord(coord,step)-instance-method","html_id":"setup_coord(coord,step)-instance-method","name":"setup_coord","doc":null,"summary":null,"abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"step","doc":null,"default_value":"","external_name":"step","restriction":""}],"args_string":"(coord, step)","args_html":"(coord, step)","location":{"filename":"src/n_array/n_array.cr","line_number":781,"url":null},"def":{"name":"setup_coord","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"step","doc":null,"default_value":"","external_name":"step","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"coord[-1] = coord[-1] - step[-1]"}},{"id":"unsafe_next-instance-method","html_id":"unsafe_next-instance-method","name":"unsafe_next","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_array/n_array.cr","line_number":790,"url":null},"def":{"name":"unsafe_next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@coord.size - 1).downto(0) do |i|\n  if @coord[i] == @last[i]\n    @buffer_index = @buffer_index - ((@coord[i] - @first[i]) * @buffer_step[i])\n    @coord[i] = @first[i]\n    if i == 0\n      return stop\n    end\n  else\n    __temp_30 = i\n    @coord[__temp_30] = @coord[__temp_30] + @step[i]\n    @buffer_index = @buffer_index + (@buffer_step[i] * @step[i])\n    break\n  end\nend\n{@narr.buffer.unsafe_fetch(@buffer_index), @coord}\n"}}],"macros":[],"types":[]}]},{"html_id":"lattice-core/Lattice/Order","path":"Lattice/Order.html","kind":"enum","full_name":"Lattice::Order","name":"Order","abstract":false,"superclass":null,"ancestors":[{"html_id":"lattice-core/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"lattice-core/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"lattice-core/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"lattice-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/n_dim/order.cr","line_number":24,"url":null}],"repository_name":"lattice-core","program":false,"enum":true,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"LEX","name":"LEX","value":"0","doc":null,"summary":null},{"id":"COLEX","name":"COLEX","value":"1","doc":null,"summary":null},{"id":"REV_LEX","name":"REV_LEX","value":"2","doc":null,"summary":null},{"id":"REV_COLEX","name":"REV_COLEX","value":"3","doc":null,"summary":null},{"id":"FASTEST","name":"FASTEST","value":"4","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"lattice-core/Lattice","kind":"module","full_name":"Lattice","name":"Lattice"},"doc":"  def convert(other : MyOrder)\n  end\nend\nAccording to the link below, these shorthands are used in lieu of\nlexicographic, colexicographic, and their reverse forms.\nhttps://en.wikiversity.org/wiki/Lexicographic_and_colexicographic_order","summary":"<p>def convert(other : MyOrder)   end end According to the link below, these shorthands are used in lieu of lexicographic, colexicographic, and their reverse forms.</p>","class_methods":[{"id":"colex?(o)-class-method","html_id":"colex?(o)-class-method","name":"colex?","doc":null,"summary":null,"abstract":false,"args":[{"name":"o","doc":null,"default_value":"","external_name":"o","restriction":""}],"args_string":"(o)","args_html":"(o)","location":{"filename":"src/n_dim/order.cr","line_number":35,"url":null},"def":{"name":"colex?","args":[{"name":"o","doc":null,"default_value":"","external_name":"o","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(o == COLEX) || (o == REV_COLEX)"}},{"id":"reverse?(o)-class-method","html_id":"reverse?(o)-class-method","name":"reverse?","doc":null,"summary":null,"abstract":false,"args":[{"name":"o","doc":null,"default_value":"","external_name":"o","restriction":""}],"args_string":"(o)","args_html":"(o)","location":{"filename":"src/n_dim/order.cr","line_number":31,"url":null},"def":{"name":"reverse?","args":[{"name":"o","doc":null,"default_value":"","external_name":"o","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(o == REV_LEX) || (o == REV_COLEX)"}}],"constructors":[{"id":"compose(o1:Order,o2:Order):Order-class-method","html_id":"compose(o1:Order,o2:Order):Order-class-method","name":"compose","doc":"Composition of the basic orders is commutative.\nreverse and colex properties behave independently, and are each their own inverse\nwith LEX as the identity.\nIf one of two composing orders is FASTEST, we assume order is not relevant and\nreturn FASTEST as the composition.","summary":"<p>Composition of the basic orders is commutative.</p>","abstract":false,"args":[{"name":"o1","doc":null,"default_value":"","external_name":"o1","restriction":"Order"},{"name":"o2","doc":null,"default_value":"","external_name":"o2","restriction":"Order"}],"args_string":"(o1 : Order, o2 : Order) : Order","args_html":"(o1 : <a href=\"../Lattice/Order.html\">Order</a>, o2 : <a href=\"../Lattice/Order.html\">Order</a>) : <a href=\"../Lattice/Order.html\">Order</a>","location":{"filename":"src/n_dim/order.cr","line_number":44,"url":null},"def":{"name":"compose","args":[{"name":"o1","doc":null,"default_value":"","external_name":"o1","restriction":"Order"},{"name":"o2","doc":null,"default_value":"","external_name":"o2","restriction":"Order"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Order","visibility":"Public","body":"if (o1 == FASTEST) || (o2 == FASTEST)\n  return FASTEST\nend\nif (reverse?(o1)) ^ (reverse?(o2))\n  if (colex?(o1)) ^ (colex?(o2))\n    return REV_COLEX\n  else\n    return REV_LEX\n  end\nelse\n  if (colex?(o1)) ^ (colex?(o2))\n    return COLEX\n  else\n    return LEX\n  end\nend\n"}}],"instance_methods":[{"id":"colex?-instance-method","html_id":"colex?-instance-method","name":"colex?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/order.cr","line_number":26,"url":null},"def":{"name":"colex?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == COLEX"}},{"id":"fastest?-instance-method","html_id":"fastest?-instance-method","name":"fastest?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/order.cr","line_number":29,"url":null},"def":{"name":"fastest?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == FASTEST"}},{"id":"lex?-instance-method","html_id":"lex?-instance-method","name":"lex?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/order.cr","line_number":25,"url":null},"def":{"name":"lex?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LEX"}},{"id":"rev_colex?-instance-method","html_id":"rev_colex?-instance-method","name":"rev_colex?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/order.cr","line_number":28,"url":null},"def":{"name":"rev_colex?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == REV_COLEX"}},{"id":"rev_lex?-instance-method","html_id":"rev_lex?-instance-method","name":"rev_lex?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/order.cr","line_number":27,"url":null},"def":{"name":"rev_lex?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == REV_LEX"}}],"macros":[],"types":[]},{"html_id":"lattice-core/Lattice/ProcessedView","path":"Lattice/ProcessedView.html","kind":"class","full_name":"Lattice::ProcessedView(B, T, R)","name":"ProcessedView","abstract":false,"superclass":{"html_id":"lattice-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lattice-core/Lattice/ViewObject","kind":"module","full_name":"Lattice::ViewObject","name":"ViewObject"},{"html_id":"lattice-core/Lattice/MultiIndexable","kind":"module","full_name":"Lattice::MultiIndexable","name":"MultiIndexable"},{"html_id":"lattice-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"lattice-core/Lattice/MultiIndexable","kind":"module","full_name":"Lattice::MultiIndexable","name":"MultiIndexable"},{"html_id":"lattice-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"lattice-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lattice-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/views/processed_view.cr","line_number":5,"url":null}],"repository_name":"lattice-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"lattice-core/Lattice/MultiIndexable","kind":"module","full_name":"Lattice::MultiIndexable","name":"MultiIndexable"},{"html_id":"lattice-core/Lattice/ViewObject","kind":"module","full_name":"Lattice::ViewObject","name":"ViewObject"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"lattice-core/Lattice","kind":"module","full_name":"Lattice","name":"Lattice"},"doc":null,"summary":null,"class_methods":[{"id":"of(src:B,region=nil,order:Order=Order::LEX):ProcessedView(B,T,T)forallT-class-method","html_id":"of(src:B,region=nil,order:Order=Order::LEX):ProcessedView(B,T,T)forallT-class-method","name":"of","doc":"TODO: document","summary":"<p><span class=\"flag orange\">TODO</span>  document</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"B"},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""},{"name":"order","doc":null,"default_value":"Order::LEX","external_name":"order","restriction":"Order"}],"args_string":"(src : B, region = <span class=\"n\">nil</span>, order : Order = <span class=\"t\">Order</span><span class=\"t\">::</span><span class=\"t\">LEX</span>) : ProcessedView(B, T, T) forall T","args_html":"(src : B, region = <span class=\"n\">nil</span>, order : <a href=\"../Lattice/Order.html\">Order</a> = <span class=\"t\">Order</span><span class=\"t\">::</span><span class=\"t\">LEX</span>) : <a href=\"../Lattice/ProcessedView.html\">ProcessedView</a>(B, T, T) forall T","location":{"filename":"src/views/processed_view.cr","line_number":13,"url":null},"def":{"name":"of","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"B"},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""},{"name":"order","doc":null,"default_value":"Order::LEX","external_name":"order","restriction":"Order"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ProcessedView(B, T, T)","visibility":"Public","body":"if src.is_a?(View)\n  src.view(region, order)\nelse\n  region = ViewObject.parse_region(region, src, Order.reverse?(order))\n  ProcessedView(B, T, T).new(src, region, Order.colex?(order), Proc(T, T).new(&.itself))\nend"}},{"id":"of(src:B,region=nil,order:Order=Order::LEX,&block:T->R):ProcessedView(B,T,R)forallT,R-class-method","html_id":"of(src:B,region=nil,order:Order=Order::LEX,&block:T->R):ProcessedView(B,T,R)forallT,R-class-method","name":"of","doc":"TODO: document","summary":"<p><span class=\"flag orange\">TODO</span>  document</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"B"},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""},{"name":"order","doc":null,"default_value":"Order::LEX","external_name":"order","restriction":"Order"}],"args_string":"(src : B, region = <span class=\"n\">nil</span>, order : Order = <span class=\"t\">Order</span><span class=\"t\">::</span><span class=\"t\">LEX</span>, &block : T -> R) : ProcessedView(B, T, R) forall T, R","args_html":"(src : B, region = <span class=\"n\">nil</span>, order : <a href=\"../Lattice/Order.html\">Order</a> = <span class=\"t\">Order</span><span class=\"t\">::</span><span class=\"t\">LEX</span>, &block : T -> R) : <a href=\"../Lattice/ProcessedView.html\">ProcessedView</a>(B, T, R) forall T, R","location":{"filename":"src/views/processed_view.cr","line_number":23,"url":null},"def":{"name":"of","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"B"},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""},{"name":"order","doc":null,"default_value":"Order::LEX","external_name":"order","restriction":"Order"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T -> R)"},"return_type":"ProcessedView(B, T, R)","visibility":"Public","body":"if src.is_a?(View)\n  src.view(region, order, &block)\nelse\n  region = ViewObject.parse_region(region, src, Order.reverse?(order))\n  ProcessedView(B, T, R).new(src, region, Order.colex?(order), block)\nend"}}],"constructors":[],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/views/processed_view.cr","line_number":47,"url":null},"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ProcessedView(B, T, R).new(@src, @region.dup, @is_colex, @proc.dup)"}},{"id":"each(&)-instance-method","html_id":"each(&)-instance-method","name":"each","doc":"Calls `each_in_region` on `@src` is not an option here, since then the conversions do not happen;\nwe can, however, override the block-accepting version to be faster.","summary":"<p>Calls <code>each_in_region</code> on <code>@src</code> is not an option here, since then the conversions do not happen; we can, however, override the block-accepting version to be faster.</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/views/processed_view.cr","line_number":40,"url":null},"def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"order = @is_colex ? Order::COLEX : Order::LEX\n@src.each_in_canonical_region(@region, order: order) do |elem, coord|\n  yield @proc.call(elem)\nend\n"}},{"id":"proc:Proc(T,R)-instance-method","html_id":"proc:Proc(T,R)-instance-method","name":"proc","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Proc(T, R)","args_html":" : Proc(T, R)","location":{"filename":"src/views/processed_view.cr","line_number":10,"url":null},"def":{"name":"proc","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Proc(T, R)","visibility":"Public","body":"@proc"}},{"id":"process(&block:R->U):ProcessedView(T,U)forallU-instance-method","html_id":"process(&block:R->U):ProcessedView(T,U)forallU-instance-method","name":"process","doc":"TODO: document","summary":"<p><span class=\"flag orange\">TODO</span>  document</p>","abstract":false,"args":[],"args_string":"(&block : R -> U) : ProcessedView(T, U) forall U","args_html":"(&block : R -> U) : <a href=\"../Lattice/ProcessedView.html\">ProcessedView</a>(T, U) forall U","location":{"filename":"src/views/processed_view.cr","line_number":62,"url":null},"def":{"name":"process","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(R -> U)"},"return_type":"ProcessedView(T, U)","visibility":"Public","body":"view(@region, &block)"}},{"id":"unsafe_fetch_element(coord):R-instance-method","html_id":"unsafe_fetch_element(coord):R-instance-method","name":"unsafe_fetch_element","doc":"TODO: document","summary":"<p><span class=\"flag orange\">TODO</span>  document</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"args_string":"(coord) : R","args_html":"(coord) : R","location":{"filename":"src/views/processed_view.cr","line_number":52,"url":null},"def":{"name":"unsafe_fetch_element","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"R","visibility":"Public","body":"@proc.call(@src.unsafe_fetch_element(local_coord_to_srcframe(coord)))"}},{"id":"unsafe_fetch_region(region):ProcessedView(T,R)-instance-method","html_id":"unsafe_fetch_region(region):ProcessedView(T,R)-instance-method","name":"unsafe_fetch_region","doc":"TODO: document","summary":"<p><span class=\"flag orange\">TODO</span>  document</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"args_string":"(region) : ProcessedView(T, R)","args_html":"(region) : <a href=\"../Lattice/ProcessedView.html\">ProcessedView</a>(T, R)","location":{"filename":"src/views/processed_view.cr","line_number":57,"url":null},"def":{"name":"unsafe_fetch_region","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ProcessedView(T, R)","visibility":"Public","body":"view(region)"}},{"id":"view(region,order:Order=Order::LEX):ProcessedView(B,T,R)-instance-method","html_id":"view(region,order:Order=Order::LEX):ProcessedView(B,T,R)-instance-method","name":"view","doc":null,"summary":null,"abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""},{"name":"order","doc":null,"default_value":"Order::LEX","external_name":"order","restriction":"Order"}],"args_string":"(region, order : Order = <span class=\"t\">Order</span><span class=\"t\">::</span><span class=\"t\">LEX</span>) : ProcessedView(B, T, R)","args_html":"(region, order : <a href=\"../Lattice/Order.html\">Order</a> = <span class=\"t\">Order</span><span class=\"t\">::</span><span class=\"t\">LEX</span>) : <a href=\"../Lattice/ProcessedView.html\">ProcessedView</a>(B, T, R)","location":{"filename":"src/views/processed_view.cr","line_number":66,"url":null},"def":{"name":"view","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""},{"name":"order","doc":null,"default_value":"Order::LEX","external_name":"order","restriction":"Order"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ProcessedView(B, T, R)","visibility":"Public","body":"new_region = parse_and_convert_region(region, Order.reverse?(order))\nProcessedView(B, T, R).new(@src, new_region, @is_colex ^ (Order.colex?(order)), @proc)\n"}},{"id":"view(region,order:Order=Order::LEX,&block:R->U):ProcessedView(B,T,U)forallU-instance-method","html_id":"view(region,order:Order=Order::LEX,&block:R->U):ProcessedView(B,T,U)forallU-instance-method","name":"view","doc":null,"summary":null,"abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""},{"name":"order","doc":null,"default_value":"Order::LEX","external_name":"order","restriction":"Order"}],"args_string":"(region, order : Order = <span class=\"t\">Order</span><span class=\"t\">::</span><span class=\"t\">LEX</span>, &block : R -> U) : ProcessedView(B, T, U) forall U","args_html":"(region, order : <a href=\"../Lattice/Order.html\">Order</a> = <span class=\"t\">Order</span><span class=\"t\">::</span><span class=\"t\">LEX</span>, &block : R -> U) : <a href=\"../Lattice/ProcessedView.html\">ProcessedView</a>(B, T, U) forall U","location":{"filename":"src/views/processed_view.cr","line_number":71,"url":null},"def":{"name":"view","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""},{"name":"order","doc":null,"default_value":"Order::LEX","external_name":"order","restriction":"Order"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(R -> U)"},"return_type":"ProcessedView(B, T, U)","visibility":"Public","body":"new_region = parse_and_convert_region(region, Order.reverse?(order))\ncomposition = Proc(T, U).new do |x|\n  block.call(@proc.clone.call(x))\nend\nProcessedView(B, T, U).new(@src, new_region, @is_colex ^ (Order.colex?(order)), composition)\n"}}],"macros":[],"types":[]},{"html_id":"lattice-core/Lattice/RegionHelpers","path":"Lattice/RegionHelpers.html","kind":"module","full_name":"Lattice::RegionHelpers","name":"RegionHelpers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/n_dim/region_helpers.cr","line_number":3,"url":null}],"repository_name":"lattice-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"lattice-core/Lattice/RegionHelpers","kind":"module","full_name":"Lattice::RegionHelpers","name":"RegionHelpers"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"lattice-core/Lattice","kind":"module","full_name":"Lattice","name":"Lattice"},"doc":"A set of methods to manage region specifiers.","summary":"<p>A set of methods to manage region specifiers.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"canonicalize_coord(coord,shape):Array(Int32)-instance-method","html_id":"canonicalize_coord(coord,shape):Array(Int32)-instance-method","name":"canonicalize_coord","doc":"Converts a `coord` into canonical form, such that each index in `coord` is positive.\nThrows an `IndexError` if at least one index specified in `coord` is out of range for the\ncorresponding axis of `shape`.","summary":"<p>Converts a <code>coord</code> into canonical form, such that each index in <code>coord</code> is positive.</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"args_string":"(coord, shape) : Array(Int32)","args_html":"(coord, shape) : Array(Int32)","location":{"filename":"src/n_dim/region_helpers.cr","line_number":63,"url":null},"def":{"name":"canonicalize_coord","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"coord.to_a.map_with_index do |index, axis|\n  (canonicalize_index(index, shape, axis)).to_i32\nend"}},{"id":"canonicalize_index(index,shape,axis)-instance-method","html_id":"canonicalize_index(index,shape,axis)-instance-method","name":"canonicalize_index","doc":"Returns the canonical (positive) form of `index` along a particular `axis` of `shape`.\nThrows an `IndexError` if `index` is out of range of `shape` along this axis.","summary":"<p>Returns the canonical (positive) form of <code>index</code> along a particular <code>axis</code> of <code>shape</code>.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":""}],"args_string":"(index, shape, axis)","args_html":"(index, shape, axis)","location":{"filename":"src/n_dim/region_helpers.cr","line_number":38,"url":null},"def":{"name":"canonicalize_index","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"canonicalize_index(index, shape[axis])"}},{"id":"canonicalize_index(index,size)-instance-method","html_id":"canonicalize_index(index,size)-instance-method","name":"canonicalize_index","doc":null,"summary":null,"abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"args_string":"(index, size)","args_html":"(index, size)","location":{"filename":"src/n_dim/region_helpers.cr","line_number":42,"url":null},"def":{"name":"canonicalize_index","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if !(has_index?(index, size))\n  raise(IndexError.new(\"Could not canonicalize index: #{index} is not a valid index for an axis of length #{size}.\"))\nend\ncanonicalize_index_unsafe(index, size)\n"}},{"id":"canonicalize_range(range,shape,axis):SteppedRange-instance-method","html_id":"canonicalize_range(range,shape,axis):SteppedRange-instance-method","name":"canonicalize_range","doc":null,"summary":null,"abstract":false,"args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":""}],"args_string":"(range, shape, axis) : SteppedRange","args_html":"(range, shape, axis) : <a href=\"../Lattice/RegionHelpers/SteppedRange.html\">SteppedRange</a>","location":{"filename":"src/n_dim/region_helpers.cr","line_number":67,"url":null},"def":{"name":"canonicalize_range","args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SteppedRange","visibility":"Public","body":"SteppedRange.new(range, shape[axis])"}},{"id":"canonicalize_region(region,shape):Array(SteppedRange)-instance-method","html_id":"canonicalize_region(region,shape):Array(SteppedRange)-instance-method","name":"canonicalize_region","doc":"TODO: specify parameters, implement step sizes other than 1\nConverts a region specifier to a legal, canonical region specifier.\nIf the input region is not a valid subregion of the given shape, an error will be thrown.\nReturns a list of `SteppedRange`s in canonical form - i.e, it satisfies:\n  - the size of the list is equal to the size of `shape`\n  - For each `steppedRange`:\n    - `step != 0`\n    - `range.begin` and `range.end` are explicitly integers representing valid indices for the\n          corresponding axis of `shape`, in canonical (positive) form\n    - if `step > 0`, then `range.begin <= range.end`, and if `step < 0`, then `range.begin <= range.end`\n    - `range` is inclusive","summary":"<p><span class=\"flag orange\">TODO</span>  specify parameters, implement step sizes other than 1 Converts a region specifier to a legal, canonical region specifier.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"args_string":"(region, shape) : Array(SteppedRange)","args_html":"(region, shape) : Array(<a href=\"../Lattice/RegionHelpers/SteppedRange.html\">SteppedRange</a>)","location":{"filename":"src/n_dim/region_helpers.cr","line_number":82,"url":null},"def":{"name":"canonicalize_region","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(SteppedRange)","visibility":"Public","body":"canonical_region = region.to_a + ([..] * (shape.size - region.size))\ncanonical_region = canonical_region.map_with_index do |rule, axis|\n  next canonicalize_range(rule, shape, axis)\nend\n"}},{"id":"compatible_shapes(shape1,shape2)-instance-method","html_id":"compatible_shapes(shape1,shape2)-instance-method","name":"compatible_shapes","doc":"checks if two shapes define the same data layout, i.e. are equal up to trailing ones.","summary":"<p>checks if two shapes define the same data layout, i.e.</p>","abstract":false,"args":[{"name":"shape1","doc":null,"default_value":"","external_name":"shape1","restriction":""},{"name":"shape2","doc":null,"default_value":"","external_name":"shape2","restriction":""}],"args_string":"(shape1, shape2)","args_html":"(shape1, shape2)","location":{"filename":"src/n_dim/region_helpers.cr","line_number":112,"url":null},"def":{"name":"compatible_shapes","args":[{"name":"shape1","doc":null,"default_value":"","external_name":"shape1","restriction":""},{"name":"shape2","doc":null,"default_value":"","external_name":"shape2","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if shape1.size > shape2.size\n  larger = shape1\n  shared_dims = shape2.size\nelse\n  larger = shape2\n  shared_dims = shape1.size\nend\nshared_dims.times do |i|\n  if shape1[i] != shape2[i]\n    return false\n  end\nend\n(shared_dims...larger.size).step(1) do |i|\n  if larger[i] != 1\n    return false\n  end\nend\ntrue\n"}},{"id":"full_region(shape):Array(SteppedRange)-instance-method","html_id":"full_region(shape):Array(SteppedRange)-instance-method","name":"full_region","doc":null,"summary":null,"abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"args_string":"(shape) : Array(SteppedRange)","args_html":"(shape) : Array(<a href=\"../Lattice/RegionHelpers/SteppedRange.html\">SteppedRange</a>)","location":{"filename":"src/n_dim/region_helpers.cr","line_number":132,"url":null},"def":{"name":"full_region","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(SteppedRange)","visibility":"Public","body":"shape.map do |dim|\n  SteppedRange.new(0, dim - 1, 1)\nend"}},{"id":"has_coord?(coord,shape)-instance-method","html_id":"has_coord?(coord,shape)-instance-method","name":"has_coord?","doc":"Checks if `coord` is a valid coordinate for an array-like object with dimensions specified by `shape`.\nA coord is a list (Enumerable) of integers specifying an index along each axis in `shape`.","summary":"<p>Checks if <code>coord</code> is a valid coordinate for an array-like object with dimensions specified by <code>shape</code>.</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"args_string":"(coord, shape)","args_html":"(coord, shape)","location":{"filename":"src/n_dim/region_helpers.cr","line_number":19,"url":null},"def":{"name":"has_coord?","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if coord.size != shape.size\n  return false\nend\ncoord.to_a.map_with_index do |index, axis|\n  has_index?(index, shape, axis)\nend.all?\n"}},{"id":"has_index?(index,shape,axis)-instance-method","html_id":"has_index?(index,shape,axis)-instance-method","name":"has_index?","doc":"Checks if `index` is a valid index along `axis` for an array-like object with dimensions specified by `shape`.","summary":"<p>Checks if <code>index</code> is a valid index along <code>axis</code> for an array-like object with dimensions specified by <code>shape</code>.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":""}],"args_string":"(index, shape, axis)","args_html":"(index, shape, axis)","location":{"filename":"src/n_dim/region_helpers.cr","line_number":13,"url":null},"def":{"name":"has_index?","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"has_index?(index, shape[axis])"}},{"id":"has_index?(index,size)-instance-method","html_id":"has_index?(index,size)-instance-method","name":"has_index?","doc":null,"summary":null,"abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"args_string":"(index, size)","args_html":"(index, size)","location":{"filename":"src/n_dim/region_helpers.cr","line_number":8,"url":null},"def":{"name":"has_index?","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"index >= (-size) && index < size"}},{"id":"has_region?(region,shape)-instance-method","html_id":"has_region?(region,shape)-instance-method","name":"has_region?","doc":"Checks if `region` is a valid region specifier for an array-like object with dimensions specified by `shape`.\nA region specifier (RS) is a list of integers and ranges specifying an index, or set of indices, along\neach axis in `shape`.","summary":"<p>Checks if <code>region</code> is a valid region specifier for an array-like object with dimensions specified by <code>shape</code>.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"args_string":"(region, shape)","args_html":"(region, shape)","location":{"filename":"src/n_dim/region_helpers.cr","line_number":27,"url":null},"def":{"name":"has_region?","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  canonicalize_region(region, shape)\nrescue exception\n  return false\nend\ntrue\n"}},{"id":"measure_canonical_region(region):Array(Int32)-instance-method","html_id":"measure_canonical_region(region):Array(Int32)-instance-method","name":"measure_canonical_region","doc":"See `#measure_region`. The only difference is that this method assumes\nthe region is already canonicalized, which can provide speedups.\nTODO: account for step sizes","summary":"<p>See <code><a href=\"../Lattice/RegionHelpers.html#measure_region(region,shape):Array(Int32)-instance-method\">#measure_region</a></code>.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"args_string":"(region) : Array(Int32)","args_html":"(region) : Array(Int32)","location":{"filename":"src/n_dim/region_helpers.cr","line_number":98,"url":null},"def":{"name":"measure_canonical_region","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"shape = [] of Int32\nregion.each do |range|\n  shape << range.size\nend\nif shape.empty?\n  return [1]\nend\nreturn shape\n"}},{"id":"measure_region(region,shape):Array(Int32)-instance-method","html_id":"measure_region(region,shape):Array(Int32)-instance-method","name":"measure_region","doc":"Returns the `shape` of a region when sampled from this `{{@type}}`.\nFor example, on a 5x5x5 {{@type}}, `measure_shape(1..3, ..., 5)` => `[3, 5]`.","summary":"<p>Returns the <code>shape</code> of a region when sampled from this <code>{{@type}}</code>.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"args_string":"(region, shape) : Array(Int32)","args_html":"(region, shape) : Array(Int32)","location":{"filename":"src/n_dim/region_helpers.cr","line_number":91,"url":null},"def":{"name":"measure_region","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"measure_canonical_region(canonicalize_region(region, shape))"}},{"id":"translate_shape(region_shape,coord,parent_shape):Array(SteppedRange)-instance-method","html_id":"translate_shape(region_shape,coord,parent_shape):Array(SteppedRange)-instance-method","name":"translate_shape","doc":null,"summary":null,"abstract":false,"args":[{"name":"region_shape","doc":null,"default_value":"","external_name":"region_shape","restriction":""},{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"parent_shape","doc":null,"default_value":"","external_name":"parent_shape","restriction":""}],"args_string":"(region_shape, coord, parent_shape) : Array(SteppedRange)","args_html":"(region_shape, coord, parent_shape) : Array(<a href=\"../Lattice/RegionHelpers/SteppedRange.html\">SteppedRange</a>)","location":{"filename":"src/n_dim/region_helpers.cr","line_number":138,"url":null},"def":{"name":"translate_shape","args":[{"name":"region_shape","doc":null,"default_value":"","external_name":"region_shape","restriction":""},{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""},{"name":"parent_shape","doc":null,"default_value":"","external_name":"parent_shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(SteppedRange)","visibility":"Public","body":"top_left = canonicalize_coord(coord, parent_shape)\ntop_left.map_with_index do |start, i|\n  SteppedRange.new_canonical(start, (start + region_shape[i]) - 1, 1)\nend\n"}},{"id":"trim_region(region,shape)-instance-method","html_id":"trim_region(region,shape)-instance-method","name":"trim_region","doc":null,"summary":null,"abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"args_string":"(region, shape)","args_html":"(region, shape)","location":{"filename":"src/n_dim/region_helpers.cr","line_number":145,"url":null},"def":{"name":"trim_region","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"region.map_with_index do |range, i|\n  (SteppedRange.new(range, Int32::MAX)).trim(shape[i])\nend"}}],"macros":[],"types":[{"html_id":"lattice-core/Lattice/RegionHelpers/SteppedRange","path":"Lattice/RegionHelpers/SteppedRange.html","kind":"struct","full_name":"Lattice::RegionHelpers::SteppedRange","name":"SteppedRange","abstract":false,"superclass":{"html_id":"lattice-core/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"lattice-core/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"lattice-core/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"lattice-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/n_dim/region_helpers.cr","line_number":153,"url":null}],"repository_name":"lattice-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"lattice-core/Lattice/RegionHelpers","kind":"module","full_name":"Lattice::RegionHelpers","name":"RegionHelpers"},"doc":"Stores similar information to a StepIterator, which (as of Crystal 0.36) have issues of uncertain types and may change behaviour in the future.\nTo avoid compatibility issues we define our own struct here.","summary":"<p>Stores similar information to a StepIterator, which (as of Crystal 0.36) have issues of uncertain types and may change behaviour in the future.</p>","class_methods":[{"id":"empty-class-method","html_id":"empty-class-method","name":"empty","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/n_dim/region_helpers.cr","line_number":159,"url":null},"def":{"name":"empty","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SteppedRange.new"}},{"id":"new_canonical(start,stop,step)-class-method","html_id":"new_canonical(start,stop,step)-class-method","name":"new_canonical","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":""},{"name":"stop","doc":null,"default_value":"","external_name":"stop","restriction":""},{"name":"step","doc":null,"default_value":"","external_name":"step","restriction":""}],"args_string":"(start, stop, step)","args_html":"(start, stop, step)","location":{"filename":"src/n_dim/region_helpers.cr","line_number":182,"url":null},"def":{"name":"new_canonical","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":""},{"name":"stop","doc":null,"default_value":"","external_name":"stop","restriction":""},{"name":"step","doc":null,"default_value":"","external_name":"step","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.new(start, stop, step)"}}],"constructors":[{"id":"new(range:Range,step:Int,bound:Int)-class-method","html_id":"new(range:Range,step:Int,bound:Int)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range"},{"name":"step","doc":null,"default_value":"","external_name":"step","restriction":"Int"},{"name":"bound","doc":null,"default_value":"","external_name":"bound","restriction":"Int"}],"args_string":"(range : Range, step : Int, bound : Int)","args_html":"(range : Range, step : Int, bound : Int)","location":{"filename":"src/n_dim/region_helpers.cr","line_number":163,"url":null},"def":{"name":"new","args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range"},{"name":"step","doc":null,"default_value":"","external_name":"step","restriction":"Int"},{"name":"bound","doc":null,"default_value":"","external_name":"bound","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"canonicalize(range.begin, range.end, range.excludes_end?, bound, step)"}},{"id":"new(range:SteppedRange,bound)-class-method","html_id":"new(range:SteppedRange,bound)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"SteppedRange"},{"name":"bound","doc":null,"default_value":"","external_name":"bound","restriction":""}],"args_string":"(range : SteppedRange, bound)","args_html":"(range : <a href=\"../../Lattice/RegionHelpers/SteppedRange.html\">SteppedRange</a>, bound)","location":{"filename":"src/n_dim/region_helpers.cr","line_number":167,"url":null},"def":{"name":"new","args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"SteppedRange"},{"name":"bound","doc":null,"default_value":"","external_name":"bound","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"canonicalize(range.begin, range.end, false, bound, range.step)"}},{"id":"new(range:Range,bound)-class-method","html_id":"new(range:Range,bound)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range"},{"name":"bound","doc":null,"default_value":"","external_name":"bound","restriction":""}],"args_string":"(range : Range, bound)","args_html":"(range : Range, bound)","location":{"filename":"src/n_dim/region_helpers.cr","line_number":171,"url":null},"def":{"name":"new","args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range"},{"name":"bound","doc":null,"default_value":"","external_name":"bound","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"first = range.begin\ncase first\nwhen Range\n  return canonicalize(first.begin, range.end, range.excludes_end?, bound, first.end)\nelse\n  return canonicalize(first, range.end, range.excludes_end?, bound)\nend\n"}},{"id":"new(index:Int,bound)-class-method","html_id":"new(index:Int,bound)-class-method","name":"new","doc":"This method is supposed to capture numeric objects. We avoid specifying type\nexplicitly so we can have the most interoperability.","summary":"<p>This method is supposed to capture numeric objects.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"bound","doc":null,"default_value":"","external_name":"bound","restriction":""}],"args_string":"(index : Int, bound)","args_html":"(index : Int, bound)","location":{"filename":"src/n_dim/region_helpers.cr","line_number":188,"url":null},"def":{"name":"new","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"bound","doc":null,"default_value":"","external_name":"bound","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SteppedRange.new(RegionHelpers.canonicalize_index(index, bound))"}}],"instance_methods":[{"id":"begin:Int32-instance-method","html_id":"begin:Int32-instance-method","name":"begin","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/n_dim/region_helpers.cr","line_number":156,"url":null},"def":{"name":"begin","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@begin"}},{"id":"compose(subrange:SteppedRange):SteppedRange-instance-method","html_id":"compose(subrange:SteppedRange):SteppedRange-instance-method","name":"compose","doc":"Like translate, but given a range of indices in the frame of this range,\nreturn the range of absolute indices.\ne.g.: `SteppedRange.new( 1..10, 3 ).subrange( SteppedRange.new( 1..3, 2) )`\nwill give `4..6..10`, i.e. a range of the first and third elements of the former range.\nNOTE: this method assumes subrange may be contained in range, i.e.\n`subrange.begin < @size` and `subrange.end < @size`","summary":"<p>Like translate, but given a range of indices in the frame of this range, return the range of absolute indices.</p>","abstract":false,"args":[{"name":"subrange","doc":null,"default_value":"","external_name":"subrange","restriction":"SteppedRange"}],"args_string":"(subrange : SteppedRange) : SteppedRange","args_html":"(subrange : <a href=\"../../Lattice/RegionHelpers/SteppedRange.html\">SteppedRange</a>) : <a href=\"../../Lattice/RegionHelpers/SteppedRange.html\">SteppedRange</a>","location":{"filename":"src/n_dim/region_helpers.cr","line_number":233,"url":null},"def":{"name":"compose","args":[{"name":"subrange","doc":null,"default_value":"","external_name":"subrange","restriction":"SteppedRange"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SteppedRange","visibility":"Public","body":"SteppedRange.new(local_to_absolute(subrange.begin), local_to_absolute(subrange.end), @step * subrange.step)"}},{"id":"each(&)-instance-method","html_id":"each(&)-instance-method","name":"each","doc":"Given __subspace__, a canonical `Range`, and a  __step_size__, invokes the block with an index\nfor every nth integer in __subspace__. This is more or less the same as range.each, but supports\ngoing forwards or backwards.\nTODO: Better docs\nTODO find out why these 2 implementations are so drastically different in performance! Maybe because the functionality has been recently modified? (Crystal 0.36)","summary":"<p>Given <strong>subspace</strong>, a canonical <code>Range</code>, and a  __step_size__, invokes the block with an index for every nth integer in <strong>subspace</strong>.</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/n_dim/region_helpers.cr","line_number":300,"url":null},"def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"idx = @begin\nif @step > 0\n  while idx <= @end\n    yield idx\n    idx = idx + @step\n  end\nelse\n  while idx >= @end\n    yield idx\n    idx = idx + @step\n  end\nend\n"}},{"id":"empty?:Bool-instance-method","html_id":"empty?:Bool-instance-method","name":"empty?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/n_dim/region_helpers.cr","line_number":210,"url":null},"def":{"name":"empty?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@size == 0"}},{"id":"end:Int32-instance-method","html_id":"end:Int32-instance-method","name":"end","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/n_dim/region_helpers.cr","line_number":157,"url":null},"def":{"name":"end","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@end"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/n_dim/region_helpers.cr","line_number":318,"url":null},"def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @size == 1\n  io << @begin.to_s\nelse\n  if @step.abs == 1\n    io << \"#{@begin..@end}\"\n  else\n    io << \"#{@begin}..#{@step}..#{@end}\"\n  end\nend"}},{"id":"local_to_absolute(index):Int32-instance-method","html_id":"local_to_absolute(index):Int32-instance-method","name":"local_to_absolute","doc":"TODO: rename\nGiven an index in the frame of this range, get the absolute index.\ne.g.: `SteppedRange.new( 1..10, 3 ).translate(1) #=> 4`\nsince counting by 3 from 1, the 2nd entry (index 1) is 4.\nNOTE: this method assumes `index < @size`.","summary":"<p><span class=\"flag orange\">TODO</span>  rename Given an index in the frame of this range, get the absolute index.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""}],"args_string":"(index) : Int32","args_html":"(index) : Int32","location":{"filename":"src/n_dim/region_helpers.cr","line_number":223,"url":null},"def":{"name":"local_to_absolute","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@begin + (index * @step)"}},{"id":"reverse:SteppedRange-instance-method","html_id":"reverse:SteppedRange-instance-method","name":"reverse","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : SteppedRange","args_html":" : <a href=\"../../Lattice/RegionHelpers/SteppedRange.html\">SteppedRange</a>","location":{"filename":"src/n_dim/region_helpers.cr","line_number":214,"url":null},"def":{"name":"reverse","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SteppedRange","visibility":"Public","body":"SteppedRange.new(@end, @begin, -@step)"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/n_dim/region_helpers.cr","line_number":154,"url":null},"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}},{"id":"step:Int32-instance-method","html_id":"step:Int32-instance-method","name":"step","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/n_dim/region_helpers.cr","line_number":155,"url":null},"def":{"name":"step","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@step"}},{"id":"trim(new_bound):SteppedRange-instance-method","html_id":"trim(new_bound):SteppedRange-instance-method","name":"trim","doc":null,"summary":null,"abstract":false,"args":[{"name":"new_bound","doc":null,"default_value":"","external_name":"new_bound","restriction":""}],"args_string":"(new_bound) : SteppedRange","args_html":"(new_bound) : <a href=\"../../Lattice/RegionHelpers/SteppedRange.html\">SteppedRange</a>","location":{"filename":"src/n_dim/region_helpers.cr","line_number":237,"url":null},"def":{"name":"trim","args":[{"name":"new_bound","doc":null,"default_value":"","external_name":"new_bound","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SteppedRange","visibility":"Public","body":"if @begin >= new_bound\n  if @end >= new_bound\n    return SteppedRange.empty\n  else\n    if @step < 0\n      span = (new_bound - 1) - @end\n      span = span - (span % @step.abs)\n      return SteppedRange.new(@end + span, @end, @step)\n    end\n  end\nelse\n  if @step > 0 && @end >= new_bound\n    span = (new_bound - 1) - @begin\n    span = span - (span % @step.abs)\n    return SteppedRange.new(@begin, @begin + span, @step)\n  end\nend\nself\n"}}],"macros":[],"types":[]}]},{"html_id":"lattice-core/Lattice/View","path":"Lattice/View.html","kind":"class","full_name":"Lattice::View(B, T)","name":"View","abstract":false,"superclass":{"html_id":"lattice-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lattice-core/Lattice/MultiWritable","kind":"module","full_name":"Lattice::MultiWritable","name":"MultiWritable"},{"html_id":"lattice-core/Lattice/ViewObject","kind":"module","full_name":"Lattice::ViewObject","name":"ViewObject"},{"html_id":"lattice-core/Lattice/MultiIndexable","kind":"module","full_name":"Lattice::MultiIndexable","name":"MultiIndexable"},{"html_id":"lattice-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"lattice-core/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lattice-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/views/view.cr","line_number":5,"url":null}],"repository_name":"lattice-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"lattice-core/Lattice/MultiWritable","kind":"module","full_name":"Lattice::MultiWritable","name":"MultiWritable"},{"html_id":"lattice-core/Lattice/ViewObject","kind":"module","full_name":"Lattice::ViewObject","name":"ViewObject"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"lattice-core/Lattice","kind":"module","full_name":"Lattice","name":"Lattice"},"doc":null,"summary":null,"class_methods":[{"id":"of(src:B,region=nil,order:Order=Order::LEX)-class-method","html_id":"of(src:B,region=nil,order:Order=Order::LEX)-class-method","name":"of","doc":null,"summary":null,"abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"B"},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""},{"name":"order","doc":null,"default_value":"Order::LEX","external_name":"order","restriction":"Order"}],"args_string":"(src : B, region = <span class=\"n\">nil</span>, order : Order = <span class=\"t\">Order</span><span class=\"t\">::</span><span class=\"t\">LEX</span>)","args_html":"(src : B, region = <span class=\"n\">nil</span>, order : <a href=\"../Lattice/Order.html\">Order</a> = <span class=\"t\">Order</span><span class=\"t\">::</span><span class=\"t\">LEX</span>)","location":{"filename":"src/views/view.cr","line_number":15,"url":null},"def":{"name":"of","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"B"},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":""},{"name":"order","doc":null,"default_value":"Order::LEX","external_name":"order","restriction":"Order"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if src.is_a?(View)\n  src.view(region, order)\nelse\n  new_region = ViewObject.parse_region(region, src, Order.reverse?(order))\n  View(B, typeof(src.sample)).new(src, new_region, Order.colex?(order))\nend"}}],"constructors":[],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/views/view.cr","line_number":31,"url":null},"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"View(B, T).new(@src, @region.dup, @is_colex)"}},{"id":"each-instance-method","html_id":"each-instance-method","name":"each","doc":"Calls `each_in_region` on `@src`, as a faster alternative to the default of\ncalling `each` on `self` which must convert every index","summary":"<p>Calls <code>each_in_region</code> on <code>@src</code>, as a faster alternative to the default of calling <code><a href=\"../Lattice/View.html#each-instance-method\">#each</a></code> on <code>self</code> which must convert every index</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/views/view.cr","line_number":41,"url":null},"def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"order = @is_colex ? Order::COLEX : Order::LEX\n@src.each_in_canonical_region(@region, order: order)\n"}},{"id":"process(&block:T->R)forallR-instance-method","html_id":"process(&block:T->R)forallR-instance-method","name":"process","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block : T -> R) forall R","args_html":"(&block : T -> R) forall R","location":{"filename":"src/views/view.cr","line_number":35,"url":null},"def":{"name":"process","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T -> R)"},"return_type":"","visibility":"Public","body":"ProcessedView(B, T, R).new(@src, @region, @is_colex, block)"}},{"id":"unsafe_fetch_element(coord):T-instance-method","html_id":"unsafe_fetch_element(coord):T-instance-method","name":"unsafe_fetch_element","doc":"Retrieves the element specified by `coord`, assuming that `coord` is in canonical form and in-bounds for this `{{type}}`.\nFor full specification of canonical form see `RegionHelpers` documentation. TODO: make this actually happen","summary":"<p>Retrieves the element specified by <code>coord</code>, assuming that <code>coord</code> is in canonical form and in-bounds for this <code>{{type}}</code>.</p>","abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"args_string":"(coord) : T","args_html":"(coord) : T","location":{"filename":"src/views/view.cr","line_number":46,"url":null},"def":{"name":"unsafe_fetch_element","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"@src.unsafe_fetch_element(local_coord_to_srcframe(coord))"}},{"id":"unsafe_fetch_region(region):View(T)-instance-method","html_id":"unsafe_fetch_region(region):View(T)-instance-method","name":"unsafe_fetch_region","doc":"Copies the elements in `region` to a new `{{type}}`, assuming that `region` is in canonical form and in-bounds for this `{{type}}`.\nFor full specification of canonical form see `RegionHelpers` documentation. TODO: make this actually happen","summary":"<p>Copies the elements in <code>region</code> to a new <code>{{type}}</code>, assuming that <code>region</code> is in canonical form and in-bounds for this <code>{{type}}</code>.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"args_string":"(region) : View(T)","args_html":"(region) : <a href=\"../Lattice/View.html\">View</a>(T)","location":{"filename":"src/views/view.cr","line_number":50,"url":null},"def":{"name":"unsafe_fetch_region","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"View(T)","visibility":"Public","body":"view(region)"}},{"id":"unsafe_set_element(coord)-instance-method","html_id":"unsafe_set_element(coord)-instance-method","name":"unsafe_set_element","doc":null,"summary":null,"abstract":false,"args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"args_string":"(coord)","args_html":"(coord)","location":{"filename":"src/views/view.cr","line_number":54,"url":null},"def":{"name":"unsafe_set_element","args":[{"name":"coord","doc":null,"default_value":"","external_name":"coord","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ensure_writable\n@src.unsafe_set_element(local_coord_to_srcframe(coord))\n"}},{"id":"unsafe_set_region(region:Enumerable,src:MultiIndexable(T))-instance-method","html_id":"unsafe_set_region(region:Enumerable,src:MultiIndexable(T))-instance-method","name":"unsafe_set_region","doc":"Copies the elements from a MultiIndexable `src` into `region`, assuming that `region` is in canonical form and in-bounds for this `{{type}}`\nand the shape of `region` matches the shape of `src`.\nFor full specification of canonical form see `RegionHelpers` documentation. TODO: make this actually happen","summary":"<p>Copies the elements from a MultiIndexable <code>src</code> into <code>region</code>, assuming that <code>region</code> is in canonical form and in-bounds for this <code>{{type}}</code> and the shape of <code>region</code> matches the shape of <code>src</code>.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"},{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"MultiIndexable(T)"}],"args_string":"(region : Enumerable, src : MultiIndexable(T))","args_html":"(region : Enumerable, src : <a href=\"../Lattice/MultiIndexable.html\">MultiIndexable</a>(T))","location":{"filename":"src/views/view.cr","line_number":59,"url":null},"def":{"name":"unsafe_set_region","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"},{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"MultiIndexable(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ensure_writable\n@src.unsafe_set_region(local_region_to_srcframe(region), src)\n"}},{"id":"unsafe_set_region(region:Enumerable,value:T)-instance-method","html_id":"unsafe_set_region(region:Enumerable,value:T)-instance-method","name":"unsafe_set_region","doc":"Sets each element in `region` to `value`, assuming that `region` is in canonical form and in-bounds for this `{{type}}`\nFor full specification of canonical form see `RegionHelpers` documentation. TODO: make this actually happen","summary":"<p>Sets each element in <code>region</code> to <code>value</code>, assuming that <code>region</code> is in canonical form and in-bounds for this <code>{{type}}</code> For full specification of canonical form see <code><a href=\"../Lattice/RegionHelpers.html\">RegionHelpers</a></code> documentation.</p>","abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(region : Enumerable, value : T)","args_html":"(region : Enumerable, value : T)","location":{"filename":"src/views/view.cr","line_number":64,"url":null},"def":{"name":"unsafe_set_region","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"Enumerable"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ensure_writable\n@src.unsafe_set_region(local_region_to_srcframe(region), value)\n"}},{"id":"view(region,order:Order=Order::LEX):View(B,T)-instance-method","html_id":"view(region,order:Order=Order::LEX):View(B,T)-instance-method","name":"view","doc":null,"summary":null,"abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""},{"name":"order","doc":null,"default_value":"Order::LEX","external_name":"order","restriction":"Order"}],"args_string":"(region, order : Order = <span class=\"t\">Order</span><span class=\"t\">::</span><span class=\"t\">LEX</span>) : View(B, T)","args_html":"(region, order : <a href=\"../Lattice/Order.html\">Order</a> = <span class=\"t\">Order</span><span class=\"t\">::</span><span class=\"t\">LEX</span>) : <a href=\"../Lattice/View.html\">View</a>(B, T)","location":{"filename":"src/views/view.cr","line_number":69,"url":null},"def":{"name":"view","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""},{"name":"order","doc":null,"default_value":"Order::LEX","external_name":"order","restriction":"Order"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"View(B, T)","visibility":"Public","body":"new_region = parse_and_convert_region(region, Order.reverse?(order))\nView(B, T).new(@src, new_region, @is_colex ^ (Order.colex?(order)))\n"}}],"macros":[{"id":"ensure_writable-macro","html_id":"ensure_writable-macro","name":"ensure_writable","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","location":{"filename":"src/views/view.cr","line_number":9,"url":null},"def":{"name":"ensure_writable","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"            \n{% if B < MultiWritable %}{% else %}\n                {% raise(\"Could not write to #{@type}: #{B} is not a MultiWritable.\") %}\n            {% end %}\n\n        \n"}}],"types":[]},{"html_id":"lattice-core/Lattice/ViewObject","path":"Lattice/ViewObject.html","kind":"module","full_name":"Lattice::ViewObject(B, T, R)","name":"ViewObject","abstract":false,"superclass":null,"ancestors":[{"html_id":"lattice-core/Lattice/MultiIndexable","kind":"module","full_name":"Lattice::MultiIndexable","name":"MultiIndexable"},{"html_id":"lattice-core/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"locations":[{"filename":"src/views/view_object.cr","line_number":10,"url":null}],"repository_name":"lattice-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"lattice-core/Lattice/MultiIndexable","kind":"module","full_name":"Lattice::MultiIndexable","name":"MultiIndexable"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"lattice-core/Lattice/ProcessedView","kind":"class","full_name":"Lattice::ProcessedView(B, T, R)","name":"ProcessedView"},{"html_id":"lattice-core/Lattice/View","kind":"class","full_name":"Lattice::View(B, T)","name":"View"}],"namespace":{"html_id":"lattice-core/Lattice","kind":"module","full_name":"Lattice","name":"Lattice"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","args_html":"","location":{"filename":"src/views/view_object.cr","line_number":26,"url":null},"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"region:Array(RegionHelpers::SteppedRange)-instance-method","html_id":"region:Array(RegionHelpers::SteppedRange)-instance-method","name":"region","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(RegionHelpers::SteppedRange)","args_html":" : Array(<a href=\"../Lattice/RegionHelpers/SteppedRange.html\">RegionHelpers::SteppedRange</a>)","location":{"filename":"src/views/view_object.cr","line_number":19,"url":null},"def":{"name":"region","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(RegionHelpers::SteppedRange)","visibility":"Public","body":"@region"}},{"id":"reverse-instance-method","html_id":"reverse-instance-method","name":"reverse","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/views/view_object.cr","line_number":48,"url":null},"def":{"name":"reverse","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"clone.reverse!"}},{"id":"reverse!-instance-method","html_id":"reverse!-instance-method","name":"reverse!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/views/view_object.cr","line_number":43,"url":null},"def":{"name":"reverse!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@region.map!(&.reverse)\nself\n"}},{"id":"shape:Array(Int32)-instance-method","html_id":"shape:Array(Int32)-instance-method","name":"shape","doc":"For use externally","summary":"<p>For use externally</p>","abstract":false,"args":[],"args_string":" : Array(Int32)","args_html":" : Array(Int32)","location":{"filename":"src/views/view_object.cr","line_number":29,"url":null},"def":{"name":"shape","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@shape.dup"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":"Returns the number of elements in the `{{type}}`; equal to `shape.product`.","summary":"<p>Returns the number of elements in the <code>{{type}}</code>; equal to <code>shape.product</code>.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/views/view_object.cr","line_number":23,"url":null},"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}},{"id":"src:B-instance-method","html_id":"src:B-instance-method","name":"src","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : B","args_html":" : B","location":{"filename":"src/views/view_object.cr","line_number":18,"url":null},"def":{"name":"src","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"B","visibility":"Public","body":"@src"}},{"id":"transpose-instance-method","html_id":"transpose-instance-method","name":"transpose","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/views/view_object.cr","line_number":52,"url":null},"def":{"name":"transpose","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"clone.transpose!"}},{"id":"transpose!-instance-method","html_id":"transpose!-instance-method","name":"transpose!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/views/view_object.cr","line_number":37,"url":null},"def":{"name":"transpose!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@is_colex = !@is_colex\n@shape = @shape.reverse\nself\n"}},{"id":"view(region,order:Order)-instance-method","html_id":"view(region,order:Order)-instance-method","name":"view","doc":null,"summary":null,"abstract":true,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""},{"name":"order","doc":null,"default_value":"","external_name":"order","restriction":"Order"}],"args_string":"(region, order : Order)","args_html":"(region, order : <a href=\"../Lattice/Order.html\">Order</a>)","location":{"filename":"src/views/view_object.cr","line_number":25,"url":null},"def":{"name":"view","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""},{"name":"order","doc":null,"default_value":"","external_name":"order","restriction":"Order"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"view(*region)-instance-method","html_id":"view(*region)-instance-method","name":"view","doc":null,"summary":null,"abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"args_string":"(*region)","args_html":"(*region)","location":{"filename":"src/views/view_object.cr","line_number":33,"url":null},"def":{"name":"view","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"view(region, order: Order::LEX)"}}],"macros":[],"types":[]}]},{"html_id":"lattice-core/Number","path":"Number.html","kind":"struct","full_name":"Number","name":"Number","abstract":true,"superclass":{"html_id":"lattice-core/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"lattice-core/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"lattice-core/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"lattice-core/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/patches/number.cr","line_number":6,"url":null}],"repository_name":"lattice-core","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"lattice-core/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"this patch makes it possible to operate elementwise on a Number and an NArray (in that order)\ne.g.\n``` 5 + NArray.new([1,2,3]) #=> [6,7,8] ```","summary":"<p>this patch makes it possible to operate elementwise on a Number and an NArray (in that order) e.g.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"%(other:MultiIndexable(U))forallU-instance-method","html_id":"%(other:MultiIndexable(U))forallU-instance-method","name":"%","doc":"Invokes `#%` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code>#%</code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":7,"url":null},"def":{"name":"%","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self % elem\nend"}},{"id":"&(other:MultiIndexable(U))forallU-instance-method","html_id":"&(other:MultiIndexable(U))forallU-instance-method","name":"&","doc":"Invokes `#&` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Number.html#&(other:MultiIndexable(U))forallU-instance-method\">#&</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":7,"url":null},"def":{"name":"&","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self & elem\nend"}},{"id":"&**(other:MultiIndexable(U))forallU-instance-method","html_id":"&**(other:MultiIndexable(U))forallU-instance-method","name":"&**","doc":"Invokes `#&**` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Number.html#&**(other:MultiIndexable(U))forallU-instance-method\">#&**</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":7,"url":null},"def":{"name":"&**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self &** elem\nend"}},{"id":"&+(other:MultiIndexable(U))forallU-instance-method","html_id":"&+(other:MultiIndexable(U))forallU-instance-method","name":"&+","doc":"Invokes `#&+` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Number.html#&+(other:MultiIndexable(U))forallU-instance-method\">#&+</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":7,"url":null},"def":{"name":"&+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self &+ elem\nend"}},{"id":"&-(other:MultiIndexable(U))forallU-instance-method","html_id":"&-(other:MultiIndexable(U))forallU-instance-method","name":"&-","doc":"Invokes `#&-` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Number.html#&-(other:MultiIndexable(U))forallU-instance-method\">#&-</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":7,"url":null},"def":{"name":"&-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self &- elem\nend"}},{"id":"*(other:MultiIndexable(U))forallU-instance-method","html_id":"*(other:MultiIndexable(U))forallU-instance-method","name":"*","doc":"Invokes `#*` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Number.html#*(other:MultiIndexable(U))forallU-instance-method\">#*</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":7,"url":null},"def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self * elem\nend"}},{"id":"**(other:MultiIndexable(U))forallU-instance-method","html_id":"**(other:MultiIndexable(U))forallU-instance-method","name":"**","doc":"Invokes `#**` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Number.html#**(other:MultiIndexable(U))forallU-instance-method\">#**</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":7,"url":null},"def":{"name":"**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self ** elem\nend"}},{"id":"+(other:MultiIndexable(U))forallU-instance-method","html_id":"+(other:MultiIndexable(U))forallU-instance-method","name":"+","doc":"Invokes `#+` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Number.html#+(other:MultiIndexable(U))forallU-instance-method\">#+</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":7,"url":null},"def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self + elem\nend"}},{"id":"-(other:MultiIndexable(U))forallU-instance-method","html_id":"-(other:MultiIndexable(U))forallU-instance-method","name":"-","doc":"Invokes `#-` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Number.html#-(other:MultiIndexable(U))forallU-instance-method\">#-</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":7,"url":null},"def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self - elem\nend"}},{"id":"/(other:MultiIndexable(U))forallU-instance-method","html_id":"/(other:MultiIndexable(U))forallU-instance-method","name":"/","doc":"Invokes `#/` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Number.html#/(other:MultiIndexable(U))forallU-instance-method\">#/</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":7,"url":null},"def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self / elem\nend"}},{"id":"//(other:MultiIndexable(U))forallU-instance-method","html_id":"//(other:MultiIndexable(U))forallU-instance-method","name":"//","doc":"Invokes `#//` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Number.html#//(other:MultiIndexable(U))forallU-instance-method\">#//</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":7,"url":null},"def":{"name":"//","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self // elem\nend"}},{"id":"<(other:MultiIndexable(U))forallU-instance-method","html_id":"<(other:MultiIndexable(U))forallU-instance-method","name":"<","doc":"Invokes `#<` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Number.html#%3C(other:MultiIndexable(U))forallU-instance-method\">#<</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":7,"url":null},"def":{"name":"<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self < elem\nend"}},{"id":"<=(other:MultiIndexable(U))forallU-instance-method","html_id":"<=(other:MultiIndexable(U))forallU-instance-method","name":"<=","doc":"Invokes `#<=` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Number.html#%3C=(other:MultiIndexable(U))forallU-instance-method\">#<=</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":7,"url":null},"def":{"name":"<=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self <= elem\nend"}},{"id":">(other:MultiIndexable(U))forallU-instance-method","html_id":">(other:MultiIndexable(U))forallU-instance-method","name":">","doc":"Invokes `#>` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Number.html#%3E(other:MultiIndexable(U))forallU-instance-method\">#></a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":7,"url":null},"def":{"name":">","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self > elem\nend"}},{"id":">=(other:MultiIndexable(U))forallU-instance-method","html_id":">=(other:MultiIndexable(U))forallU-instance-method","name":">=","doc":"Invokes `#>=` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Number.html#%3E=(other:MultiIndexable(U))forallU-instance-method\">#>=</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":7,"url":null},"def":{"name":">=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self >= elem\nend"}},{"id":"^(other:MultiIndexable(U))forallU-instance-method","html_id":"^(other:MultiIndexable(U))forallU-instance-method","name":"^","doc":"Invokes `#^` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Number.html#%5E(other:MultiIndexable(U))forallU-instance-method\">#^</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":7,"url":null},"def":{"name":"^","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self ^ elem\nend"}},{"id":"|(other:MultiIndexable(U))forallU-instance-method","html_id":"|(other:MultiIndexable(U))forallU-instance-method","name":"|","doc":"Invokes `#|` element-wise between `self` and *other*, returning\nan `NArray` that contains the results.","summary":"<p>Invokes <code><a href=\"Number.html#%7C(other:MultiIndexable(U))forallU-instance-method\">#|</a></code> element-wise between <code>self</code> and <em>other</em>, returning an <code>NArray</code> that contains the results.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"args_string":"(other : MultiIndexable(U)) forall U","args_html":"(other : MultiIndexable(U)) forall U","location":{"filename":"src/patches/number.cr","line_number":7,"url":null},"def":{"name":"|","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiIndexable(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.map do |elem|\n  self | elem\nend"}}],"macros":[],"types":[]}]}})